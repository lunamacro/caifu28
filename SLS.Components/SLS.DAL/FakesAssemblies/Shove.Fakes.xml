<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shove.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.ShoveDelegates">
            <summary>包含用于 Shove 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimAlipay">
            <summary>Shove.Alipay.Alipay 的填充码类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipay.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipay.#ctor(Shove.Alipay.Alipay)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipay.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipay.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.BubbleSortStringArray">
            <summary>设置 Alipay.BubbleSort(String[] r) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.Constructor">
            <summary>设置 Alipay.Alipay() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.CreatUrlStringStringStringStringStringStringStringString">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String sign_type, String key, String return_url, String _input_charset, String ReturnUrl) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.CreatUrlStringStringStringStringStringStringStringStringStringStringStringStringStringInt32StringArray">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String return_url, String notify_url, String out_trade_no, String subject, String payment_type, String total_fee, String seller_email, String Key, String Charset, String SignType, Int32 Type, String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.CreatUrlStringStringStringStringStringStringStringStringStringStringStringStringStringString">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String sign_type, String batch_no, String account_name, String batch_fee, String batch_num, String email, String pay_date, String detail_data, String key, String notify_url, String _input_charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.CreatUrlStringStringStringStringStringStringStringStringStringStringStringStringStringStringArray">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String return_url, String notify_url, String out_trade_no, String subject, String payment_type, String total_fee, String seller_email, String Key, String Charset, String SignType, String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.CreaturlStringStringStringStringStringStringStringArray">
            <summary>设置 Alipay.Creaturl(String gateway, String service, String partner, String Key, String sign_type, String Charset, String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.DufwrFw2v3String">
            <summary>设置 Alipay.DufwrFw2v3(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetDownloadParamsStringStringStringString">
            <summary>设置 Alipay.GetDownloadParams(String service, String _input_charset, String partner, String biz_type) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetMD5ByteArrayString">
            <summary>设置 Alipay.GetMD5(Byte[] Date, String Charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetMD5StringString">
            <summary>设置 Alipay.GetMD5(String s, String Charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetMD5StringStringString">
            <summary>设置 Alipay.GetMD5(String s, String SellerEmail, String Charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetMD5StringStringStringInt32">
            <summary>设置 Alipay.GetMD5(String s, String SellerEmail, String Charset, Int32 Type) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetOption">
            <summary>设置 Alipay.GetOption() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetOptionForMySQL">
            <summary>设置 Alipay.GetOptionForMySQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.GetUploadParamsStringStringStringStringStringString">
            <summary>设置 Alipay.GetUploadParams(String service, String _input_charset, String partner, String file_digest_type, String biz_type, String agentID) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.Get_HttpPublicStringStringInt32Int32">
            <summary>设置 Alipay.Get_HttpPublic(String NotifyService, String NotifyID, Int32 NotifyType, Int32 _TimeOut) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.Get_HttpStringStringStringStringInt32Int32">
            <summary>设置 Alipay.Get_Http(String NotifyService, String NotifyID, String SellerEmail, String Charset, Int32 NotifyType, Int32 _TimeOut) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.Get_HttpStringStringStringStringInt32Int32Int32">
            <summary>设置 Alipay.Get_Http(String NotifyService, String NotifyID, String SellerEmail, String Charset, Int32 NotifyType, Int32 _TimeOut, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.LK7wsMqmJb">
            <summary>设置 Alipay.LK7wsMqmJb() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.MbrwFPh1pl">
            <summary>设置 Alipay.MbrwFPh1pl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.QueryStringStringInt32StringRefStringRef">
            <summary>设置 Alipay.Query(String gateway, String PaymentNumber, Int32 Type, String&amp; AlipayPaymentNumber, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.QueryStringStringStringRefStringRef">
            <summary>设置 Alipay.Query(String gateway, String PaymentNumber, String&amp; AlipayPaymentNumber, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.SetOptionForMySQLStringString">
            <summary>设置 Alipay.SetOptionForMySQL(String CallCert, String OptionValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.SetOptionStringString">
            <summary>设置 Alipay.SetOption(String CallCert, String OptionValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.TBpwUnErcXStringStringStringRefStringRef">
            <summary>设置 Alipay.TBpwUnErcX(String  , String  , String&amp;  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.UgYwfdCkyBString">
            <summary>设置 Alipay.UgYwfdCkyB(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.hHbwQo4itjStringStringStringStringStringStringStringStringStringStringStringStringStringStringArray">
            <summary>设置 Alipay.hHbwQo4itj(String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.oAfw2GURi5String">
            <summary>设置 Alipay.oAfw2GURi5(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.qc7wle5JIk">
            <summary>设置 Alipay.qc7wle5JIk() 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimAlipay.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.CreatUrlStringStringStringStringStringStringStringString">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String sign_type, String key, String return_url, String _input_charset, String ReturnUrl) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.CreatUrlStringStringStringStringStringStringStringStringStringStringStringStringStringInt32StringArray">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String return_url, String notify_url, String out_trade_no, String subject, String payment_type, String total_fee, String seller_email, String Key, String Charset, String SignType, Int32 Type, String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.CreatUrlStringStringStringStringStringStringStringStringStringStringStringStringStringString">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String sign_type, String batch_no, String account_name, String batch_fee, String batch_num, String email, String pay_date, String detail_data, String key, String notify_url, String _input_charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.CreatUrlStringStringStringStringStringStringStringStringStringStringStringStringStringStringArray">
            <summary>设置 Alipay.CreatUrl(String gateway, String service, String partner, String return_url, String notify_url, String out_trade_no, String subject, String payment_type, String total_fee, String seller_email, String Key, String Charset, String SignType, String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.CreaturlStringStringStringStringStringStringStringArray">
            <summary>设置 Alipay.Creaturl(String gateway, String service, String partner, String Key, String sign_type, String Charset, String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.DufwrFw2v3String">
            <summary>设置 Alipay.DufwrFw2v3(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.GetDownloadParamsStringStringStringString">
            <summary>设置 Alipay.GetDownloadParams(String service, String _input_charset, String partner, String biz_type) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.GetMD5StringStringString">
            <summary>设置 Alipay.GetMD5(String s, String SellerEmail, String Charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.GetMD5StringStringStringInt32">
            <summary>设置 Alipay.GetMD5(String s, String SellerEmail, String Charset, Int32 Type) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.GetOption">
            <summary>设置 Alipay.GetOption() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.GetOptionForMySQL">
            <summary>设置 Alipay.GetOptionForMySQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.GetUploadParamsStringStringStringStringStringString">
            <summary>设置 Alipay.GetUploadParams(String service, String _input_charset, String partner, String file_digest_type, String biz_type, String agentID) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.Get_HttpPublicStringStringInt32Int32">
            <summary>设置 Alipay.Get_HttpPublic(String NotifyService, String NotifyID, Int32 NotifyType, Int32 _TimeOut) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.Get_HttpStringStringStringStringInt32Int32">
            <summary>设置 Alipay.Get_Http(String NotifyService, String NotifyID, String SellerEmail, String Charset, Int32 NotifyType, Int32 _TimeOut) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.Get_HttpStringStringStringStringInt32Int32Int32">
            <summary>设置 Alipay.Get_Http(String NotifyService, String NotifyID, String SellerEmail, String Charset, Int32 NotifyType, Int32 _TimeOut, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.LK7wsMqmJb">
            <summary>设置 Alipay.LK7wsMqmJb() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.MbrwFPh1pl">
            <summary>设置 Alipay.MbrwFPh1pl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.QueryStringStringInt32StringRefStringRef">
            <summary>设置 Alipay.Query(String gateway, String PaymentNumber, Int32 Type, String&amp; AlipayPaymentNumber, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.QueryStringStringStringRefStringRef">
            <summary>设置 Alipay.Query(String gateway, String PaymentNumber, String&amp; AlipayPaymentNumber, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.SetOptionForMySQLStringString">
            <summary>设置 Alipay.SetOptionForMySQL(String CallCert, String OptionValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.SetOptionStringString">
            <summary>设置 Alipay.SetOption(String CallCert, String OptionValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.TBpwUnErcXStringStringStringRefStringRef">
            <summary>设置 Alipay.TBpwUnErcX(String  , String  , String&amp;  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.UgYwfdCkyBString">
            <summary>设置 Alipay.UgYwfdCkyB(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.hHbwQo4itjStringStringStringStringStringStringStringStringStringStringStringStringStringStringArray">
            <summary>设置 Alipay.hHbwQo4itj(String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String  , String[] ParamsAndValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipay.AllInstances.oAfw2GURi5String">
            <summary>设置 Alipay.oAfw2GURi5(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimAlipayCommon">
            <summary>Shove.Alipay.AlipayCommon 的填充码类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipayCommon.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipayCommon.#ctor(Shove.Alipay.AlipayCommon)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipayCommon.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimAlipayCommon.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipayCommon.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipayCommon.BubbleSortStringArray">
            <summary>设置 AlipayCommon.BubbleSort(String[] r) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipayCommon.Constructor">
            <summary>设置 AlipayCommon.AlipayCommon() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipayCommon.GetFileMD5String">
            <summary>设置 AlipayCommon.GetFileMD5(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimAlipayCommon.GetSignStringArrayString">
            <summary>设置 AlipayCommon.GetSign(String[] fields, String safeCode) 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimAlipayCommon.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimCreateBytes">
            <summary>Shove.Alipay.CreateBytes 的填充码类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimCreateBytes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimCreateBytes.#ctor(Shove.Alipay.CreateBytes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimCreateBytes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimCreateBytes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.BoundaryGet">
            <summary>设置 CreateBytes.get_Boundary() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.Constructor">
            <summary>设置 CreateBytes.CreateBytes() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.ContentTypeGet">
            <summary>设置 CreateBytes.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.CreateFieldDataStringString">
            <summary>设置 CreateBytes.CreateFieldData(String fieldName, String fieldValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.CreateFieldDataStringStringStringByteArray">
            <summary>设置 CreateBytes.CreateFieldData(String fieldName, String filename, String contentType, Byte[] fileBytes) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.JoinBytesArrayList">
            <summary>设置 CreateBytes.JoinBytes(ArrayList byteArrays) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.UploadDataStringByteArrayByteArrayOut">
            <summary>设置 CreateBytes.UploadData(String uploadUrl, Byte[] bytes, Byte[]&amp; responseBytes) 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances.BoundaryGet">
            <summary>设置 CreateBytes.get_Boundary() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances.ContentTypeGet">
            <summary>设置 CreateBytes.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances.CreateFieldDataStringString">
            <summary>设置 CreateBytes.CreateFieldData(String fieldName, String fieldValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances.CreateFieldDataStringStringStringByteArray">
            <summary>设置 CreateBytes.CreateFieldData(String fieldName, String filename, String contentType, Byte[] fileBytes) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances.JoinBytesArrayList">
            <summary>设置 CreateBytes.JoinBytes(ArrayList byteArrays) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimCreateBytes.AllInstances.UploadDataStringByteArrayByteArrayOut">
            <summary>设置 CreateBytes.UploadData(String uploadUrl, Byte[] bytes, Byte[]&amp; responseBytes) 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimHttpClient">
            <summary>Shove.Alipay.HttpClient 的填充码类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimHttpClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimHttpClient.#ctor(Shove.Alipay.HttpClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimHttpClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.ShimHttpClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AppendEnd">
            <summary>设置 HttpClient.AppendEnd() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AppendFileStringString">
            <summary>设置 HttpClient.AppendFile(String txtName, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AppendTextStringString">
            <summary>设置 HttpClient.AppendText(String txtName, String content) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.BoundaryGet">
            <summary>设置 HttpClient.get_Boundary() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.BoundarySetString">
            <summary>设置 HttpClient.set_Boundary(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.Constructor">
            <summary>设置 HttpClient.HttpClient() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.WriterSetStream">
            <summary>设置 HttpClient.set_Writer(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.Yp7wbXaloAString">
            <summary>设置 HttpClient.Yp7wbXaloA(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.ShimHttpClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.AppendEnd">
            <summary>设置 HttpClient.AppendEnd() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.AppendFileStringString">
            <summary>设置 HttpClient.AppendFile(String txtName, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.AppendTextStringString">
            <summary>设置 HttpClient.AppendText(String txtName, String content) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.BoundaryGet">
            <summary>设置 HttpClient.get_Boundary() 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.BoundarySetString">
            <summary>设置 HttpClient.set_Boundary(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.WriterSetStream">
            <summary>设置 HttpClient.set_Writer(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.ShimHttpClient.AllInstances.Yp7wbXaloAString">
            <summary>设置 HttpClient.Yp7wbXaloA(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.StubAlipay">
            <summary>Shove.Alipay.Alipay 的存根类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubAlipay.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubAlipay.InitializeStub">
            <summary>初始化 type StubAlipay 的新实例</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubAlipay.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubAlipay.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubAlipay.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.StubAlipayCommon">
            <summary>Shove.Alipay.AlipayCommon 的存根类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubAlipayCommon.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubAlipayCommon.InitializeStub">
            <summary>初始化 type StubAlipayCommon 的新实例</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubAlipayCommon.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubAlipayCommon.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubAlipayCommon.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.StubCreateBytes">
            <summary>Shove.Alipay.CreateBytes 的存根类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubCreateBytes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubCreateBytes.InitializeStub">
            <summary>初始化 type StubCreateBytes 的新实例</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubCreateBytes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubCreateBytes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubCreateBytes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Alipay.Fakes.StubHttpClient">
            <summary>Shove.Alipay.HttpClient 的存根类型</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubHttpClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Alipay.Fakes.StubHttpClient.InitializeStub">
            <summary>初始化 type StubHttpClient 的新实例</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubHttpClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubHttpClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Alipay.Fakes.StubHttpClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimBIG5Verifier">
            <summary>Shove.CharsetDetector.BIG5Verifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.#ctor(Shove.CharsetDetector.BIG5Verifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.Constructor">
            <summary>设置 BIG5Verifier.BIG5Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.cclass">
            <summary>设置 BIG5Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.charset">
            <summary>设置 BIG5Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.isUCS2">
            <summary>设置 BIG5Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.stFactor">
            <summary>设置 BIG5Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.states">
            <summary>设置 BIG5Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.AllInstances.cclass">
            <summary>设置 BIG5Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.AllInstances.charset">
            <summary>设置 BIG5Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.AllInstances.isUCS2">
            <summary>设置 BIG5Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.AllInstances.stFactor">
            <summary>设置 BIG5Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBIG5Verifier.AllInstances.states">
            <summary>设置 BIG5Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimBig5Statistics">
            <summary>Shove.CharsetDetector.Big5Statistics 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBig5Statistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBig5Statistics.#ctor(Shove.CharsetDetector.Big5Statistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBig5Statistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimBig5Statistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.Constructor">
            <summary>设置 Big5Statistics.Big5Statistics() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mFirstByteFreq">
            <summary>设置 Big5Statistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mFirstByteMean">
            <summary>设置 Big5Statistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mFirstByteStdDev">
            <summary>设置 Big5Statistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mFirstByteWeight">
            <summary>设置 Big5Statistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mSecondByteFreq">
            <summary>设置 Big5Statistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mSecondByteMean">
            <summary>设置 Big5Statistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mSecondByteStdDev">
            <summary>设置 Big5Statistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.mSecondByteWeight">
            <summary>设置 Big5Statistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mFirstByteFreq">
            <summary>设置 Big5Statistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mFirstByteMean">
            <summary>设置 Big5Statistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mFirstByteStdDev">
            <summary>设置 Big5Statistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mFirstByteWeight">
            <summary>设置 Big5Statistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mSecondByteFreq">
            <summary>设置 Big5Statistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mSecondByteMean">
            <summary>设置 Big5Statistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mSecondByteStdDev">
            <summary>设置 Big5Statistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimBig5Statistics.AllInstances.mSecondByteWeight">
            <summary>设置 Big5Statistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimCP1252Verifier">
            <summary>Shove.CharsetDetector.CP1252Verifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.#ctor(Shove.CharsetDetector.CP1252Verifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.Constructor">
            <summary>设置 CP1252Verifier.CP1252Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.cclass">
            <summary>设置 CP1252Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.charset">
            <summary>设置 CP1252Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.isUCS2">
            <summary>设置 CP1252Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.stFactor">
            <summary>设置 CP1252Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.states">
            <summary>设置 CP1252Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.AllInstances.cclass">
            <summary>设置 CP1252Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.AllInstances.charset">
            <summary>设置 CP1252Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.AllInstances.isUCS2">
            <summary>设置 CP1252Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.AllInstances.stFactor">
            <summary>设置 CP1252Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimCP1252Verifier.AllInstances.states">
            <summary>设置 CP1252Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimDetector">
            <summary>Shove.CharsetDetector.Detector 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimDetector.#ctor(Shove.CharsetDetector.Detector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimDetector.Bind(Shove.CharsetDetector.ICharsetDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.Constructor">
            <summary>设置 Detector.Detector() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.ConstructorInt32">
            <summary>设置 Detector.Detector(Int32 langFlag) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.DoItByteArrayInt32Boolean">
            <summary>设置 Detector.DoIt(Byte[] aBuf, Int32 aLen, Boolean oDontFeedMe) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.Done">
            <summary>设置 Detector.Done() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.InitICharsetDetectionObserver">
            <summary>设置 Detector.Init(ICharsetDetectionObserver aObserver) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.ReportString">
            <summary>设置 Detector.Report(String charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.isAsciiByteArrayInt32">
            <summary>设置 Detector.isAscii(Byte[] aBuf, Int32 aLen) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.AllInstances.DoItByteArrayInt32Boolean">
            <summary>设置 Detector.DoIt(Byte[] aBuf, Int32 aLen, Boolean oDontFeedMe) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.AllInstances.Done">
            <summary>设置 Detector.Done() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.AllInstances.InitICharsetDetectionObserver">
            <summary>设置 Detector.Init(ICharsetDetectionObserver aObserver) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.AllInstances.ReportString">
            <summary>设置 Detector.Report(String charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimDetector.AllInstances.isAsciiByteArrayInt32">
            <summary>设置 Detector.isAscii(Byte[] aBuf, Int32 aLen) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics">
            <summary>Shove.CharsetDetector.EUCJPStatistics 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.#ctor(Shove.CharsetDetector.EUCJPStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.Constructor">
            <summary>设置 EUCJPStatistics.EUCJPStatistics() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mFirstByteFreq">
            <summary>设置 EUCJPStatistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mFirstByteMean">
            <summary>设置 EUCJPStatistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mFirstByteStdDev">
            <summary>设置 EUCJPStatistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mFirstByteWeight">
            <summary>设置 EUCJPStatistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mSecondByteFreq">
            <summary>设置 EUCJPStatistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mSecondByteMean">
            <summary>设置 EUCJPStatistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mSecondByteStdDev">
            <summary>设置 EUCJPStatistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.mSecondByteWeight">
            <summary>设置 EUCJPStatistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mFirstByteFreq">
            <summary>设置 EUCJPStatistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mFirstByteMean">
            <summary>设置 EUCJPStatistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mFirstByteStdDev">
            <summary>设置 EUCJPStatistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mFirstByteWeight">
            <summary>设置 EUCJPStatistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mSecondByteFreq">
            <summary>设置 EUCJPStatistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mSecondByteMean">
            <summary>设置 EUCJPStatistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mSecondByteStdDev">
            <summary>设置 EUCJPStatistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPStatistics.AllInstances.mSecondByteWeight">
            <summary>设置 EUCJPStatistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier">
            <summary>Shove.CharsetDetector.EUCJPVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.#ctor(Shove.CharsetDetector.EUCJPVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.Constructor">
            <summary>设置 EUCJPVerifier.EUCJPVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.cclass">
            <summary>设置 EUCJPVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.charset">
            <summary>设置 EUCJPVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.isUCS2">
            <summary>设置 EUCJPVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.stFactor">
            <summary>设置 EUCJPVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.states">
            <summary>设置 EUCJPVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.AllInstances.cclass">
            <summary>设置 EUCJPVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.AllInstances.charset">
            <summary>设置 EUCJPVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.AllInstances.isUCS2">
            <summary>设置 EUCJPVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.AllInstances.stFactor">
            <summary>设置 EUCJPVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCJPVerifier.AllInstances.states">
            <summary>设置 EUCJPVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics">
            <summary>Shove.CharsetDetector.EUCKRStatistics 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.#ctor(Shove.CharsetDetector.EUCKRStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.Constructor">
            <summary>设置 EUCKRStatistics.EUCKRStatistics() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mFirstByteFreq">
            <summary>设置 EUCKRStatistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mFirstByteMean">
            <summary>设置 EUCKRStatistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mFirstByteStdDev">
            <summary>设置 EUCKRStatistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mFirstByteWeight">
            <summary>设置 EUCKRStatistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mSecondByteFreq">
            <summary>设置 EUCKRStatistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mSecondByteMean">
            <summary>设置 EUCKRStatistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mSecondByteStdDev">
            <summary>设置 EUCKRStatistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.mSecondByteWeight">
            <summary>设置 EUCKRStatistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mFirstByteFreq">
            <summary>设置 EUCKRStatistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mFirstByteMean">
            <summary>设置 EUCKRStatistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mFirstByteStdDev">
            <summary>设置 EUCKRStatistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mFirstByteWeight">
            <summary>设置 EUCKRStatistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mSecondByteFreq">
            <summary>设置 EUCKRStatistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mSecondByteMean">
            <summary>设置 EUCKRStatistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mSecondByteStdDev">
            <summary>设置 EUCKRStatistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRStatistics.AllInstances.mSecondByteWeight">
            <summary>设置 EUCKRStatistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier">
            <summary>Shove.CharsetDetector.EUCKRVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.#ctor(Shove.CharsetDetector.EUCKRVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.Constructor">
            <summary>设置 EUCKRVerifier.EUCKRVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.cclass">
            <summary>设置 EUCKRVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.charset">
            <summary>设置 EUCKRVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.isUCS2">
            <summary>设置 EUCKRVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.stFactor">
            <summary>设置 EUCKRVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.states">
            <summary>设置 EUCKRVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.AllInstances.cclass">
            <summary>设置 EUCKRVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.AllInstances.charset">
            <summary>设置 EUCKRVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.AllInstances.isUCS2">
            <summary>设置 EUCKRVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.AllInstances.stFactor">
            <summary>设置 EUCKRVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCKRVerifier.AllInstances.states">
            <summary>设置 EUCKRVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCSampler">
            <summary>Shove.CharsetDetector.EUCSampler 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCSampler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCSampler.#ctor(Shove.CharsetDetector.EUCSampler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCSampler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCSampler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.CalFreq">
            <summary>设置 EUCSampler.CalFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.Constructor">
            <summary>设置 EUCSampler.EUCSampler() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.EnoughData">
            <summary>设置 EUCSampler.EnoughData() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.GetScoreSingleArraySingleArray">
            <summary>设置 EUCSampler.GetScore(Single[] array1, Single[] array2) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.GetScoreSingleArraySingleSingleArraySingle">
            <summary>设置 EUCSampler.GetScore(Single[] aFirstByteFreq, Single aFirstByteWeight, Single[] aSecondByteFreq, Single aSecondByteWeight) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.GetSomeData">
            <summary>设置 EUCSampler.GetSomeData() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.Reset">
            <summary>设置 EUCSampler.Reset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.SampleByteArrayInt32">
            <summary>设置 EUCSampler.Sample(Byte[] aIn, Int32 aLen) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.CalFreq">
            <summary>设置 EUCSampler.CalFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.EnoughData">
            <summary>设置 EUCSampler.EnoughData() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.GetScoreSingleArraySingleArray">
            <summary>设置 EUCSampler.GetScore(Single[] array1, Single[] array2) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.GetScoreSingleArraySingleSingleArraySingle">
            <summary>设置 EUCSampler.GetScore(Single[] aFirstByteFreq, Single aFirstByteWeight, Single[] aSecondByteFreq, Single aSecondByteWeight) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.GetSomeData">
            <summary>设置 EUCSampler.GetSomeData() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.Reset">
            <summary>设置 EUCSampler.Reset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCSampler.AllInstances.SampleByteArrayInt32">
            <summary>设置 EUCSampler.Sample(Byte[] aIn, Int32 aLen) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCStatistics">
            <summary>Shove.CharsetDetector.EUCStatistics 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCStatistics.#ctor(Shove.CharsetDetector.EUCStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCStatistics.Constructor">
            <summary>设置 EUCStatistics.EUCStatistics() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics">
            <summary>Shove.CharsetDetector.EUCTWStatistics 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.#ctor(Shove.CharsetDetector.EUCTWStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.Constructor">
            <summary>设置 EUCTWStatistics.EUCTWStatistics() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mFirstByteFreq">
            <summary>设置 EUCTWStatistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mFirstByteMean">
            <summary>设置 EUCTWStatistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mFirstByteStdDev">
            <summary>设置 EUCTWStatistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mFirstByteWeight">
            <summary>设置 EUCTWStatistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mSecondByteFreq">
            <summary>设置 EUCTWStatistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mSecondByteMean">
            <summary>设置 EUCTWStatistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mSecondByteStdDev">
            <summary>设置 EUCTWStatistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.mSecondByteWeight">
            <summary>设置 EUCTWStatistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mFirstByteFreq">
            <summary>设置 EUCTWStatistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mFirstByteMean">
            <summary>设置 EUCTWStatistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mFirstByteStdDev">
            <summary>设置 EUCTWStatistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mFirstByteWeight">
            <summary>设置 EUCTWStatistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mSecondByteFreq">
            <summary>设置 EUCTWStatistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mSecondByteMean">
            <summary>设置 EUCTWStatistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mSecondByteStdDev">
            <summary>设置 EUCTWStatistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWStatistics.AllInstances.mSecondByteWeight">
            <summary>设置 EUCTWStatistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier">
            <summary>Shove.CharsetDetector.EUCTWVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.#ctor(Shove.CharsetDetector.EUCTWVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.Constructor">
            <summary>设置 EUCTWVerifier.EUCTWVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.cclass">
            <summary>设置 EUCTWVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.charset">
            <summary>设置 EUCTWVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.isUCS2">
            <summary>设置 EUCTWVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.stFactor">
            <summary>设置 EUCTWVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.states">
            <summary>设置 EUCTWVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.AllInstances.cclass">
            <summary>设置 EUCTWVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.AllInstances.charset">
            <summary>设置 EUCTWVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.AllInstances.isUCS2">
            <summary>设置 EUCTWVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.AllInstances.stFactor">
            <summary>设置 EUCTWVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimEUCTWVerifier.AllInstances.states">
            <summary>设置 EUCTWVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimGB18030Verifier">
            <summary>Shove.CharsetDetector.GB18030Verifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.#ctor(Shove.CharsetDetector.GB18030Verifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.Constructor">
            <summary>设置 GB18030Verifier.GB18030Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.cclass">
            <summary>设置 GB18030Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.charset">
            <summary>设置 GB18030Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.isUCS2">
            <summary>设置 GB18030Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.stFactor">
            <summary>设置 GB18030Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.states">
            <summary>设置 GB18030Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.AllInstances.cclass">
            <summary>设置 GB18030Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.AllInstances.charset">
            <summary>设置 GB18030Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.AllInstances.isUCS2">
            <summary>设置 GB18030Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.AllInstances.stFactor">
            <summary>设置 GB18030Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB18030Verifier.AllInstances.states">
            <summary>设置 GB18030Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimGB2312Statistics">
            <summary>Shove.CharsetDetector.GB2312Statistics 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.#ctor(Shove.CharsetDetector.GB2312Statistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.Constructor">
            <summary>设置 GB2312Statistics.GB2312Statistics() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mFirstByteFreq">
            <summary>设置 GB2312Statistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mFirstByteMean">
            <summary>设置 GB2312Statistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mFirstByteStdDev">
            <summary>设置 GB2312Statistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mFirstByteWeight">
            <summary>设置 GB2312Statistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mSecondByteFreq">
            <summary>设置 GB2312Statistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mSecondByteMean">
            <summary>设置 GB2312Statistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mSecondByteStdDev">
            <summary>设置 GB2312Statistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.mSecondByteWeight">
            <summary>设置 GB2312Statistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mFirstByteFreq">
            <summary>设置 GB2312Statistics.mFirstByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mFirstByteMean">
            <summary>设置 GB2312Statistics.mFirstByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mFirstByteStdDev">
            <summary>设置 GB2312Statistics.mFirstByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mFirstByteWeight">
            <summary>设置 GB2312Statistics.mFirstByteWeight() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mSecondByteFreq">
            <summary>设置 GB2312Statistics.mSecondByteFreq() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mSecondByteMean">
            <summary>设置 GB2312Statistics.mSecondByteMean() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mSecondByteStdDev">
            <summary>设置 GB2312Statistics.mSecondByteStdDev() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Statistics.AllInstances.mSecondByteWeight">
            <summary>设置 GB2312Statistics.mSecondByteWeight() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimGB2312Verifier">
            <summary>Shove.CharsetDetector.GB2312Verifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.#ctor(Shove.CharsetDetector.GB2312Verifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.Constructor">
            <summary>设置 GB2312Verifier.GB2312Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.cclass">
            <summary>设置 GB2312Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.charset">
            <summary>设置 GB2312Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.isUCS2">
            <summary>设置 GB2312Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.stFactor">
            <summary>设置 GB2312Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.states">
            <summary>设置 GB2312Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.AllInstances.cclass">
            <summary>设置 GB2312Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.AllInstances.charset">
            <summary>设置 GB2312Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.AllInstances.isUCS2">
            <summary>设置 GB2312Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.AllInstances.stFactor">
            <summary>设置 GB2312Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimGB2312Verifier.AllInstances.states">
            <summary>设置 GB2312Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimHZVerifier">
            <summary>Shove.CharsetDetector.HZVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimHZVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimHZVerifier.#ctor(Shove.CharsetDetector.HZVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimHZVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimHZVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.Constructor">
            <summary>设置 HZVerifier.HZVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.cclass">
            <summary>设置 HZVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.charset">
            <summary>设置 HZVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.isUCS2">
            <summary>设置 HZVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.stFactor">
            <summary>设置 HZVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.states">
            <summary>设置 HZVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimHZVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.AllInstances.cclass">
            <summary>设置 HZVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.AllInstances.charset">
            <summary>设置 HZVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.AllInstances.isUCS2">
            <summary>设置 HZVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.AllInstances.stFactor">
            <summary>设置 HZVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimHZVerifier.AllInstances.states">
            <summary>设置 HZVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier">
            <summary>Shove.CharsetDetector.ISO2022CNVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.#ctor(Shove.CharsetDetector.ISO2022CNVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.Constructor">
            <summary>设置 ISO2022CNVerifier.ISO2022CNVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.cclass">
            <summary>设置 ISO2022CNVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.charset">
            <summary>设置 ISO2022CNVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.isUCS2">
            <summary>设置 ISO2022CNVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.stFactor">
            <summary>设置 ISO2022CNVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.states">
            <summary>设置 ISO2022CNVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.AllInstances.cclass">
            <summary>设置 ISO2022CNVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.AllInstances.charset">
            <summary>设置 ISO2022CNVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.AllInstances.isUCS2">
            <summary>设置 ISO2022CNVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.AllInstances.stFactor">
            <summary>设置 ISO2022CNVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022CNVerifier.AllInstances.states">
            <summary>设置 ISO2022CNVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier">
            <summary>Shove.CharsetDetector.ISO2022JPVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.#ctor(Shove.CharsetDetector.ISO2022JPVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.Constructor">
            <summary>设置 ISO2022JPVerifier.ISO2022JPVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.cclass">
            <summary>设置 ISO2022JPVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.charset">
            <summary>设置 ISO2022JPVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.isUCS2">
            <summary>设置 ISO2022JPVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.stFactor">
            <summary>设置 ISO2022JPVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.states">
            <summary>设置 ISO2022JPVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.AllInstances.cclass">
            <summary>设置 ISO2022JPVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.AllInstances.charset">
            <summary>设置 ISO2022JPVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.AllInstances.isUCS2">
            <summary>设置 ISO2022JPVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.AllInstances.stFactor">
            <summary>设置 ISO2022JPVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022JPVerifier.AllInstances.states">
            <summary>设置 ISO2022JPVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier">
            <summary>Shove.CharsetDetector.ISO2022KRVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.#ctor(Shove.CharsetDetector.ISO2022KRVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.Constructor">
            <summary>设置 ISO2022KRVerifier.ISO2022KRVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.cclass">
            <summary>设置 ISO2022KRVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.charset">
            <summary>设置 ISO2022KRVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.isUCS2">
            <summary>设置 ISO2022KRVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.stFactor">
            <summary>设置 ISO2022KRVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.states">
            <summary>设置 ISO2022KRVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.AllInstances.cclass">
            <summary>设置 ISO2022KRVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.AllInstances.charset">
            <summary>设置 ISO2022KRVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.AllInstances.isUCS2">
            <summary>设置 ISO2022KRVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.AllInstances.stFactor">
            <summary>设置 ISO2022KRVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimISO2022KRVerifier.AllInstances.states">
            <summary>设置 ISO2022KRVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver">
            <summary>Shove.CharsetDetector.MyCharsetDetectionObserver 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.#ctor(Shove.CharsetDetector.MyCharsetDetectionObserver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.Bind(Shove.CharsetDetector.ICharsetDetectionObserver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.Constructor">
            <summary>设置 MyCharsetDetectionObserver.MyCharsetDetectionObserver() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.NotifyString">
            <summary>设置 MyCharsetDetectionObserver.Notify(String charset) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimMyCharsetDetectionObserver.AllInstances.NotifyString">
            <summary>设置 MyCharsetDetectionObserver.Notify(String charset) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimPSMDetector">
            <summary>Shove.CharsetDetector.PSMDetector 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimPSMDetector.#ctor(Shove.CharsetDetector.PSMDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimPSMDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimPSMDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.Constructor">
            <summary>设置 PSMDetector.PSMDetector() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.ConstructorInt32">
            <summary>设置 PSMDetector.PSMDetector(Int32 langFlag) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.ConstructorInt32VerifierArrayEUCStatisticsArray">
            <summary>设置 PSMDetector.PSMDetector(Int32 aItems, Verifier[] aVerifierSet, EUCStatistics[] aStatisticsSet) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.DataEnd">
            <summary>设置 PSMDetector.DataEnd() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.HandleDataByteArrayInt32">
            <summary>设置 PSMDetector.HandleData(Byte[] aBuf, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.Reset">
            <summary>设置 PSMDetector.Reset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.SampleByteArrayInt32">
            <summary>设置 PSMDetector.Sample(Byte[] aBuf, Int32 aLen) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.SampleByteArrayInt32Boolean">
            <summary>设置 PSMDetector.Sample(Byte[] aBuf, Int32 aLen, Boolean aLastChance) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.StaticConstructor">
            <summary>设置 PSMDetector.PSMDetector() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.getProbableCharsets">
            <summary>设置 PSMDetector.getProbableCharsets() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.initVerifiersInt32">
            <summary>设置 PSMDetector.initVerifiers(Int32 currVerSet) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.DataEnd">
            <summary>设置 PSMDetector.DataEnd() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.HandleDataByteArrayInt32">
            <summary>设置 PSMDetector.HandleData(Byte[] aBuf, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.Reset">
            <summary>设置 PSMDetector.Reset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.SampleByteArrayInt32">
            <summary>设置 PSMDetector.Sample(Byte[] aBuf, Int32 aLen) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.SampleByteArrayInt32Boolean">
            <summary>设置 PSMDetector.Sample(Byte[] aBuf, Int32 aLen, Boolean aLastChance) 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.getProbableCharsets">
            <summary>设置 PSMDetector.getProbableCharsets() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimPSMDetector.AllInstances.initVerifiersInt32">
            <summary>设置 PSMDetector.initVerifiers(Int32 currVerSet) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimSJISVerifier">
            <summary>Shove.CharsetDetector.SJISVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimSJISVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimSJISVerifier.#ctor(Shove.CharsetDetector.SJISVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimSJISVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimSJISVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.Constructor">
            <summary>设置 SJISVerifier.SJISVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.cclass">
            <summary>设置 SJISVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.charset">
            <summary>设置 SJISVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.isUCS2">
            <summary>设置 SJISVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.stFactor">
            <summary>设置 SJISVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.states">
            <summary>设置 SJISVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimSJISVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.AllInstances.cclass">
            <summary>设置 SJISVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.AllInstances.charset">
            <summary>设置 SJISVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.AllInstances.isUCS2">
            <summary>设置 SJISVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.AllInstances.stFactor">
            <summary>设置 SJISVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimSJISVerifier.AllInstances.states">
            <summary>设置 SJISVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier">
            <summary>Shove.CharsetDetector.UCS2BEVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.#ctor(Shove.CharsetDetector.UCS2BEVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.Constructor">
            <summary>设置 UCS2BEVerifier.UCS2BEVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.cclass">
            <summary>设置 UCS2BEVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.charset">
            <summary>设置 UCS2BEVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.isUCS2">
            <summary>设置 UCS2BEVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.stFactor">
            <summary>设置 UCS2BEVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.states">
            <summary>设置 UCS2BEVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.AllInstances.cclass">
            <summary>设置 UCS2BEVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.AllInstances.charset">
            <summary>设置 UCS2BEVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.AllInstances.isUCS2">
            <summary>设置 UCS2BEVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.AllInstances.stFactor">
            <summary>设置 UCS2BEVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2BEVerifier.AllInstances.states">
            <summary>设置 UCS2BEVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier">
            <summary>Shove.CharsetDetector.UCS2LEVerifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.#ctor(Shove.CharsetDetector.UCS2LEVerifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.Constructor">
            <summary>设置 UCS2LEVerifier.UCS2LEVerifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.cclass">
            <summary>设置 UCS2LEVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.charset">
            <summary>设置 UCS2LEVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.isUCS2">
            <summary>设置 UCS2LEVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.stFactor">
            <summary>设置 UCS2LEVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.states">
            <summary>设置 UCS2LEVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.AllInstances.cclass">
            <summary>设置 UCS2LEVerifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.AllInstances.charset">
            <summary>设置 UCS2LEVerifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.AllInstances.isUCS2">
            <summary>设置 UCS2LEVerifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.AllInstances.stFactor">
            <summary>设置 UCS2LEVerifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUCS2LEVerifier.AllInstances.states">
            <summary>设置 UCS2LEVerifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimUTF8Verifier">
            <summary>Shove.CharsetDetector.UTF8Verifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.#ctor(Shove.CharsetDetector.UTF8Verifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.Constructor">
            <summary>设置 UTF8Verifier.UTF8Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.cclass">
            <summary>设置 UTF8Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.charset">
            <summary>设置 UTF8Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.isUCS2">
            <summary>设置 UTF8Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.stFactor">
            <summary>设置 UTF8Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.states">
            <summary>设置 UTF8Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.AllInstances.cclass">
            <summary>设置 UTF8Verifier.cclass() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.AllInstances.charset">
            <summary>设置 UTF8Verifier.charset() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.AllInstances.isUCS2">
            <summary>设置 UTF8Verifier.isUCS2() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.AllInstances.stFactor">
            <summary>设置 UTF8Verifier.stFactor() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimUTF8Verifier.AllInstances.states">
            <summary>设置 UTF8Verifier.states() 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimVerifier">
            <summary>Shove.CharsetDetector.Verifier 的填充码类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimVerifier.#ctor(Shove.CharsetDetector.Verifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimVerifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.ShimVerifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimVerifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimVerifier.Constructor">
            <summary>设置 Verifier.Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimVerifier.StaticConstructor">
            <summary>设置 Verifier.Verifier() 的 填充码</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.ShimVerifier.getNextStateVerifierByteByte">
            <summary>设置 Verifier.getNextState(Verifier v, Byte b, Byte s) 的 填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.ShimVerifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubBig5Statistics">
            <summary>Shove.CharsetDetector.Big5Statistics 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.InitializeStub">
            <summary>初始化 type StubBig5Statistics 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MFirstByteFreq">
            <summary>设置 Big5Statistics.mFirstByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MFirstByteMean">
            <summary>设置 Big5Statistics.mFirstByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MFirstByteStdDev">
            <summary>设置 Big5Statistics.mFirstByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MFirstByteWeight">
            <summary>设置 Big5Statistics.mFirstByteWeight() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MSecondByteFreq">
            <summary>设置 Big5Statistics.mSecondByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MSecondByteMean">
            <summary>设置 Big5Statistics.mSecondByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MSecondByteStdDev">
            <summary>设置 Big5Statistics.mSecondByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubBig5Statistics.MSecondByteWeight">
            <summary>设置 Big5Statistics.mSecondByteWeight() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mFirstByteFreq">
            <summary>设置 Big5Statistics.mFirstByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mFirstByteMean">
            <summary>设置 Big5Statistics.mFirstByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mFirstByteStdDev">
            <summary>设置 Big5Statistics.mFirstByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mFirstByteWeight">
            <summary>设置 Big5Statistics.mFirstByteWeight() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mSecondByteFreq">
            <summary>设置 Big5Statistics.mSecondByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mSecondByteMean">
            <summary>设置 Big5Statistics.mSecondByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mSecondByteStdDev">
            <summary>设置 Big5Statistics.mSecondByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubBig5Statistics.mSecondByteWeight">
            <summary>设置 Big5Statistics.mSecondByteWeight() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubBig5Statistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubBig5Statistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubBig5Statistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubDetector">
            <summary>Shove.CharsetDetector.Detector 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubDetector.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubDetector.InitializeStub">
            <summary>初始化 type StubDetector 的新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubDetector.Report(System.String)">
            <summary>设置 Detector.Report(String charset) 的 存根</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubDetector.ReportString">
            <summary>设置 Detector.Report(String charset) 的 stub</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubEUCJPStatistics">
            <summary>Shove.CharsetDetector.EUCJPStatistics 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.InitializeStub">
            <summary>初始化 type StubEUCJPStatistics 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MFirstByteFreq">
            <summary>设置 EUCJPStatistics.mFirstByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MFirstByteMean">
            <summary>设置 EUCJPStatistics.mFirstByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MFirstByteStdDev">
            <summary>设置 EUCJPStatistics.mFirstByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MFirstByteWeight">
            <summary>设置 EUCJPStatistics.mFirstByteWeight() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MSecondByteFreq">
            <summary>设置 EUCJPStatistics.mSecondByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MSecondByteMean">
            <summary>设置 EUCJPStatistics.mSecondByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MSecondByteStdDev">
            <summary>设置 EUCJPStatistics.mSecondByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.MSecondByteWeight">
            <summary>设置 EUCJPStatistics.mSecondByteWeight() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mFirstByteFreq">
            <summary>设置 EUCJPStatistics.mFirstByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mFirstByteMean">
            <summary>设置 EUCJPStatistics.mFirstByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mFirstByteStdDev">
            <summary>设置 EUCJPStatistics.mFirstByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mFirstByteWeight">
            <summary>设置 EUCJPStatistics.mFirstByteWeight() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mSecondByteFreq">
            <summary>设置 EUCJPStatistics.mSecondByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mSecondByteMean">
            <summary>设置 EUCJPStatistics.mSecondByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mSecondByteStdDev">
            <summary>设置 EUCJPStatistics.mSecondByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.mSecondByteWeight">
            <summary>设置 EUCJPStatistics.mSecondByteWeight() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCJPStatistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubEUCKRStatistics">
            <summary>Shove.CharsetDetector.EUCKRStatistics 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.InitializeStub">
            <summary>初始化 type StubEUCKRStatistics 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MFirstByteFreq">
            <summary>设置 EUCKRStatistics.mFirstByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MFirstByteMean">
            <summary>设置 EUCKRStatistics.mFirstByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MFirstByteStdDev">
            <summary>设置 EUCKRStatistics.mFirstByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MFirstByteWeight">
            <summary>设置 EUCKRStatistics.mFirstByteWeight() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MSecondByteFreq">
            <summary>设置 EUCKRStatistics.mSecondByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MSecondByteMean">
            <summary>设置 EUCKRStatistics.mSecondByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MSecondByteStdDev">
            <summary>设置 EUCKRStatistics.mSecondByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.MSecondByteWeight">
            <summary>设置 EUCKRStatistics.mSecondByteWeight() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mFirstByteFreq">
            <summary>设置 EUCKRStatistics.mFirstByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mFirstByteMean">
            <summary>设置 EUCKRStatistics.mFirstByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mFirstByteStdDev">
            <summary>设置 EUCKRStatistics.mFirstByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mFirstByteWeight">
            <summary>设置 EUCKRStatistics.mFirstByteWeight() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mSecondByteFreq">
            <summary>设置 EUCKRStatistics.mSecondByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mSecondByteMean">
            <summary>设置 EUCKRStatistics.mSecondByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mSecondByteStdDev">
            <summary>设置 EUCKRStatistics.mSecondByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.mSecondByteWeight">
            <summary>设置 EUCKRStatistics.mSecondByteWeight() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCKRStatistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubEUCSampler">
            <summary>Shove.CharsetDetector.EUCSampler 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCSampler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCSampler.InitializeStub">
            <summary>初始化 type StubEUCSampler 的新实例</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCSampler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCSampler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCSampler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubEUCStatistics">
            <summary>Shove.CharsetDetector.EUCStatistics 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.InitializeStub">
            <summary>初始化 type StubEUCStatistics 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MFirstByteFreq">
            <summary>设置 EUCStatistics.mFirstByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MFirstByteMean">
            <summary>设置 EUCStatistics.mFirstByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MFirstByteStdDev">
            <summary>设置 EUCStatistics.mFirstByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MFirstByteWeight">
            <summary>设置 EUCStatistics.mFirstByteWeight() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MSecondByteFreq">
            <summary>设置 EUCStatistics.mSecondByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MSecondByteMean">
            <summary>设置 EUCStatistics.mSecondByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MSecondByteStdDev">
            <summary>设置 EUCStatistics.mSecondByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCStatistics.MSecondByteWeight">
            <summary>设置 EUCStatistics.mSecondByteWeight() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mFirstByteFreq">
            <summary>设置 EUCStatistics.mFirstByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mFirstByteMean">
            <summary>设置 EUCStatistics.mFirstByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mFirstByteStdDev">
            <summary>设置 EUCStatistics.mFirstByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mFirstByteWeight">
            <summary>设置 EUCStatistics.mFirstByteWeight() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mSecondByteFreq">
            <summary>设置 EUCStatistics.mSecondByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mSecondByteMean">
            <summary>设置 EUCStatistics.mSecondByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mSecondByteStdDev">
            <summary>设置 EUCStatistics.mSecondByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCStatistics.mSecondByteWeight">
            <summary>设置 EUCStatistics.mSecondByteWeight() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCStatistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCStatistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCStatistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubEUCTWStatistics">
            <summary>Shove.CharsetDetector.EUCTWStatistics 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.InitializeStub">
            <summary>初始化 type StubEUCTWStatistics 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MFirstByteFreq">
            <summary>设置 EUCTWStatistics.mFirstByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MFirstByteMean">
            <summary>设置 EUCTWStatistics.mFirstByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MFirstByteStdDev">
            <summary>设置 EUCTWStatistics.mFirstByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MFirstByteWeight">
            <summary>设置 EUCTWStatistics.mFirstByteWeight() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MSecondByteFreq">
            <summary>设置 EUCTWStatistics.mSecondByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MSecondByteMean">
            <summary>设置 EUCTWStatistics.mSecondByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MSecondByteStdDev">
            <summary>设置 EUCTWStatistics.mSecondByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.MSecondByteWeight">
            <summary>设置 EUCTWStatistics.mSecondByteWeight() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mFirstByteFreq">
            <summary>设置 EUCTWStatistics.mFirstByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mFirstByteMean">
            <summary>设置 EUCTWStatistics.mFirstByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mFirstByteStdDev">
            <summary>设置 EUCTWStatistics.mFirstByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mFirstByteWeight">
            <summary>设置 EUCTWStatistics.mFirstByteWeight() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mSecondByteFreq">
            <summary>设置 EUCTWStatistics.mSecondByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mSecondByteMean">
            <summary>设置 EUCTWStatistics.mSecondByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mSecondByteStdDev">
            <summary>设置 EUCTWStatistics.mSecondByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.mSecondByteWeight">
            <summary>设置 EUCTWStatistics.mSecondByteWeight() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubEUCTWStatistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubGB2312Statistics">
            <summary>Shove.CharsetDetector.GB2312Statistics 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.InitializeStub">
            <summary>初始化 type StubGB2312Statistics 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MFirstByteFreq">
            <summary>设置 GB2312Statistics.mFirstByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MFirstByteMean">
            <summary>设置 GB2312Statistics.mFirstByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MFirstByteStdDev">
            <summary>设置 GB2312Statistics.mFirstByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MFirstByteWeight">
            <summary>设置 GB2312Statistics.mFirstByteWeight() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MSecondByteFreq">
            <summary>设置 GB2312Statistics.mSecondByteFreq() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MSecondByteMean">
            <summary>设置 GB2312Statistics.mSecondByteMean() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MSecondByteStdDev">
            <summary>设置 GB2312Statistics.mSecondByteStdDev() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubGB2312Statistics.MSecondByteWeight">
            <summary>设置 GB2312Statistics.mSecondByteWeight() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mFirstByteFreq">
            <summary>设置 GB2312Statistics.mFirstByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mFirstByteMean">
            <summary>设置 GB2312Statistics.mFirstByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mFirstByteStdDev">
            <summary>设置 GB2312Statistics.mFirstByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mFirstByteWeight">
            <summary>设置 GB2312Statistics.mFirstByteWeight() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mSecondByteFreq">
            <summary>设置 GB2312Statistics.mSecondByteFreq() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mSecondByteMean">
            <summary>设置 GB2312Statistics.mSecondByteMean() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mSecondByteStdDev">
            <summary>设置 GB2312Statistics.mSecondByteStdDev() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubGB2312Statistics.mSecondByteWeight">
            <summary>设置 GB2312Statistics.mSecondByteWeight() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubGB2312Statistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubGB2312Statistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubGB2312Statistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubICharsetDetectionObserver">
            <summary>Shove.CharsetDetector.ICharsetDetectionObserver 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubICharsetDetectionObserver.#ctor">
            <summary>初始化 type StubICharsetDetectionObserver 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubICharsetDetectionObserver.NotifyString">
            <summary>设置 ICharsetDetectionObserver.Notify(String charset) 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubICharsetDetectionObserver.s::Shove#CharsetDetector#ICharsetDetectionObserver#Notify(System.String)">
            <summary>设置 ICharsetDetectionObserver.Notify(String charset) 的 存根</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubICharsetDetector">
            <summary>Shove.CharsetDetector.ICharsetDetector 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubICharsetDetector.#ctor">
            <summary>初始化 type StubICharsetDetector 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubICharsetDetector.DoItByteArrayInt32Boolean">
            <summary>设置 ICharsetDetector.DoIt(Byte[] aBuf, Int32 aLen, Boolean oDontFeedMe) 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubICharsetDetector.Done">
            <summary>设置 ICharsetDetector.Done() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubICharsetDetector.InitICharsetDetectionObserver">
            <summary>设置 ICharsetDetector.Init(ICharsetDetectionObserver observer) 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubICharsetDetector.s::Shove#CharsetDetector#ICharsetDetector#DoIt(System.Byte[],System.Int32,System.Boolean)">
            <summary>设置 ICharsetDetector.DoIt(Byte[] aBuf, Int32 aLen, Boolean oDontFeedMe) 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubICharsetDetector.s::Shove#CharsetDetector#ICharsetDetector#Done">
            <summary>设置 ICharsetDetector.Done() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubICharsetDetector.s::Shove#CharsetDetector#ICharsetDetector#Init(Shove.CharsetDetector.ICharsetDetectionObserver)">
            <summary>设置 ICharsetDetector.Init(ICharsetDetectionObserver observer) 的 存根</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubMyCharsetDetectionObserver">
            <summary>Shove.CharsetDetector.MyCharsetDetectionObserver 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubMyCharsetDetectionObserver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubMyCharsetDetectionObserver.InitializeStub">
            <summary>初始化 type StubMyCharsetDetectionObserver 的新实例</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubMyCharsetDetectionObserver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubMyCharsetDetectionObserver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubMyCharsetDetectionObserver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubPSMDetector">
            <summary>Shove.CharsetDetector.PSMDetector 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubPSMDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubPSMDetector.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubPSMDetector.#ctor(System.Int32,Shove.CharsetDetector.Verifier[],Shove.CharsetDetector.EUCStatistics[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubPSMDetector.InitializeStub">
            <summary>初始化 type StubPSMDetector 的新实例</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubPSMDetector.Report(System.String)">
            <summary>设置 PSMDetector.Report(String charset) 的 存根</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubPSMDetector.ReportString">
            <summary>设置 PSMDetector.Report(String charset) 的 stub</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubPSMDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubPSMDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubPSMDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.CharsetDetector.Fakes.StubVerifier">
            <summary>Shove.CharsetDetector.Verifier 的存根类型</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubVerifier.Cclass">
            <summary>设置 Verifier.cclass() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubVerifier.Charset">
            <summary>设置 Verifier.charset() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.InitializeStub">
            <summary>初始化 type StubVerifier 的新实例</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubVerifier.IsUCS2">
            <summary>设置 Verifier.isUCS2() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubVerifier.StFactor">
            <summary>设置 Verifier.stFactor() 的 stub</summary>
        </member>
        <member name="F:Shove.CharsetDetector.Fakes.StubVerifier.States">
            <summary>设置 Verifier.states() 的 stub</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.cclass">
            <summary>设置 Verifier.cclass() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.charset">
            <summary>设置 Verifier.charset() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.isUCS2">
            <summary>设置 Verifier.isUCS2() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.stFactor">
            <summary>设置 Verifier.stFactor() 的 存根</summary>
        </member>
        <member name="M:Shove.CharsetDetector.Fakes.StubVerifier.states">
            <summary>设置 Verifier.states() 的 存根</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubVerifier.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubVerifier.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.CharsetDetector.Fakes.StubVerifier.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimData">
            <summary>Shove.Database.Data 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimData.#ctor(Shove.Database.Data)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimData.Constructor">
            <summary>设置 Data.Data() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimData.FilterDataTableDataDataTableStringInt64Int64">
            <summary>设置 Data.FilterDataTableData(DataTable dt, String Condition, Int64 LimitStart, Int64 RowCount) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimDatabaseAccess">
            <summary>Shove.Database.DatabaseAccess 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimDatabaseAccess.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimDatabaseAccess.#ctor(Shove.Database.DatabaseAccess)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimDatabaseAccess.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimDatabaseAccess.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimDatabaseAccess.CreateDataConnectionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 DatabaseAccess.CreateDataConnection() 的 填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimDatabaseAccess.CreateDataConnectionOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 DatabaseAccess.CreateDataConnection(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimDatabaseAccess.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimDatabaseAccess.Constructor">
            <summary>设置 DatabaseAccess.DatabaseAccess() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimDatabaseAccess.FilteSqlInfusionForConditionString">
            <summary>设置 DatabaseAccess.FilteSqlInfusionForCondition(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimDatabaseAccess.GetCallCert">
            <summary>设置 DatabaseAccess.GetCallCert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimDatabaseAccess.GetConnectionStringFromConfig">
            <summary>设置 DatabaseAccess.GetConnectionStringFromConfig() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimDatabaseAccess.dvwlMcUdvr">
            <summary>设置 DatabaseAccess.dvwlMcUdvr() 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimDatabaseAccess.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL">
            <summary>Shove.Database.MSSQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.#ctor(Shove.Database.MSSQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BackupDataToZipStream">
            <summary>设置 MSSQL.BackupDataToZipStream() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BackupDataToZipStreamSqlConnection">
            <summary>设置 MSSQL.BackupDataToZipStream(SqlConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BackupDataToZipStreamString">
            <summary>设置 MSSQL.BackupDataToZipStream(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BackupDatabaseSqlConnectionStringBooleanBoolean">
            <summary>设置 MSSQL.BackupDatabase(SqlConnection conn, String BackupFileName, Boolean BreakLog, Boolean Shrink) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BackupDatabaseStringBooleanBoolean">
            <summary>设置 MSSQL.BackupDatabase(String BackupFileName, Boolean BreakLog, Boolean Shrink) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BackupDatabaseStringStringBooleanBoolean">
            <summary>设置 MSSQL.BackupDatabase(String ConnectionString, String BackupFileName, Boolean BreakLog, Boolean Shrink) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BuildConnectStringStringString">
            <summary>设置 MSSQL.BuildConnectString(String SQLServerName, String SQLDatabaseName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.BuildConnectStringStringStringStringString">
            <summary>设置 MSSQL.BuildConnectString(String SQLServerName, String SQLDatabaseName, String SQLUID, String SQLPassword) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.Constructor">
            <summary>设置 MSSQL.MSSQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.DknlQrIipvSqlCommand">
            <summary>设置 MSSQL.DknlQrIipv(SqlCommand  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteFunctionSqlConnectionStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteFunction(SqlConnection conn, String FunctionName, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteFunctionStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteFunction(String FunctionName, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteFunctionStringStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteFunction(String ConnectionString, String FunctionName, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteNonQueryNoTranscationSqlConnectionStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteNonQueryNoTranscation(SqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteNonQuerySqlConnectionStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteNonQuery(SqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteNonQueryStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteNonQuery(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteNonQueryStringStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteNonQuery(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteSQLScriptSqlConnectionString">
            <summary>设置 MSSQL.ExecuteSQLScript(SqlConnection conn, String Script) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteSQLScriptString">
            <summary>设置 MSSQL.ExecuteSQLScript(String Script) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteSQLScriptStringString">
            <summary>设置 MSSQL.ExecuteSQLScript(String ConnectionString, String Script) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteScalarSqlConnectionStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteScalar(SqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteScalarStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteScalar(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteScalarStringStringMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteScalar(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteStoredProcedureNonQuerySqlConnectionStringMSSQLOutputParameterRefMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteStoredProcedureNonQuery(SqlConnection conn, String StoredProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteStoredProcedureNonQueryStringMSSQLOutputParameterRefMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteStoredProcedureNonQuery(String StoredProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteStoredProcedureNonQueryStringStringMSSQLOutputParameterRefMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteStoredProcedureNonQuery(String ConnectionString, String StoredProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteStoredProcedureWithQuerySqlConnectionStringDataSetRefMSSQLOutputParameterRefMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteStoredProcedureWithQuery(SqlConnection conn, String StoredProcedureName, DataSet&amp; ds, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteStoredProcedureWithQueryStringDataSetRefMSSQLOutputParameterRefMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteStoredProcedureWithQuery(String StoredProcedureName, DataSet&amp; ds, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ExecuteStoredProcedureWithQueryStringStringDataSetRefMSSQLOutputParameterRefMSSQLParameterArray">
            <summary>设置 MSSQL.ExecuteStoredProcedureWithQuery(String ConnectionString, String StoredProcedureName, DataSet&amp; ds, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.GetObjectFullNameString">
            <summary>设置 MSSQL.GetObjectFullName(String ObjectName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.HcRlfANEU2SqlCommandRefMSSQLParameterArray">
            <summary>设置 MSSQL.HcRlfANEU2(SqlCommand&amp;  , Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.O5KlUjCGVpSqlCommandMSSQLOutputParameterRef">
            <summary>设置 MSSQL.O5KlUjCGVp(SqlCommand  , OutputParameter&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.RestoreDataFromZipStreamByteArray">
            <summary>设置 MSSQL.RestoreDataFromZipStream(Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.RestoreDataFromZipStreamSqlConnectionByteArray">
            <summary>设置 MSSQL.RestoreDataFromZipStream(SqlConnection conn, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.RestoreDataFromZipStreamStringByteArray">
            <summary>设置 MSSQL.RestoreDataFromZipStream(String ConnectionString, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.SelectSqlConnectionStringMSSQLParameterArray">
            <summary>设置 MSSQL.Select(SqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.SelectStringMSSQLParameterArray">
            <summary>设置 MSSQL.Select(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.SelectStringStringMSSQLParameterArray">
            <summary>设置 MSSQL.Select(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimField">
            <summary>Shove.Database.MSSQL+Field 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimField.#ctor(Shove.Database.MSSQL.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimField.ConstructorObjectStringStringSqlDbTypeBoolean">
            <summary>设置 Field.Field(Object parent, String name, String canonicalidentifiername, SqlDbType dbtype, Boolean _readonly) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimField.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimField.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimField.AllInstances.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimField.AllInstances.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection">
            <summary>Shove.Database.MSSQL+FieldCollection 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.#ctor(Shove.Database.MSSQL.FieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.AddMSSQLField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.Constructor">
            <summary>设置 FieldCollection.FieldCollection() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.AllInstances.AddMSSQLField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.AllInstances.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.AllInstances.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimFieldCollection.AllInstances.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter">
            <summary>Shove.Database.MSSQL+OutputParameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.#ctor(Shove.Database.MSSQL.OutputParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.Constructor">
            <summary>设置 OutputParameter.OutputParameter() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AllInstances.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AllInstances.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AllInstances.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AllInstances.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimOutputParameter.AllInstances.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimParameter">
            <summary>Shove.Database.MSSQL+Parameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimParameter.#ctor(Shove.Database.MSSQL.Parameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimParameter.ConstructorStringSqlDbTypeInt32ParameterDirectionObject">
            <summary>设置 Parameter.Parameter(String name, SqlDbType type, Int32 size, ParameterDirection direction, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimTableBase">
            <summary>Shove.Database.MSSQL+TableBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.#ctor(Shove.Database.MSSQL.TableBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.Constructor">
            <summary>设置 TableBase.TableBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.DeleteSqlConnectionString">
            <summary>设置 TableBase.Delete(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.GetCountSqlConnectionString">
            <summary>设置 TableBase.GetCount(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.InsertSqlConnection">
            <summary>设置 TableBase.Insert(SqlConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.OpenSqlConnectionStringStringString">
            <summary>设置 TableBase.Open(SqlConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.OpenStringStringString">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.OpenStringStringStringString">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.UpdateSqlConnectionString">
            <summary>设置 TableBase.Update(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.DeleteSqlConnectionString">
            <summary>设置 TableBase.Delete(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.GetCountSqlConnectionString">
            <summary>设置 TableBase.GetCount(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.InsertSqlConnection">
            <summary>设置 TableBase.Insert(SqlConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.OpenSqlConnectionStringStringString">
            <summary>设置 TableBase.Open(SqlConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.OpenStringStringString">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.OpenStringStringStringString">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.UpdateSqlConnectionString">
            <summary>设置 TableBase.Update(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimTableBase.AllInstances.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimViewBase">
            <summary>Shove.Database.MSSQL+ViewBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.#ctor(Shove.Database.MSSQL.ViewBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.Constructor">
            <summary>设置 ViewBase.ViewBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.GetCountSqlConnectionString">
            <summary>设置 ViewBase.GetCount(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.OpenSqlConnectionStringStringString">
            <summary>设置 ViewBase.Open(SqlConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.OpenStringStringString">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.OpenStringStringStringString">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances.GetCountSqlConnectionString">
            <summary>设置 ViewBase.GetCount(SqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances.OpenSqlConnectionStringStringString">
            <summary>设置 ViewBase.Open(SqlConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances.OpenStringStringString">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMSSQL.ShimViewBase.AllInstances.OpenStringStringStringString">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL">
            <summary>Shove.Database.MySQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.#ctor(Shove.Database.MySQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BackupDataToZipStream">
            <summary>设置 MySQL.BackupDataToZipStream() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BackupDataToZipStreamMySqlConnection">
            <summary>设置 MySQL.BackupDataToZipStream(MySqlConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BackupDataToZipStreamString">
            <summary>设置 MySQL.BackupDataToZipStream(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BuildConnectStringStringStringString">
            <summary>设置 MySQL.BuildConnectString(String UID, String Password, String DatabaseName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BuildConnectStringStringStringStringString">
            <summary>设置 MySQL.BuildConnectString(String ServerName, String UID, String Password, String DatabaseName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BuildConnectStringStringStringStringStringString">
            <summary>设置 MySQL.BuildConnectString(String ServerName, String UID, String Password, String DatabaseName, String Port) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.BuildConnectStringStringStringStringStringStringString">
            <summary>设置 MySQL.BuildConnectString(String ServerName, String UID, String Password, String DatabaseName, String Port, String Charset) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.Constructor">
            <summary>设置 MySQL.MySQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.EraseDefinerString">
            <summary>设置 MySQL.EraseDefiner(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteFunctionMySqlConnectionStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteFunction(MySqlConnection conn, String FunctionName, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteFunctionStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteFunction(String FunctionName, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteFunctionStringStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteFunction(String ConnectionString, String FunctionName, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteNonQueryMySqlConnectionStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteNonQuery(MySqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteNonQueryNoTranscationMySqlConnectionStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteNonQueryNoTranscation(MySqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteNonQueryStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteNonQuery(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteNonQueryStringStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteNonQuery(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteScalarMySqlConnectionStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteScalar(MySqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteScalarStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteScalar(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteScalarStringStringMySQLParameterArray">
            <summary>设置 MySQL.ExecuteScalar(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteStoredProcedureNonQueryMySqlConnectionStringMySQLOutputParameterRefMySQLParameterArray">
            <summary>设置 MySQL.ExecuteStoredProcedureNonQuery(MySqlConnection conn, String StoredProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteStoredProcedureNonQueryStringMySQLOutputParameterRefMySQLParameterArray">
            <summary>设置 MySQL.ExecuteStoredProcedureNonQuery(String StoredProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteStoredProcedureNonQueryStringStringMySQLOutputParameterRefMySQLParameterArray">
            <summary>设置 MySQL.ExecuteStoredProcedureNonQuery(String ConnectionString, String StoredProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteStoredProcedureWithQueryMySqlConnectionStringDataSetRefMySQLOutputParameterRefMySQLParameterArray">
            <summary>设置 MySQL.ExecuteStoredProcedureWithQuery(MySqlConnection conn, String StoredProcedureName, DataSet&amp; ds, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteStoredProcedureWithQueryStringDataSetRefMySQLOutputParameterRefMySQLParameterArray">
            <summary>设置 MySQL.ExecuteStoredProcedureWithQuery(String StoredProcedureName, DataSet&amp; ds, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ExecuteStoredProcedureWithQueryStringStringDataSetRefMySQLOutputParameterRefMySQLParameterArray">
            <summary>设置 MySQL.ExecuteStoredProcedureWithQuery(String ConnectionString, String StoredProcedureName, DataSet&amp; ds, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.J0ClhNNVWtObjectBooleanBooleanDataColumnDataRow">
            <summary>设置 MySQL.J0ClhNNVWt(Object  , Boolean  , Boolean  , DataColumn  , DataRow  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.LgblDTHmkXMySqlCommandRefMySQLParameterArray">
            <summary>设置 MySQL.LgblDTHmkX(MySqlCommand&amp;  , Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.PcAlTZyyyWMySqlCommandMySQLOutputParameterRef">
            <summary>设置 MySQL.PcAlTZyyyW(MySqlCommand  , OutputParameter&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.RestoreDataFromZipStreamByteArray">
            <summary>设置 MySQL.RestoreDataFromZipStream(Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.RestoreDataFromZipStreamMySqlConnectionByteArray">
            <summary>设置 MySQL.RestoreDataFromZipStream(MySqlConnection conn, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.RestoreDataFromZipStreamStringByteArray">
            <summary>设置 MySQL.RestoreDataFromZipStream(String ConnectionString, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.SelectMySqlConnectionStringInt32MySQLParameterArray">
            <summary>设置 MySQL.Select(MySqlConnection conn, String CommandText, Int32 commandTimeout, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.SelectMySqlConnectionStringMySQLParameterArray">
            <summary>设置 MySQL.Select(MySqlConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.SelectStringInt32MySQLParameterArray">
            <summary>设置 MySQL.Select(String CommandText, Int32 commandTimeout, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.SelectStringMySQLParameterArray">
            <summary>设置 MySQL.Select(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.SelectStringStringInt32MySQLParameterArray">
            <summary>设置 MySQL.Select(String ConnectionString, String CommandText, Int32 commandTimeout, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.SelectStringStringMySQLParameterArray">
            <summary>设置 MySQL.Select(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.StaticConstructor">
            <summary>设置 MySQL.MySQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ih7lSq4d06String">
            <summary>设置 MySQL.ih7lSq4d06(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.kAMlbv9jvcString">
            <summary>设置 MySQL.kAMlbv9jvc(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.kdSl0tKZx2">
            <summary>设置 MySQL.kdSl0tKZx2() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.oZZly76mijMySqlCommand">
            <summary>设置 MySQL.oZZly76mij(MySqlCommand  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.uNglRlG0lMByteArray">
            <summary>设置 MySQL.uNglRlG0lM(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.vLtlBgtgdJMySqlConnection">
            <summary>设置 MySQL.vLtlBgtgdJ(MySqlConnection  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.znWluuEedZString">
            <summary>设置 MySQL.znWluuEedZ(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimField">
            <summary>Shove.Database.MySQL+Field 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimField.#ctor(Shove.Database.MySQL.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimField.ConstructorObjectStringStringMySqlDbTypeBoolean">
            <summary>设置 Field.Field(Object parent, String name, String canonicalidentifiername, MySqlDbType dbtype, Boolean _readonly) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimField.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimField.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimField.AllInstances.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimField.AllInstances.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection">
            <summary>Shove.Database.MySQL+FieldCollection 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.#ctor(Shove.Database.MySQL.FieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.AddMySQLField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.Constructor">
            <summary>设置 FieldCollection.FieldCollection() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.AllInstances.AddMySQLField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.AllInstances.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.AllInstances.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimFieldCollection.AllInstances.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter">
            <summary>Shove.Database.MySQL+OutputParameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.#ctor(Shove.Database.MySQL.OutputParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.Constructor">
            <summary>设置 OutputParameter.OutputParameter() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AllInstances.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AllInstances.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AllInstances.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AllInstances.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimOutputParameter.AllInstances.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimParameter">
            <summary>Shove.Database.MySQL+Parameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimParameter.#ctor(Shove.Database.MySQL.Parameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimParameter.ConstructorStringMySqlDbTypeInt32ParameterDirectionObject">
            <summary>设置 Parameter.Parameter(String name, MySqlDbType type, Int32 size, ParameterDirection direction, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimTableBase">
            <summary>Shove.Database.MySQL+TableBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimTableBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimTableBase.#ctor(Shove.Database.MySQL.TableBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimTableBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimTableBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.Constructor">
            <summary>设置 TableBase.TableBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.DeleteMySqlConnectionString">
            <summary>设置 TableBase.Delete(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.GetCountMySqlConnectionString">
            <summary>设置 TableBase.GetCount(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.InsertMySqlConnection">
            <summary>设置 TableBase.Insert(MySqlConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.OpenMySqlConnectionStringStringStringInt64Int64">
            <summary>设置 TableBase.Open(MySqlConnection conn, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.OpenStringStringStringInt64Int64">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.OpenStringStringStringStringInt64Int64">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.UpdateMySqlConnectionString">
            <summary>设置 TableBase.Update(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.DeleteMySqlConnectionString">
            <summary>设置 TableBase.Delete(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.GetCountMySqlConnectionString">
            <summary>设置 TableBase.GetCount(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.InsertMySqlConnection">
            <summary>设置 TableBase.Insert(MySqlConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.OpenMySqlConnectionStringStringStringInt64Int64">
            <summary>设置 TableBase.Open(MySqlConnection conn, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.OpenStringStringStringInt64Int64">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.OpenStringStringStringStringInt64Int64">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.UpdateMySqlConnectionString">
            <summary>设置 TableBase.Update(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimTableBase.AllInstances.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimViewBase">
            <summary>Shove.Database.MySQL+ViewBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimViewBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimViewBase.#ctor(Shove.Database.MySQL.ViewBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimViewBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimMySQL.ShimViewBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.Constructor">
            <summary>设置 ViewBase.ViewBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.GetCountMySqlConnectionString">
            <summary>设置 ViewBase.GetCount(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.OpenMySqlConnectionStringStringStringInt64Int64">
            <summary>设置 ViewBase.Open(MySqlConnection conn, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.OpenStringStringStringInt64Int64">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.OpenStringStringStringStringInt64Int64">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances.GetCountMySqlConnectionString">
            <summary>设置 ViewBase.GetCount(MySqlConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances.OpenMySqlConnectionStringStringStringInt64Int64">
            <summary>设置 ViewBase.Open(MySqlConnection conn, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances.OpenStringStringStringInt64Int64">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimMySQL.ShimViewBase.AllInstances.OpenStringStringStringStringInt64Int64">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order, Int64 LimitStart, Int64 LimitCount) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle">
            <summary>Shove.Database.Oracle 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.#ctor(Shove.Database.Oracle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.BYhl298hUHOracleCommandOracleOutputParameterRef">
            <summary>设置 Oracle.BYhl298hUH(OracleCommand  , OutputParameter&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.BackupDataToZipStream">
            <summary>设置 Oracle.BackupDataToZipStream() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.BackupDataToZipStreamOracleConnection">
            <summary>设置 Oracle.BackupDataToZipStream(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.BackupDataToZipStreamString">
            <summary>设置 Oracle.BackupDataToZipStream(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.BuildConnectStringString">
            <summary>设置 Oracle.BuildConnectString(String ServerName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.BuildConnectStringStringStringString">
            <summary>设置 Oracle.BuildConnectString(String ServerName, String UserId, String Password) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.Constructor">
            <summary>设置 Oracle.Oracle() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteFunctionOracleConnectionStringOracleTypeInt32OracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteFunction(OracleConnection conn, String FunctionName, OracleType ReturnDbType, Int32 ReturnSize, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteFunctionStringOracleTypeInt32OracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteFunction(String FunctionName, OracleType ReturnDbType, Int32 ReturnSize, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteFunctionStringStringOracleTypeInt32OracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteFunction(String ConnectionString, String FunctionName, OracleType ReturnDbType, Int32 ReturnSize, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteFunctionWithQueryOracleConnectionStringOracleTypeInt32DataSetRefOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteFunctionWithQuery(OracleConnection conn, String FunctionName, OracleType ReturnDbType, Int32 ReturnSize, DataSet&amp; ReturnDataSet, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteFunctionWithQueryStringOracleTypeInt32DataSetRefOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteFunctionWithQuery(String FunctionName, OracleType ReturnDbType, Int32 ReturnSize, DataSet&amp; ReturnDataSet, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteFunctionWithQueryStringStringOracleTypeInt32DataSetRefOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteFunctionWithQuery(String ConnectionString, String FunctionName, OracleType ReturnDbType, Int32 ReturnSize, DataSet&amp; ReturnDataSet, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteNonQueryNoTranscationOracleConnectionStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteNonQueryNoTranscation(OracleConnection conn, String CommandText, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteNonQueryOracleConnectionStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteNonQuery(OracleConnection conn, String CommandText, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteNonQueryStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteNonQuery(String CommandText, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteNonQueryStringStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteNonQuery(String ConnectionString, String CommandText, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteProcedureOracleConnectionStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteProcedure(OracleConnection conn, String ProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteProcedureStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteProcedure(String ProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteProcedureStringStringOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteProcedure(String ConnectionString, String ProcedureName, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteProcedureWithQueryOracleConnectionStringDataSetRefOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteProcedureWithQuery(OracleConnection conn, String ProcedureName, DataSet&amp; ReturnDataSet, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteProcedureWithQueryStringDataSetRefOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteProcedureWithQuery(String ProcedureName, DataSet&amp; ReturnDataSet, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteProcedureWithQueryStringStringDataSetRefOracleOutputParameterRefOracleParameterArray">
            <summary>设置 Oracle.ExecuteProcedureWithQuery(String ConnectionString, String ProcedureName, DataSet&amp; ReturnDataSet, OutputParameter&amp; Outputs, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteScalarOracleConnectionStringOracleParameterArray">
            <summary>设置 Oracle.ExecuteScalar(OracleConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteScalarStringOracleParameterArray">
            <summary>设置 Oracle.ExecuteScalar(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ExecuteScalarStringStringOracleParameterArray">
            <summary>设置 Oracle.ExecuteScalar(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.RestoreDataFromZipStreamByteArray">
            <summary>设置 Oracle.RestoreDataFromZipStream(Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.RestoreDataFromZipStreamOracleConnectionByteArray">
            <summary>设置 Oracle.RestoreDataFromZipStream(OracleConnection conn, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.RestoreDataFromZipStreamStringByteArray">
            <summary>设置 Oracle.RestoreDataFromZipStream(String ConnectionString, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.SelectOracleConnectionStringOracleParameterArray">
            <summary>设置 Oracle.Select(OracleConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.SelectStringOracleParameterArray">
            <summary>设置 Oracle.Select(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.SelectStringStringOracleParameterArray">
            <summary>设置 Oracle.Select(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.flZllRE47YOracleCommand">
            <summary>设置 Oracle.flZllRE47Y(OracleCommand  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.paSlpmuiBwOracleCommand">
            <summary>设置 Oracle.paSlpmuiBw(OracleCommand  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ry6lOupfJ9OracleCommandRefOracleParameterArray">
            <summary>设置 Oracle.ry6lOupfJ9(OracleCommand&amp;  , Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimField">
            <summary>Shove.Database.Oracle+Field 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimField.#ctor(Shove.Database.Oracle.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.ConstructorObjectStringStringOracleType">
            <summary>设置 Field.Field(Object parent, String name, String canonicalidentifiername, OracleType dbtype) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.SequenceNameGet">
            <summary>设置 Field.get_SequenceName() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.SequenceNameSetString">
            <summary>设置 Field.set_SequenceName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.AllInstances.SequenceNameGet">
            <summary>设置 Field.get_SequenceName() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.AllInstances.SequenceNameSetString">
            <summary>设置 Field.set_SequenceName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.AllInstances.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimField.AllInstances.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimFieldCollection">
            <summary>Shove.Database.Oracle+FieldCollection 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.#ctor(Shove.Database.Oracle.FieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.AddOracleField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.Constructor">
            <summary>设置 FieldCollection.FieldCollection() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.AllInstances.AddOracleField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.AllInstances.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.AllInstances.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimFieldCollection.AllInstances.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimOutputParameter">
            <summary>Shove.Database.Oracle+OutputParameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.#ctor(Shove.Database.Oracle.OutputParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.Constructor">
            <summary>设置 OutputParameter.OutputParameter() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AllInstances.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AllInstances.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AllInstances.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AllInstances.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimOutputParameter.AllInstances.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimParameter">
            <summary>Shove.Database.Oracle+Parameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimParameter.#ctor(Shove.Database.Oracle.Parameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimParameter.ConstructorStringOracleTypeInt32ParameterDirectionObject">
            <summary>设置 Parameter.Parameter(String name, OracleType type, Int32 size, ParameterDirection direction, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimTableBase">
            <summary>Shove.Database.Oracle+TableBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimTableBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimTableBase.#ctor(Shove.Database.Oracle.TableBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimTableBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimTableBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.Constructor">
            <summary>设置 TableBase.TableBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.DeleteOracleConnectionString">
            <summary>设置 TableBase.Delete(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.GetCountOracleConnectionString">
            <summary>设置 TableBase.GetCount(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.InsertOracleConnection">
            <summary>设置 TableBase.Insert(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.OpenOracleConnectionStringStringString">
            <summary>设置 TableBase.Open(OracleConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.OpenStringStringString">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.OpenStringStringStringString">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.UpdateOracleConnectionString">
            <summary>设置 TableBase.Update(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.DeleteOracleConnectionString">
            <summary>设置 TableBase.Delete(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.GetCountOracleConnectionString">
            <summary>设置 TableBase.GetCount(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.InsertOracleConnection">
            <summary>设置 TableBase.Insert(OracleConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.OpenOracleConnectionStringStringString">
            <summary>设置 TableBase.Open(OracleConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.OpenStringStringString">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.OpenStringStringStringString">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.UpdateOracleConnectionString">
            <summary>设置 TableBase.Update(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimTableBase.AllInstances.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimViewBase">
            <summary>Shove.Database.Oracle+ViewBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimViewBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimViewBase.#ctor(Shove.Database.Oracle.ViewBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimViewBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimOracle.ShimViewBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.Constructor">
            <summary>设置 ViewBase.ViewBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.GetCountOracleConnectionString">
            <summary>设置 ViewBase.GetCount(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.OpenOracleConnectionStringStringString">
            <summary>设置 ViewBase.Open(OracleConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.OpenStringStringString">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.OpenStringStringStringString">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.XSifWb8AvZ">
            <summary>设置 ViewBase.XSifWb8AvZ() 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.GetCountOracleConnectionString">
            <summary>设置 ViewBase.GetCount(OracleConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.OpenOracleConnectionStringStringString">
            <summary>设置 ViewBase.Open(OracleConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.OpenStringStringString">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.OpenStringStringStringString">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimOracle.ShimViewBase.AllInstances.XSifWb8AvZ">
            <summary>设置 ViewBase.XSifWb8AvZ() 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite">
            <summary>Shove.Database.SQLite 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.#ctor(Shove.Database.SQLite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.BackupDataToZipStream">
            <summary>设置 SQLite.BackupDataToZipStream() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.BackupDataToZipStreamSQLiteConnection">
            <summary>设置 SQLite.BackupDataToZipStream(SQLiteConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.BackupDataToZipStreamString">
            <summary>设置 SQLite.BackupDataToZipStream(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.BuildConnectStringString">
            <summary>设置 SQLite.BuildConnectString(String DatabaseFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.BuildConnectStringStringString">
            <summary>设置 SQLite.BuildConnectString(String DatabaseFileName, String Version) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.CIflr32iWOSQLiteCommandSQLiteOutputParameterRef">
            <summary>设置 SQLite.CIflr32iWO(SQLiteCommand  , OutputParameter&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.Constructor">
            <summary>设置 SQLite.SQLite() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteNonQueryNoTranscationSQLiteConnectionStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteNonQueryNoTranscation(SQLiteConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteNonQuerySQLiteConnectionStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteNonQuery(SQLiteConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteNonQueryStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteNonQuery(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteNonQueryStringStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteNonQuery(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteScalarSQLiteConnectionStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteScalar(SQLiteConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteScalarStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteScalar(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ExecuteScalarStringStringSQLiteParameterArray">
            <summary>设置 SQLite.ExecuteScalar(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ROglFhLSFcSQLiteCommand">
            <summary>设置 SQLite.ROglFhLSFc(SQLiteCommand  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.RestoreDataFromZipStreamByteArray">
            <summary>设置 SQLite.RestoreDataFromZipStream(Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.RestoreDataFromZipStreamSQLiteConnectionByteArray">
            <summary>设置 SQLite.RestoreDataFromZipStream(SQLiteConnection conn, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.RestoreDataFromZipStreamStringByteArray">
            <summary>设置 SQLite.RestoreDataFromZipStream(String ConnectionString, Byte[] DataBuffer) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.SelectSQLiteConnectionStringSQLiteParameterArray">
            <summary>设置 SQLite.Select(SQLiteConnection conn, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.SelectStringSQLiteParameterArray">
            <summary>设置 SQLite.Select(String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.SelectStringStringSQLiteParameterArray">
            <summary>设置 SQLite.Select(String ConnectionString, String CommandText, Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.kVylsAXYctSQLiteCommandRefSQLiteParameterArray">
            <summary>设置 SQLite.kVylsAXYct(SQLiteCommand&amp;  , Parameter[] Params) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimField">
            <summary>Shove.Database.SQLite+Field 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimField.#ctor(Shove.Database.SQLite.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimField.ConstructorObjectStringStringDbTypeBoolean">
            <summary>设置 Field.Field(Object parent, String name, String canonicalidentifiername, DbType dbtype, Boolean _readonly) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimField.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimField.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimField.AllInstances.ValueGet">
            <summary>设置 Field.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimField.AllInstances.ValueSetObject">
            <summary>设置 Field.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection">
            <summary>Shove.Database.SQLite+FieldCollection 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.#ctor(Shove.Database.SQLite.FieldCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.AddSQLiteField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.Constructor">
            <summary>设置 FieldCollection.FieldCollection() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.AllInstances.AddSQLiteField">
            <summary>设置 FieldCollection.Add(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.AllInstances.Clear">
            <summary>设置 FieldCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.AllInstances.CountGet">
            <summary>设置 FieldCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimFieldCollection.AllInstances.ItemGetInt32">
            <summary>设置 FieldCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter">
            <summary>Shove.Database.SQLite+OutputParameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.#ctor(Shove.Database.SQLite.OutputParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.Constructor">
            <summary>设置 OutputParameter.OutputParameter() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AllInstances.AddStringObject">
            <summary>设置 OutputParameter.Add(String Name, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AllInstances.Clear">
            <summary>设置 OutputParameter.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AllInstances.CountGet">
            <summary>设置 OutputParameter.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AllInstances.ItemGetInt32">
            <summary>设置 OutputParameter.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimOutputParameter.AllInstances.ItemGetString">
            <summary>设置 OutputParameter.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimParameter">
            <summary>Shove.Database.SQLite+Parameter 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimParameter.#ctor(Shove.Database.SQLite.Parameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimParameter.ConstructorStringDbTypeInt32ParameterDirectionObject">
            <summary>设置 Parameter.Parameter(String name, DbType type, Int32 size, ParameterDirection direction, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimTableBase">
            <summary>Shove.Database.SQLite+TableBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimTableBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimTableBase.#ctor(Shove.Database.SQLite.TableBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimTableBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimTableBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.Constructor">
            <summary>设置 TableBase.TableBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.DeleteSQLiteConnectionString">
            <summary>设置 TableBase.Delete(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.GetCountSQLiteConnectionString">
            <summary>设置 TableBase.GetCount(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.InsertSQLiteConnection">
            <summary>设置 TableBase.Insert(SQLiteConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.OpenSQLiteConnectionStringStringString">
            <summary>设置 TableBase.Open(SQLiteConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.OpenStringStringString">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.OpenStringStringStringString">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.UpdateSQLiteConnectionString">
            <summary>设置 TableBase.Update(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.DeleteSQLiteConnectionString">
            <summary>设置 TableBase.Delete(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.DeleteString">
            <summary>设置 TableBase.Delete(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.DeleteStringString">
            <summary>设置 TableBase.Delete(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.GetCountSQLiteConnectionString">
            <summary>设置 TableBase.GetCount(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.GetCountString">
            <summary>设置 TableBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.GetCountStringString">
            <summary>设置 TableBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.Insert">
            <summary>设置 TableBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.InsertSQLiteConnection">
            <summary>设置 TableBase.Insert(SQLiteConnection conn) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.InsertString">
            <summary>设置 TableBase.Insert(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.OpenSQLiteConnectionStringStringString">
            <summary>设置 TableBase.Open(SQLiteConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.OpenStringStringString">
            <summary>设置 TableBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.OpenStringStringStringString">
            <summary>设置 TableBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.UpdateSQLiteConnectionString">
            <summary>设置 TableBase.Update(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.UpdateString">
            <summary>设置 TableBase.Update(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimTableBase.AllInstances.UpdateStringString">
            <summary>设置 TableBase.Update(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimViewBase">
            <summary>Shove.Database.SQLite+ViewBase 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimViewBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimViewBase.#ctor(Shove.Database.SQLite.ViewBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimViewBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Fakes.ShimSQLite.ShimViewBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.Constructor">
            <summary>设置 ViewBase.ViewBase() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.GetCountSQLiteConnectionString">
            <summary>设置 ViewBase.GetCount(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.OpenSQLiteConnectionStringStringString">
            <summary>设置 ViewBase.Open(SQLiteConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.OpenStringStringString">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.OpenStringStringStringString">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances.GetCountSQLiteConnectionString">
            <summary>设置 ViewBase.GetCount(SQLiteConnection conn, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances.GetCountString">
            <summary>设置 ViewBase.GetCount(String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances.GetCountStringString">
            <summary>设置 ViewBase.GetCount(String ConnectionString, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances.OpenSQLiteConnectionStringStringString">
            <summary>设置 ViewBase.Open(SQLiteConnection conn, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances.OpenStringStringString">
            <summary>设置 ViewBase.Open(String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Fakes.ShimSQLite.ShimViewBase.AllInstances.OpenStringStringStringString">
            <summary>设置 ViewBase.Open(String ConnectionString, String FieldList, String Condition, String Order) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Fakes.StubData">
            <summary>Shove.Database.Data 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubData.InitializeStub">
            <summary>初始化 type StubData 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Fakes.StubDatabaseAccess">
            <summary>Shove.Database.DatabaseAccess 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubDatabaseAccess.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubDatabaseAccess.InitializeStub">
            <summary>初始化 type StubDatabaseAccess 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubDatabaseAccess.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubDatabaseAccess.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubDatabaseAccess.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Fakes.StubMSSQL">
            <summary>Shove.Database.MSSQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubMSSQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubMSSQL.InitializeStub">
            <summary>初始化 type StubMSSQL 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubMSSQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubMSSQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubMSSQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Fakes.StubMySQL">
            <summary>Shove.Database.MySQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubMySQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubMySQL.InitializeStub">
            <summary>初始化 type StubMySQL 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubMySQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubMySQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubMySQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Fakes.StubOracle">
            <summary>Shove.Database.Oracle 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubOracle.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubOracle.InitializeStub">
            <summary>初始化 type StubOracle 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubOracle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubOracle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubOracle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Fakes.StubSQLite">
            <summary>Shove.Database.SQLite 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubSQLite.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Fakes.StubSQLite.InitializeStub">
            <summary>初始化 type StubSQLite 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubSQLite.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubSQLite.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Fakes.StubSQLite.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.ShimIDatabaseManage">
            <summary>Shove.Database.Manage.IDatabaseManage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimIDatabaseManage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimIDatabaseManage.#ctor(Shove.Database.Manage.IDatabaseManage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimIDatabaseManage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimIDatabaseManage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.Close">
            <summary>设置 IDatabaseManage.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.Constructor">
            <summary>设置 IDatabaseManage.IDatabaseManage() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.CreateDatabaseStringStringRef">
            <summary>设置 IDatabaseManage.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.CreateUserStringStringStringStringRef">
            <summary>设置 IDatabaseManage.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.DatabaseExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.DatabaseUserExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.EditUserPasswordStringStringStringStringRef">
            <summary>设置 IDatabaseManage.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.OpenStringRef">
            <summary>设置 IDatabaseManage.Open(String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 IDatabaseManage.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.RemoveDatabaseStringStringStringRef">
            <summary>设置 IDatabaseManage.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.Close">
            <summary>设置 IDatabaseManage.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.CreateDatabaseStringStringRef">
            <summary>设置 IDatabaseManage.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.CreateUserStringStringStringStringRef">
            <summary>设置 IDatabaseManage.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.DatabaseExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.DatabaseUserExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.EditUserPasswordStringStringStringStringRef">
            <summary>设置 IDatabaseManage.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.OpenStringRef">
            <summary>设置 IDatabaseManage.Open(String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 IDatabaseManage.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.RemoveDatabaseStringStringStringRef">
            <summary>设置 IDatabaseManage.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimIDatabaseManage.AllInstances.VaildStringParametersStringRefStringArray">
            <summary>设置 IDatabaseManage.VaildStringParameters(String&amp; ReturnDescription, String[] Parameters) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.ShimMSSQL">
            <summary>Shove.Database.Manage.MSSQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMSSQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMSSQL.#ctor(Shove.Database.Manage.MSSQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMSSQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMSSQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.ConstructorString">
            <summary>设置 MSSQL.MSSQL(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.CreateDatabaseStringStringRef">
            <summary>设置 MSSQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.CreateUserStringStringStringStringRef">
            <summary>设置 MSSQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.EditUserPasswordStringStringStringStringRef">
            <summary>设置 MSSQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 MSSQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.RemoveDatabaseStringStringStringRef">
            <summary>设置 MSSQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.ShimMSSQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.AllInstances.CreateDatabaseStringStringRef">
            <summary>设置 MSSQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.AllInstances.CreateUserStringStringStringStringRef">
            <summary>设置 MSSQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.AllInstances.EditUserPasswordStringStringStringStringRef">
            <summary>设置 MSSQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.AllInstances.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 MSSQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMSSQL.AllInstances.RemoveDatabaseStringStringStringRef">
            <summary>设置 MSSQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.ShimMySQL">
            <summary>Shove.Database.Manage.MySQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMySQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMySQL.#ctor(Shove.Database.Manage.MySQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMySQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.ShimMySQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.ConstructorString">
            <summary>设置 MySQL.MySQL(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.CreateDatabaseStringStringRef">
            <summary>设置 MySQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.CreateUserStringStringStringStringRef">
            <summary>设置 MySQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.DatabaseExistsStringStringRef">
            <summary>设置 MySQL.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.DatabaseUserExistsStringStringRef">
            <summary>设置 MySQL.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.EditUserPasswordStringStringStringStringRef">
            <summary>设置 MySQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 MySQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.RemoveDatabaseStringStringStringRef">
            <summary>设置 MySQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.CreateDatabaseStringStringRef">
            <summary>设置 MySQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.CreateUserStringStringStringStringRef">
            <summary>设置 MySQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.DatabaseExistsStringStringRef">
            <summary>设置 MySQL.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.DatabaseUserExistsStringStringRef">
            <summary>设置 MySQL.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.EditUserPasswordStringStringStringStringRef">
            <summary>设置 MySQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 MySQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.ShimMySQL.AllInstances.RemoveDatabaseStringStringStringRef">
            <summary>设置 MySQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.StubIDatabaseManage">
            <summary>Shove.Database.Manage.IDatabaseManage 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.CreateDatabase(System.String,System.String@)">
            <summary>设置 IDatabaseManage.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.CreateDatabaseStringStringRef">
            <summary>设置 IDatabaseManage.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.CreateUser(System.String,System.String,System.String,System.String@)">
            <summary>设置 IDatabaseManage.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.CreateUserStringStringStringStringRef">
            <summary>设置 IDatabaseManage.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.DatabaseExists(System.String,System.String@)">
            <summary>设置 IDatabaseManage.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.DatabaseExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.DatabaseUserExists(System.String,System.String@)">
            <summary>设置 IDatabaseManage.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.DatabaseUserExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.EditUserPassword(System.String,System.String,System.String,System.String@)">
            <summary>设置 IDatabaseManage.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.EditUserPasswordStringStringStringStringRef">
            <summary>设置 IDatabaseManage.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.InitializeStub">
            <summary>初始化 type StubIDatabaseManage 的新实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.QueryUsedSpaceSize(System.String,System.String@)">
            <summary>设置 IDatabaseManage.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 IDatabaseManage.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubIDatabaseManage.RemoveDatabase(System.String,System.String,System.String@)">
            <summary>设置 IDatabaseManage.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubIDatabaseManage.RemoveDatabaseStringStringStringRef">
            <summary>设置 IDatabaseManage.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubIDatabaseManage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubIDatabaseManage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubIDatabaseManage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.StubMSSQL">
            <summary>Shove.Database.Manage.MSSQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.CreateDatabase(System.String,System.String@)">
            <summary>设置 MSSQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.CreateDatabaseStringStringRef">
            <summary>设置 MSSQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.CreateUser(System.String,System.String,System.String,System.String@)">
            <summary>设置 MSSQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.CreateUserStringStringStringStringRef">
            <summary>设置 MSSQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.DatabaseExists(System.String,System.String@)">
            <summary>设置 IDatabaseManage.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.DatabaseExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.DatabaseUserExists(System.String,System.String@)">
            <summary>设置 IDatabaseManage.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.DatabaseUserExistsStringStringRef">
            <summary>设置 IDatabaseManage.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.EditUserPassword(System.String,System.String,System.String,System.String@)">
            <summary>设置 MSSQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.EditUserPasswordStringStringStringStringRef">
            <summary>设置 MSSQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.InitializeStub">
            <summary>初始化 type StubMSSQL 的新实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.QueryUsedSpaceSize(System.String,System.String@)">
            <summary>设置 MSSQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 MSSQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMSSQL.RemoveDatabase(System.String,System.String,System.String@)">
            <summary>设置 MSSQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMSSQL.RemoveDatabaseStringStringStringRef">
            <summary>设置 MSSQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubMSSQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubMSSQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubMSSQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Manage.Fakes.StubMySQL">
            <summary>Shove.Database.Manage.MySQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.CreateDatabase(System.String,System.String@)">
            <summary>设置 MySQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.CreateDatabaseStringStringRef">
            <summary>设置 MySQL.CreateDatabase(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.CreateUser(System.String,System.String,System.String,System.String@)">
            <summary>设置 MySQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.CreateUserStringStringStringStringRef">
            <summary>设置 MySQL.CreateUser(String UserName, String Password, String GrantOwnerDatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.DatabaseExists(System.String,System.String@)">
            <summary>设置 MySQL.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.DatabaseExistsStringStringRef">
            <summary>设置 MySQL.DatabaseExists(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.DatabaseUserExists(System.String,System.String@)">
            <summary>设置 MySQL.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.DatabaseUserExistsStringStringRef">
            <summary>设置 MySQL.DatabaseUserExists(String DatabaseUser, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.EditUserPassword(System.String,System.String,System.String,System.String@)">
            <summary>设置 MySQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.EditUserPasswordStringStringStringStringRef">
            <summary>设置 MySQL.EditUserPassword(String UserName, String OldPassword, String NewPassword, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.InitializeStub">
            <summary>初始化 type StubMySQL 的新实例</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.QueryUsedSpaceSize(System.String,System.String@)">
            <summary>设置 MySQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.QueryUsedSpaceSizeStringStringRef">
            <summary>设置 MySQL.QueryUsedSpaceSize(String DatabaseName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="M:Shove.Database.Manage.Fakes.StubMySQL.RemoveDatabase(System.String,System.String,System.String@)">
            <summary>设置 MySQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 存根</summary>
        </member>
        <member name="F:Shove.Database.Manage.Fakes.StubMySQL.RemoveDatabaseStringStringStringRef">
            <summary>设置 MySQL.RemoveDatabase(String DatabaseName, String UserName, String&amp; ReturnDescription) 的 stub</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubMySQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubMySQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Manage.Fakes.StubMySQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimMSSQL">
            <summary>Shove.Database.Persistences.MSSQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMSSQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMSSQL.#ctor(Shove.Database.Persistences.MSSQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMSSQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMSSQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.ConstructorStringStringStringStringStringBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 MSSQL.MSSQL(String ServerName, String DatabaseName, String UserID, String Password, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews, Boolean isWithProcedures, Boolean isWithFunction) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.Generation">
            <summary>设置 MSSQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.Generation_CLR">
            <summary>设置 MSSQL.Generation_CLR() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.LBclatbW3SString">
            <summary>设置 MSSQL.LBclatbW3S(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.Ye8lHVXPImString">
            <summary>设置 MSSQL.Ye8lHVXPIm(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.a4Sl4WBVG6StringBuilderRef">
            <summary>设置 MSSQL.a4Sl4WBVG6(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.c9wlI6wTZdStringBuilderRef">
            <summary>设置 MSSQL.c9wlI6wTZd(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.gVdlA0RaeLString">
            <summary>设置 MSSQL.gVdlA0RaeL(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.uqdlPVCjQxString">
            <summary>设置 MSSQL.uqdlPVCjQx(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.GGRlmhu8haStringBuilderRefBoolean">
            <summary>设置 MSSQL.GGRlmhu8ha(StringBuilder&amp;  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.Generation">
            <summary>设置 MSSQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.Generation_CLR">
            <summary>设置 MSSQL.Generation_CLR() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.LBclatbW3SString">
            <summary>设置 MSSQL.LBclatbW3S(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.UByl6HC2bOStringBuilderRefBoolean">
            <summary>设置 MSSQL.UByl6HC2bO(StringBuilder&amp;  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.Ye8lHVXPImString">
            <summary>设置 MSSQL.Ye8lHVXPIm(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.a4Sl4WBVG6StringBuilderRef">
            <summary>设置 MSSQL.a4Sl4WBVG6(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.c9wlI6wTZdStringBuilderRef">
            <summary>设置 MSSQL.c9wlI6wTZd(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.gVdlA0RaeLString">
            <summary>设置 MSSQL.gVdlA0RaeL(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMSSQL.AllInstances.uqdlPVCjQxString">
            <summary>设置 MSSQL.uqdlPVCjQx(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimMySQL">
            <summary>Shove.Database.Persistences.MySQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMySQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMySQL.#ctor(Shove.Database.Persistences.MySQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMySQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimMySQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.ConstructorStringStringStringStringStringStringBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 MySQL.MySQL(String ServerName, String DatabaseName, String UserID, String Password, String Port, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews, Boolean isWithProcedures, Boolean isWithFunction) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.EhKlWg9d5lStringBuilderRef">
            <summary>设置 MySQL.EhKlWg9d5l(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.FB7lzgKFMGString">
            <summary>设置 MySQL.FB7lzgKFMG(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.Generation">
            <summary>设置 MySQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.QYIlkPeakhByteArray">
            <summary>设置 MySQL.QYIlkPeakh(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.RZtljfiDTuString">
            <summary>设置 MySQL.RZtljfiDTu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.XQHlo2uvNTString">
            <summary>设置 MySQL.XQHlo2uvNT(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.YhOlJD2skHString">
            <summary>设置 MySQL.YhOlJD2skH(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.cFJsLPjPVeString">
            <summary>设置 MySQL.cFJsLPjPVe(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.jjUlEkUf0dStringBuilderRef">
            <summary>设置 MySQL.jjUlEkUf0d(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.msQldOdZYtStringBuilderRef">
            <summary>设置 MySQL.msQldOdZYt(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.uSalgumTkCString">
            <summary>设置 MySQL.uSalgumTkC(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.wAFlY7J8TyString">
            <summary>设置 MySQL.wAFlY7J8Ty(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.xl9l7RriLwStringBuilderRef">
            <summary>设置 MySQL.xl9l7RriLw(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.yoElVRkJDcString">
            <summary>设置 MySQL.yoElVRkJDc(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.EhKlWg9d5lStringBuilderRef">
            <summary>设置 MySQL.EhKlWg9d5l(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.FB7lzgKFMGString">
            <summary>设置 MySQL.FB7lzgKFMG(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.Generation">
            <summary>设置 MySQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.QYIlkPeakhByteArray">
            <summary>设置 MySQL.QYIlkPeakh(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.RZtljfiDTuString">
            <summary>设置 MySQL.RZtljfiDTu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.XQHlo2uvNTString">
            <summary>设置 MySQL.XQHlo2uvNT(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.YhOlJD2skHString">
            <summary>设置 MySQL.YhOlJD2skH(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.cFJsLPjPVeString">
            <summary>设置 MySQL.cFJsLPjPVe(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.jjUlEkUf0dStringBuilderRef">
            <summary>设置 MySQL.jjUlEkUf0d(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.msQldOdZYtStringBuilderRef">
            <summary>设置 MySQL.msQldOdZYt(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.uSalgumTkCString">
            <summary>设置 MySQL.uSalgumTkC(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.wAFlY7J8TyString">
            <summary>设置 MySQL.wAFlY7J8Ty(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.xl9l7RriLwStringBuilderRef">
            <summary>设置 MySQL.xl9l7RriLw(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimMySQL.AllInstances.yoElVRkJDcString">
            <summary>设置 MySQL.yoElVRkJDc(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimOracle">
            <summary>Shove.Database.Persistences.Oracle 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimOracle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimOracle.#ctor(Shove.Database.Persistences.Oracle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimOracle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimOracle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.ConstructorStringStringStringStringBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 Oracle.Oracle(String ServerName, String UserID, String Password, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews, Boolean isWithProcedures, Boolean isWithFunction) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.GDHsyOKgoeString">
            <summary>设置 Oracle.GDHsyOKgoe(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.Generation">
            <summary>设置 Oracle.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.UpnsSgLx4DDataTable">
            <summary>设置 Oracle.UpnsSgLx4D(DataTable  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.X1KsUth3AIStringBuilderRef">
            <summary>设置 Oracle.X1KsUth3AI(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.YuYsFL2EHEStringBuilderRef">
            <summary>设置 Oracle.YuYsFL2EHE(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.akcsfYRBSyStringBuilderRef">
            <summary>设置 Oracle.akcsfYRBSy(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.cLtsT2XXa1String">
            <summary>设置 Oracle.cLtsT2XXa1(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.cahsBSfl7YString">
            <summary>设置 Oracle.cahsBSfl7Y(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.ha0sQJM0dpStringBuilderRef">
            <summary>设置 Oracle.ha0sQJM0dp(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.wQosD1bXXMString">
            <summary>设置 Oracle.wQosD1bXXM(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.GDHsyOKgoeString">
            <summary>设置 Oracle.GDHsyOKgoe(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.Generation">
            <summary>设置 Oracle.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.UpnsSgLx4DDataTable">
            <summary>设置 Oracle.UpnsSgLx4D(DataTable  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.X1KsUth3AIStringBuilderRef">
            <summary>设置 Oracle.X1KsUth3AI(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.YuYsFL2EHEStringBuilderRef">
            <summary>设置 Oracle.YuYsFL2EHE(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.akcsfYRBSyStringBuilderRef">
            <summary>设置 Oracle.akcsfYRBSy(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.cLtsT2XXa1String">
            <summary>设置 Oracle.cLtsT2XXa1(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.cahsBSfl7YString">
            <summary>设置 Oracle.cahsBSfl7Y(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.ha0sQJM0dpStringBuilderRef">
            <summary>设置 Oracle.ha0sQJM0dp(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimOracle.AllInstances.wQosD1bXXMString">
            <summary>设置 Oracle.wQosD1bXXM(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimSQLite">
            <summary>Shove.Database.Persistences.SQLite 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimSQLite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimSQLite.#ctor(Shove.Database.Persistences.SQLite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimSQLite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.ShimSQLite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.Ba2sAJi8NAStringBuilderRef">
            <summary>设置 SQLite.Ba2sAJi8NA(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.ConstructorStringStringStringBooleanBooleanBooleanBoolean">
            <summary>设置 SQLite.SQLite(String DatabaseName, String Password, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.Fpcsq9R2vwString">
            <summary>设置 SQLite.Fpcsq9R2vw(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.Generation">
            <summary>设置 SQLite.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.KTjsiaJxsoString">
            <summary>设置 SQLite.KTjsiaJxso(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.Mt6s3DM7bKString">
            <summary>设置 SQLite.Mt6s3DM7bK(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.VS2satTg1yStringBuilderRef">
            <summary>设置 SQLite.VS2satTg1y(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.Vd6sxe2TuVString">
            <summary>设置 SQLite.Vd6sxe2TuV(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.d0bsneu7fwString">
            <summary>设置 SQLite.d0bsneu7fw(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.ipGsPy2eSyStringBuilderRef">
            <summary>设置 SQLite.ipGsPy2eSy(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.lyLsHDYcEGStringBuilderRef">
            <summary>设置 SQLite.lyLsHDYcEG(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.pvjsZKCiYuString">
            <summary>设置 SQLite.pvjsZKCiYu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.x6Fsv8nfiyString">
            <summary>设置 SQLite.x6Fsv8nfiy(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.Ba2sAJi8NAStringBuilderRef">
            <summary>设置 SQLite.Ba2sAJi8NA(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.Fpcsq9R2vwString">
            <summary>设置 SQLite.Fpcsq9R2vw(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.Generation">
            <summary>设置 SQLite.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.KTjsiaJxsoString">
            <summary>设置 SQLite.KTjsiaJxso(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.Mt6s3DM7bKString">
            <summary>设置 SQLite.Mt6s3DM7bK(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.VS2satTg1yStringBuilderRef">
            <summary>设置 SQLite.VS2satTg1y(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.Vd6sxe2TuVString">
            <summary>设置 SQLite.Vd6sxe2TuV(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.d0bsneu7fwString">
            <summary>设置 SQLite.d0bsneu7fw(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.ipGsPy2eSyStringBuilderRef">
            <summary>设置 SQLite.ipGsPy2eSy(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.lyLsHDYcEGStringBuilderRef">
            <summary>设置 SQLite.lyLsHDYcEG(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.pvjsZKCiYuString">
            <summary>设置 SQLite.pvjsZKCiYu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.ShimSQLite.AllInstances.x6Fsv8nfiyString">
            <summary>设置 SQLite.x6Fsv8nfiy(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.StubMSSQL">
            <summary>Shove.Database.Persistences.MSSQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubMSSQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubMSSQL.InitializeStub">
            <summary>初始化 type StubMSSQL 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubMSSQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubMSSQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubMSSQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.StubMySQL">
            <summary>Shove.Database.Persistences.MySQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubMySQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubMySQL.InitializeStub">
            <summary>初始化 type StubMySQL 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubMySQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubMySQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubMySQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.StubOracle">
            <summary>Shove.Database.Persistences.Oracle 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubOracle.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubOracle.InitializeStub">
            <summary>初始化 type StubOracle 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubOracle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubOracle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubOracle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Fakes.StubSQLite">
            <summary>Shove.Database.Persistences.SQLite 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubSQLite.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Fakes.StubSQLite.InitializeStub">
            <summary>初始化 type StubSQLite 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubSQLite.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubSQLite.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Fakes.StubSQLite.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimMSSQL">
            <summary>Shove.Database.Persistences.Java.MSSQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.#ctor(Shove.Database.Persistences.Java.MSSQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.ConstructorStringStringStringStringStringBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 MSSQL.MSSQL(String ServerName, String DatabaseName, String UserID, String Password, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews, Boolean isWithProcedures, Boolean isWithFunction) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.Generation">
            <summary>设置 MSSQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.LjgsJOJ9ehString">
            <summary>设置 MSSQL.LjgsJOJ9eh(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.NKJsk1fmTdStringBuilderRef">
            <summary>设置 MSSQL.NKJsk1fmTd(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.OU1rLkcB7wString">
            <summary>设置 MSSQL.OU1rLkcB7w(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.XMisVEhtaZStringBuilderRef">
            <summary>设置 MSSQL.XMisVEhtaZ(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.irFrKNvHV1String">
            <summary>设置 MSSQL.irFrKNvHV1(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.o9isoEKW89String">
            <summary>设置 MSSQL.o9isoEKW89(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.oHKsYJDG5ZStringBuilderRef">
            <summary>设置 MSSQL.oHKsYJDG5Z(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.sTDsgsXuqtStringBuilderRef">
            <summary>设置 MSSQL.sTDsgsXuqt(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.tT2szHLY0fString">
            <summary>设置 MSSQL.tT2szHLY0f(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.Generation">
            <summary>设置 MSSQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.LjgsJOJ9ehString">
            <summary>设置 MSSQL.LjgsJOJ9eh(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.NKJsk1fmTdStringBuilderRef">
            <summary>设置 MSSQL.NKJsk1fmTd(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.OU1rLkcB7wString">
            <summary>设置 MSSQL.OU1rLkcB7w(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.XMisVEhtaZStringBuilderRef">
            <summary>设置 MSSQL.XMisVEhtaZ(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.irFrKNvHV1String">
            <summary>设置 MSSQL.irFrKNvHV1(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.o9isoEKW89String">
            <summary>设置 MSSQL.o9isoEKW89(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.oHKsYJDG5ZStringBuilderRef">
            <summary>设置 MSSQL.oHKsYJDG5Z(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.sTDsgsXuqtStringBuilderRef">
            <summary>设置 MSSQL.sTDsgsXuqt(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMSSQL.AllInstances.tT2szHLY0fString">
            <summary>设置 MSSQL.tT2szHLY0f(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimMySQL">
            <summary>Shove.Database.Persistences.Java.MySQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMySQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMySQL.#ctor(Shove.Database.Persistences.Java.MySQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMySQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimMySQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.BvxrfrI55fStringBuilderRef">
            <summary>设置 MySQL.BvxrfrI55f(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.ConstructorStringStringStringStringStringStringBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 MySQL.MySQL(String ServerName, String DatabaseName, String UserID, String Password, String Port, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews, Boolean isWithProcedures, Boolean isWithFunction) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.Generation">
            <summary>设置 MySQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.LImrSQu5xjString">
            <summary>设置 MySQL.LImrSQu5xj(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.PpdrRllHIsString">
            <summary>设置 MySQL.PpdrRllHIs(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.UvOrTJhhfjString">
            <summary>设置 MySQL.UvOrTJhhfj(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.VE9rDT8kJPString">
            <summary>设置 MySQL.VE9rDT8kJP(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.XULrFTSsImStringBuilderRef">
            <summary>设置 MySQL.XULrFTSsIm(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.hL8ruCPK50String">
            <summary>设置 MySQL.hL8ruCPK50(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.hgCrhj6C6cString">
            <summary>设置 MySQL.hgCrhj6C6c(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.ikArbEnUAmByteArray">
            <summary>设置 MySQL.ikArbEnUAm(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.oaqr0djPwJString">
            <summary>设置 MySQL.oaqr0djPwJ(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.uB3rypYvx4String">
            <summary>设置 MySQL.uB3rypYvx4(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.vHFrQKgLDRStringBuilderRef">
            <summary>设置 MySQL.vHFrQKgLDR(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.zIKrBqwvKfString">
            <summary>设置 MySQL.zIKrBqwvKf(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.zYjrUMaxidStringBuilderRef">
            <summary>设置 MySQL.zYjrUMaxid(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.BvxrfrI55fStringBuilderRef">
            <summary>设置 MySQL.BvxrfrI55f(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.Generation">
            <summary>设置 MySQL.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.LImrSQu5xjString">
            <summary>设置 MySQL.LImrSQu5xj(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.PpdrRllHIsString">
            <summary>设置 MySQL.PpdrRllHIs(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.UvOrTJhhfjString">
            <summary>设置 MySQL.UvOrTJhhfj(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.VE9rDT8kJPString">
            <summary>设置 MySQL.VE9rDT8kJP(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.XULrFTSsImStringBuilderRef">
            <summary>设置 MySQL.XULrFTSsIm(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.hL8ruCPK50String">
            <summary>设置 MySQL.hL8ruCPK50(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.hgCrhj6C6cString">
            <summary>设置 MySQL.hgCrhj6C6c(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.ikArbEnUAmByteArray">
            <summary>设置 MySQL.ikArbEnUAm(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.oaqr0djPwJString">
            <summary>设置 MySQL.oaqr0djPwJ(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.uB3rypYvx4String">
            <summary>设置 MySQL.uB3rypYvx4(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.vHFrQKgLDRStringBuilderRef">
            <summary>设置 MySQL.vHFrQKgLDR(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.zIKrBqwvKfString">
            <summary>设置 MySQL.zIKrBqwvKf(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimMySQL.AllInstances.zYjrUMaxidStringBuilderRef">
            <summary>设置 MySQL.zYjrUMaxid(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimOracle">
            <summary>Shove.Database.Persistences.Java.Oracle 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimOracle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimOracle.#ctor(Shove.Database.Persistences.Java.Oracle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimOracle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimOracle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.Ahhr3mxegHStringBuilderRef">
            <summary>设置 Oracle.Ahhr3mxegH(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.B3RrcZIJTuString">
            <summary>设置 Oracle.B3RrcZIJTu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.ConstructorStringStringStringStringBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 Oracle.Oracle(String ServerName, String UserID, String Password, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews, Boolean isWithProcedures, Boolean isWithFunction) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.Generation">
            <summary>设置 Oracle.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.GyOrvl3Ky4StringBuilderRef">
            <summary>设置 Oracle.GyOrvl3Ky4(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.Rhpri4rmbnStringBuilderRef">
            <summary>设置 Oracle.Rhpri4rmbn(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.T5WrCcnLPmString">
            <summary>设置 Oracle.T5WrCcnLPm(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.cvtrxuPXovStringBuilderRef">
            <summary>设置 Oracle.cvtrxuPXov(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.i0XrNJtrCuString">
            <summary>设置 Oracle.i0XrNJtrCu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.jW4r1C2UmyString">
            <summary>设置 Oracle.jW4r1C2Umy(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.mnnr8EgTOtString">
            <summary>设置 Oracle.mnnr8EgTOt(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.p0vrWDEWp2DataTable">
            <summary>设置 Oracle.p0vrWDEWp2(DataTable  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.Ahhr3mxegHStringBuilderRef">
            <summary>设置 Oracle.Ahhr3mxegH(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.B3RrcZIJTuString">
            <summary>设置 Oracle.B3RrcZIJTu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.Generation">
            <summary>设置 Oracle.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.GyOrvl3Ky4StringBuilderRef">
            <summary>设置 Oracle.GyOrvl3Ky4(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.Rhpri4rmbnStringBuilderRef">
            <summary>设置 Oracle.Rhpri4rmbn(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.T5WrCcnLPmString">
            <summary>设置 Oracle.T5WrCcnLPm(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.cvtrxuPXovStringBuilderRef">
            <summary>设置 Oracle.cvtrxuPXov(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.i0XrNJtrCuString">
            <summary>设置 Oracle.i0XrNJtrCu(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.jW4r1C2UmyString">
            <summary>设置 Oracle.jW4r1C2Umy(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.mnnr8EgTOtString">
            <summary>设置 Oracle.mnnr8EgTOt(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimOracle.AllInstances.p0vrWDEWp2DataTable">
            <summary>设置 Oracle.p0vrWDEWp2(DataTable  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimSQLite">
            <summary>Shove.Database.Persistences.Java.SQLite 的填充码类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimSQLite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimSQLite.#ctor(Shove.Database.Persistences.Java.SQLite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimSQLite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.ShimSQLite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.A0ZFMr015eString">
            <summary>设置 SQLite.A0ZFMr015e(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.ConstructorStringStringStringBooleanBooleanBooleanBoolean">
            <summary>设置 SQLite.SQLite(String DatabaseName, String Password, String NamespaceName, Boolean isUseConnectionStringConfig, Boolean isUseConnectionString, Boolean isWithTables, Boolean isWithViews) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.DiDFXMf6yqString">
            <summary>设置 SQLite.DiDFXMf6yq(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.GPmF9b7pbwString">
            <summary>设置 SQLite.GPmF9b7pbw(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.Generation">
            <summary>设置 SQLite.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.KQqF5xn7yRStringBuilderRef">
            <summary>设置 SQLite.KQqF5xn7yR(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.WDUFw7MF87StringBuilderRef">
            <summary>设置 SQLite.WDUFw7MF87(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.nXoFLBMCfIStringBuilderRef">
            <summary>设置 SQLite.nXoFLBMCfI(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.rJOFpubUGKString">
            <summary>设置 SQLite.rJOFpubUGK(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.vdnFKSZGxCStringBuilderRef">
            <summary>设置 SQLite.vdnFKSZGxC(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.zS4FtcxWnxString">
            <summary>设置 SQLite.zS4FtcxWnx(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.A0ZFMr015eString">
            <summary>设置 SQLite.A0ZFMr015e(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.DiDFXMf6yqString">
            <summary>设置 SQLite.DiDFXMf6yq(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.GPmF9b7pbwString">
            <summary>设置 SQLite.GPmF9b7pbw(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.Generation">
            <summary>设置 SQLite.Generation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.KQqF5xn7yRStringBuilderRef">
            <summary>设置 SQLite.KQqF5xn7yR(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.WDUFw7MF87StringBuilderRef">
            <summary>设置 SQLite.WDUFw7MF87(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.nXoFLBMCfIStringBuilderRef">
            <summary>设置 SQLite.nXoFLBMCfI(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.rJOFpubUGKString">
            <summary>设置 SQLite.rJOFpubUGK(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.vdnFKSZGxCStringBuilderRef">
            <summary>设置 SQLite.vdnFKSZGxC(StringBuilder&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.ShimSQLite.AllInstances.zS4FtcxWnxString">
            <summary>设置 SQLite.zS4FtcxWnx(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.StubMSSQL">
            <summary>Shove.Database.Persistences.Java.MSSQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubMSSQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubMSSQL.InitializeStub">
            <summary>初始化 type StubMSSQL 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubMSSQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubMSSQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubMSSQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.StubMySQL">
            <summary>Shove.Database.Persistences.Java.MySQL 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubMySQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubMySQL.InitializeStub">
            <summary>初始化 type StubMySQL 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubMySQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubMySQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubMySQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.StubOracle">
            <summary>Shove.Database.Persistences.Java.Oracle 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubOracle.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubOracle.InitializeStub">
            <summary>初始化 type StubOracle 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubOracle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubOracle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubOracle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Fakes.StubSQLite">
            <summary>Shove.Database.Persistences.Java.SQLite 的存根类型</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubSQLite.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Fakes.StubSQLite.InitializeStub">
            <summary>初始化 type StubSQLite 的新实例</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubSQLite.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubSQLite.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Database.Persistences.Java.Fakes.StubSQLite.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Fakes.ShimConverter">
            <summary>Shove.DatabaseFactory.Convert.Converter 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.#ctor(Shove.DatabaseFactory.Convert.Converter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AhM2AaL5g0Table">
            <summary>设置 Converter.AhM2AaL5g0(Table  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.BPh28uPSasDataRowString">
            <summary>设置 Converter.BPh28uPSas(DataRow  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.COo2ZZNXqUStringString">
            <summary>设置 Converter.COo2ZZNXqU(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.Constructor">
            <summary>设置 Converter.Converter() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.DGQ2xoCS86SQLiteConnectionStringStringStringRef">
            <summary>设置 Converter.DGQ2xoCS86(SQLiteConnection  , String  , String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.IZB2nDVSSZStringInt32">
            <summary>设置 Converter.IZB2nDVSSZ(String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.L0q2Pt7mMIMatch">
            <summary>设置 Converter.L0q2Pt7mMI(Match  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.P2k2IiiCOxStringString">
            <summary>设置 Converter.P2k2IiiCOx(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.SQLiteToMSSQLStringStringBooleanBooleanStringRef">
            <summary>设置 Converter.SQLiteToMSSQL(String SQLite_ConnectionString, String MSSQL_ConnectionString, Boolean IsWithData, Boolean ignoreViewRelyon, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.SQLiteToMSSQLStringStringBooleanStringRef">
            <summary>设置 Converter.SQLiteToMSSQL(String SQLite_ConnectionString, String MSSQL_ConnectionString, Boolean IsWithData, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.SQLiteToMySQLStringStringBooleanBooleanStringRef">
            <summary>设置 Converter.SQLiteToMySQL(String SQLite_ConnectionString, String MySQL_ConnectionString, Boolean IsWithData, Boolean ignoreViewRelyon, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.SQLiteToMySQLStringStringBooleanStringRef">
            <summary>设置 Converter.SQLiteToMySQL(String SQLite_ConnectionString, String MySQL_ConnectionString, Boolean IsWithData, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.WmJ2Hx2cO3String">
            <summary>设置 Converter.WmJ2Hx2cO3(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.Wn52aFpvDsString">
            <summary>设置 Converter.Wn52aFpvDs(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.YMh2iDsAH8String">
            <summary>设置 Converter.YMh2iDsAH8(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.bpT2vcKhbjSQLiteConnectionStringString">
            <summary>设置 Converter.bpT2vcKhbj(SQLiteConnection  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.e8124ow1qtStringInt32">
            <summary>设置 Converter.e8124ow1qt(String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.kxl2qkEsKCString">
            <summary>设置 Converter.kxl2qkEsKC(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.lBI23tu6wBSQLiteConnectionBoolean">
            <summary>设置 Converter.lBI23tu6wB(SQLiteConnection  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.uti2c9mHQ3String">
            <summary>设置 Converter.uti2c9mHQ3(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.AhM2AaL5g0Table">
            <summary>设置 Converter.AhM2AaL5g0(Table  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.BPh28uPSasDataRowString">
            <summary>设置 Converter.BPh28uPSas(DataRow  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.COo2ZZNXqUStringString">
            <summary>设置 Converter.COo2ZZNXqU(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.DGQ2xoCS86SQLiteConnectionStringStringStringRef">
            <summary>设置 Converter.DGQ2xoCS86(SQLiteConnection  , String  , String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.IZB2nDVSSZStringInt32">
            <summary>设置 Converter.IZB2nDVSSZ(String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.L0q2Pt7mMIMatch">
            <summary>设置 Converter.L0q2Pt7mMI(Match  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.P2k2IiiCOxStringString">
            <summary>设置 Converter.P2k2IiiCOx(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.SQLiteToMSSQLStringStringBooleanBooleanStringRef">
            <summary>设置 Converter.SQLiteToMSSQL(String SQLite_ConnectionString, String MSSQL_ConnectionString, Boolean IsWithData, Boolean ignoreViewRelyon, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.SQLiteToMSSQLStringStringBooleanStringRef">
            <summary>设置 Converter.SQLiteToMSSQL(String SQLite_ConnectionString, String MSSQL_ConnectionString, Boolean IsWithData, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.SQLiteToMySQLStringStringBooleanBooleanStringRef">
            <summary>设置 Converter.SQLiteToMySQL(String SQLite_ConnectionString, String MySQL_ConnectionString, Boolean IsWithData, Boolean ignoreViewRelyon, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.SQLiteToMySQLStringStringBooleanStringRef">
            <summary>设置 Converter.SQLiteToMySQL(String SQLite_ConnectionString, String MySQL_ConnectionString, Boolean IsWithData, String&amp; Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.WmJ2Hx2cO3String">
            <summary>设置 Converter.WmJ2Hx2cO3(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.Wn52aFpvDsString">
            <summary>设置 Converter.Wn52aFpvDs(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.YMh2iDsAH8String">
            <summary>设置 Converter.YMh2iDsAH8(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.bpT2vcKhbjSQLiteConnectionStringString">
            <summary>设置 Converter.bpT2vcKhbj(SQLiteConnection  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.e8124ow1qtStringInt32">
            <summary>设置 Converter.e8124ow1qt(String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.kxl2qkEsKCString">
            <summary>设置 Converter.kxl2qkEsKC(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.lBI23tu6wBSQLiteConnectionBoolean">
            <summary>设置 Converter.lBI23tu6wB(SQLiteConnection  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.ShimConverter.AllInstances.uti2c9mHQ3String">
            <summary>设置 Converter.uti2c9mHQ3(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Fakes.StubConverter">
            <summary>Shove.DatabaseFactory.Convert.Converter 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Fakes.StubConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Fakes.StubConverter.InitializeStub">
            <summary>初始化 type StubConverter 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.StubConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.StubConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Fakes.StubConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase">
            <summary>Shove.DatabaseFactory.Convert.Model.Database 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.#ctor(Shove.DatabaseFactory.Convert.Model.Database)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AddTableTable">
            <summary>设置 Database.AddTable(Table table) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AddViewView">
            <summary>设置 Database.AddView(View view) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.Constructor">
            <summary>设置 Database.Database() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.TableCountGet">
            <summary>设置 Database.get_TableCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.ViewCountGet">
            <summary>设置 Database.get_ViewCount() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AllInstances.AddTableTable">
            <summary>设置 Database.AddTable(Table table) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AllInstances.AddViewView">
            <summary>设置 Database.AddView(View view) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AllInstances.TableCountGet">
            <summary>设置 Database.get_TableCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimDatabase.AllInstances.ViewCountGet">
            <summary>设置 Database.get_ViewCount() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField">
            <summary>Shove.DatabaseFactory.Convert.Model.Field 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.#ctor(Shove.DatabaseFactory.Convert.Model.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.ConstructorStringStringInt32BooleanBooleanBooleanString">
            <summary>设置 Field.Field(String name, String dbtype, Int32 length, Boolean isauto_increment, Boolean isprimary_key, Boolean isnot_null, String defaultValue) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex">
            <summary>Shove.DatabaseFactory.Convert.Model.Index 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.#ctor(Shove.DatabaseFactory.Convert.Model.Index)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.ConstructorString">
            <summary>设置 Index.Index(String Name) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.ConstructorStringString">
            <summary>设置 Index.Index(String Name, String Body) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimIndex.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable">
            <summary>Shove.DatabaseFactory.Convert.Model.Table 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.#ctor(Shove.DatabaseFactory.Convert.Model.Table)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AddFieldField">
            <summary>设置 Table.AddField(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AddIndexIndex">
            <summary>设置 Table.AddIndex(Index index) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.ConstructorString">
            <summary>设置 Table.Table(String name) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.FieldCountGet">
            <summary>设置 Table.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.IndexCountGet">
            <summary>设置 Table.get_IndexCount() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AllInstances.AddFieldField">
            <summary>设置 Table.AddField(Field field) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AllInstances.AddIndexIndex">
            <summary>设置 Table.AddIndex(Index index) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AllInstances.FieldCountGet">
            <summary>设置 Table.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimTable.AllInstances.IndexCountGet">
            <summary>设置 Table.get_IndexCount() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView">
            <summary>Shove.DatabaseFactory.Convert.Model.View 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.#ctor(Shove.DatabaseFactory.Convert.Model.View)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.ConstructorString">
            <summary>设置 View.View(String name) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.ConstructorStringString">
            <summary>设置 View.View(String name, String body) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.ShimView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.StubDatabase">
            <summary>Shove.DatabaseFactory.Convert.Model.Database 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubDatabase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubDatabase.InitializeStub">
            <summary>初始化 type StubDatabase 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubDatabase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubDatabase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubDatabase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.StubField">
            <summary>Shove.DatabaseFactory.Convert.Model.Field 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubField.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubField.InitializeStub">
            <summary>初始化 type StubField 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubField.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubField.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubField.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex">
            <summary>Shove.DatabaseFactory.Convert.Model.Index 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex.InitializeStub">
            <summary>初始化 type StubIndex 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubIndex.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.StubTable">
            <summary>Shove.DatabaseFactory.Convert.Model.Table 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubTable.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubTable.InitializeStub">
            <summary>初始化 type StubTable 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Fakes.StubView">
            <summary>Shove.DatabaseFactory.Convert.Model.View 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubView.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubView.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Fakes.StubView.InitializeStub">
            <summary>初始化 type StubView 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubView.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubView.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Fakes.StubView.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory">
            <summary>Shove.DatabaseFactory.Factory 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.#ctor(Shove.DatabaseFactory.Factory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.BeginTransaction">
            <summary>设置 Factory.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.Close">
            <summary>设置 Factory.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.CloseBoolean">
            <summary>设置 Factory.Close(Boolean releaseConnectionCounter) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.CommitTranscation">
            <summary>设置 Factory.CommitTranscation() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.Constructor">
            <summary>设置 Factory.Factory() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ConstructorString">
            <summary>设置 Factory.Factory(String InitConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.CreateDatabaseConnection">
            <summary>设置 Factory.CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.CreateIndexStringStringBooleanString">
            <summary>设置 Factory.CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.DeleteStringString">
            <summary>设置 Factory.Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.DropIndexStringString">
            <summary>设置 Factory.DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ExecuteNonQueryString">
            <summary>设置 Factory.ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ExecuteQueryString">
            <summary>设置 Factory.ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ExecuteReaderString">
            <summary>设置 Factory.ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ExecuteScalarString">
            <summary>设置 Factory.ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.FilteSqlInfusionForConditionString">
            <summary>设置 Factory.FilteSqlInfusionForCondition(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.FilteSqlInfusionForFieldValueString">
            <summary>设置 Factory.FilteSqlInfusionForFieldValue(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.GetRowCountStringString">
            <summary>设置 Factory.GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 Factory.Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 Factory.Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.RollbackTranscation">
            <summary>设置 Factory.RollbackTranscation() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 Factory.Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__CreateDatabaseConnection">
            <summary>设置 Factory.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__CreateIndexStringStringBooleanString">
            <summary>设置 Factory.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__DeleteStringString">
            <summary>设置 Factory.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__DropIndexStringString">
            <summary>设置 Factory.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__ExecuteNonQueryString">
            <summary>设置 Factory.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__ExecuteQueryString">
            <summary>设置 Factory.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__ExecuteReaderString">
            <summary>设置 Factory.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__ExecuteScalarString">
            <summary>设置 Factory.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__GetRowCountStringString">
            <summary>设置 Factory.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 Factory.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 Factory.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 Factory.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.BeginTransaction">
            <summary>设置 Factory.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.Close">
            <summary>设置 Factory.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.CloseBoolean">
            <summary>设置 Factory.Close(Boolean releaseConnectionCounter) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.CommitTranscation">
            <summary>设置 Factory.CommitTranscation() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.CreateDatabaseConnection">
            <summary>设置 Factory.CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.CreateIndexStringStringBooleanString">
            <summary>设置 Factory.CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.DeleteStringString">
            <summary>设置 Factory.Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.DropIndexStringString">
            <summary>设置 Factory.DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.ExecuteNonQueryString">
            <summary>设置 Factory.ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.ExecuteQueryString">
            <summary>设置 Factory.ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.ExecuteReaderString">
            <summary>设置 Factory.ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.ExecuteScalarString">
            <summary>设置 Factory.ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.GetRowCountStringString">
            <summary>设置 Factory.GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 Factory.Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 Factory.Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.RollbackTranscation">
            <summary>设置 Factory.RollbackTranscation() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 Factory.Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__CreateDatabaseConnection">
            <summary>设置 Factory.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__CreateIndexStringStringBooleanString">
            <summary>设置 Factory.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__DeleteStringString">
            <summary>设置 Factory.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__DropIndexStringString">
            <summary>设置 Factory.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__ExecuteNonQueryString">
            <summary>设置 Factory.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__ExecuteQueryString">
            <summary>设置 Factory.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__ExecuteReaderString">
            <summary>设置 Factory.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__ExecuteScalarString">
            <summary>设置 Factory.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__GetRowCountStringString">
            <summary>设置 Factory.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 Factory.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 Factory.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.AllInstances.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 Factory.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect">
            <summary>Shove.DatabaseFactory.Factory+FieldCollect 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.#ctor(Shove.DatabaseFactory.Factory.FieldCollect)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AddString">
            <summary>设置 FieldCollect.Add(String field) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AddStringArray">
            <summary>设置 FieldCollect.Add(String[] fields) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.ConstructorStringArray">
            <summary>设置 FieldCollect.FieldCollect(String[] fields) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.CountGet">
            <summary>设置 FieldCollect.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.ItemGetInt32">
            <summary>设置 FieldCollect.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AllInstances.AddString">
            <summary>设置 FieldCollect.Add(String field) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AllInstances.AddStringArray">
            <summary>设置 FieldCollect.Add(String[] fields) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AllInstances.CountGet">
            <summary>设置 FieldCollect.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldCollect.AllInstances.ItemGetInt32">
            <summary>设置 FieldCollect.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate">
            <summary>Shove.DatabaseFactory.Factory+FieldValueCalculate 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.#ctor(Shove.DatabaseFactory.Factory.FieldValueCalculate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.ConstructorStringString">
            <summary>设置 FieldValueCalculate.FieldValueCalculate(String fieldName, String ormula) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.ToString">
            <summary>设置 FieldValueCalculate.ToString() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCalculate.AllInstances.ToString01">
            <summary>设置 FieldValueCalculate.ToString() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect">
            <summary>Shove.DatabaseFactory.Factory+FieldValueCollect 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.#ctor(Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AddObject">
            <summary>设置 FieldValueCollect.Add(Object value) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AddObjectArray">
            <summary>设置 FieldValueCollect.Add(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.ConstructorObjectArray">
            <summary>设置 FieldValueCollect.FieldValueCollect(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.CountGet">
            <summary>设置 FieldValueCollect.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.ItemGetInt32">
            <summary>设置 FieldValueCollect.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.ItemSetInt32Object">
            <summary>设置 FieldValueCollect.set_Item(Int32 Index, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AllInstances.AddObject">
            <summary>设置 FieldValueCollect.Add(Object value) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AllInstances.AddObjectArray">
            <summary>设置 FieldValueCollect.Add(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AllInstances.CountGet">
            <summary>设置 FieldValueCollect.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AllInstances.ItemGetInt32">
            <summary>设置 FieldValueCollect.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactory.ShimFieldValueCollect.AllInstances.ItemSetInt32Object">
            <summary>设置 FieldValueCollect.set_Item(Int32 Index, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactoryManager">
            <summary>Shove.DatabaseFactory.FactoryManager 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactoryManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactoryManager.#ctor(Shove.DatabaseFactory.FactoryManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactoryManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimFactoryManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactoryManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactoryManager.Constructor">
            <summary>设置 FactoryManager.FactoryManager() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactoryManager.ConstructorString">
            <summary>设置 FactoryManager.FactoryManager(String ConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimFactoryManager.StaticConstructor">
            <summary>设置 FactoryManager.FactoryManager() 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimFactoryManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimMSSQL">
            <summary>Shove.DatabaseFactory.MSSQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMSSQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMSSQL.#ctor(Shove.DatabaseFactory.MSSQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMSSQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMSSQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.BqK2Bak6WBString">
            <summary>设置 MSSQL.BqK2Bak6WB(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.Constructor">
            <summary>设置 MSSQL.MSSQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.ConstructorString">
            <summary>设置 MSSQL.MSSQL(String InitConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.KQn2Su6c7uString">
            <summary>设置 MSSQL.KQn2Su6c7u(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.PBS2TE3kdSStringFactoryFieldCollectStringString">
            <summary>设置 MSSQL.PBS2TE3kdS(String  , FieldCollect  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__CreateDatabaseConnection">
            <summary>设置 MSSQL.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__CreateIndexStringStringBooleanString">
            <summary>设置 MSSQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__DeleteStringString">
            <summary>设置 MSSQL.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__DropIndexStringString">
            <summary>设置 MSSQL.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__ExecuteNonQueryString">
            <summary>设置 MSSQL.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__ExecuteQueryString">
            <summary>设置 MSSQL.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__ExecuteReaderString">
            <summary>设置 MSSQL.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__ExecuteScalarString">
            <summary>设置 MSSQL.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__GetRowCountStringString">
            <summary>设置 MSSQL.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 MSSQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MSSQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 MSSQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.hbb2DwDmdkStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MSSQL.hbb2DwDmdk(String  , FieldCollect  , String  , String  , Int32  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.iTW2ylUpuhString">
            <summary>设置 MSSQL.iTW2ylUpuh(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.BqK2Bak6WBString">
            <summary>设置 MSSQL.BqK2Bak6WB(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.KQn2Su6c7uString">
            <summary>设置 MSSQL.KQn2Su6c7u(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.PBS2TE3kdSStringFactoryFieldCollectStringString">
            <summary>设置 MSSQL.PBS2TE3kdS(String  , FieldCollect  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__CreateDatabaseConnection">
            <summary>设置 MSSQL.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__CreateIndexStringStringBooleanString">
            <summary>设置 MSSQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__DeleteStringString">
            <summary>设置 MSSQL.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__DropIndexStringString">
            <summary>设置 MSSQL.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__ExecuteNonQueryString">
            <summary>设置 MSSQL.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__ExecuteQueryString">
            <summary>设置 MSSQL.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__ExecuteReaderString">
            <summary>设置 MSSQL.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__ExecuteScalarString">
            <summary>设置 MSSQL.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__GetRowCountStringString">
            <summary>设置 MSSQL.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 MSSQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MSSQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 MSSQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.hbb2DwDmdkStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MSSQL.hbb2DwDmdk(String  , FieldCollect  , String  , String  , Int32  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMSSQL.AllInstances.iTW2ylUpuhString">
            <summary>设置 MSSQL.iTW2ylUpuh(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimMySQL">
            <summary>Shove.DatabaseFactory.MySQL 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMySQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMySQL.#ctor(Shove.DatabaseFactory.MySQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMySQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimMySQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.Constructor">
            <summary>设置 MySQL.MySQL() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.ConstructorString">
            <summary>设置 MySQL.MySQL(String InitConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.U3X2bELQJHString">
            <summary>设置 MySQL.U3X2bELQJH(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__CreateDatabaseConnection">
            <summary>设置 MySQL.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__CreateIndexStringStringBooleanString">
            <summary>设置 MySQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__DeleteStringString">
            <summary>设置 MySQL.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__DropIndexStringString">
            <summary>设置 MySQL.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__ExecuteNonQueryString">
            <summary>设置 MySQL.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__ExecuteQueryString">
            <summary>设置 MySQL.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__ExecuteReaderString">
            <summary>设置 MySQL.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__ExecuteScalarString">
            <summary>设置 MySQL.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__GetRowCountStringString">
            <summary>设置 MySQL.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 MySQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MySQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 MySQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.fjs2RmZy6qString">
            <summary>设置 MySQL.fjs2RmZy6q(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.lTV2hPPdKLString">
            <summary>设置 MySQL.lTV2hPPdKL(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.U3X2bELQJHString">
            <summary>设置 MySQL.U3X2bELQJH(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__CreateDatabaseConnection">
            <summary>设置 MySQL.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__CreateIndexStringStringBooleanString">
            <summary>设置 MySQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__DeleteStringString">
            <summary>设置 MySQL.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__DropIndexStringString">
            <summary>设置 MySQL.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__ExecuteNonQueryString">
            <summary>设置 MySQL.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__ExecuteQueryString">
            <summary>设置 MySQL.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__ExecuteReaderString">
            <summary>设置 MySQL.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__ExecuteScalarString">
            <summary>设置 MySQL.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__GetRowCountStringString">
            <summary>设置 MySQL.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 MySQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MySQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 MySQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.fjs2RmZy6qString">
            <summary>设置 MySQL.fjs2RmZy6q(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimMySQL.AllInstances.lTV2hPPdKLString">
            <summary>设置 MySQL.lTV2hPPdKL(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimSQLite">
            <summary>Shove.DatabaseFactory.SQLite 的填充码类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimSQLite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimSQLite.#ctor(Shove.DatabaseFactory.SQLite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimSQLite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.ShimSQLite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.Constructor">
            <summary>设置 SQLite.SQLite() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.ConstructorString">
            <summary>设置 SQLite.SQLite(String InitConnectionString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__CreateDatabaseConnection">
            <summary>设置 SQLite.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__CreateIndexStringStringBooleanString">
            <summary>设置 SQLite.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__DeleteStringString">
            <summary>设置 SQLite.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__DropIndexStringString">
            <summary>设置 SQLite.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__ExecuteNonQueryString">
            <summary>设置 SQLite.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__ExecuteQueryString">
            <summary>设置 SQLite.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__ExecuteReaderString">
            <summary>设置 SQLite.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__ExecuteScalarString">
            <summary>设置 SQLite.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__GetRowCountStringString">
            <summary>设置 SQLite.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 SQLite.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 SQLite.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 SQLite.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.c0L2uLG8ORString">
            <summary>设置 SQLite.c0L2uLG8OR(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.iRp2G2Yl9BInt32String">
            <summary>设置 SQLite.iRp2G2Yl9B(Int32  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.iyf2eKkLslString">
            <summary>设置 SQLite.iyf2eKkLsl(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.sbb20jZLqGString">
            <summary>设置 SQLite.sbb20jZLqG(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__CreateDatabaseConnection">
            <summary>设置 SQLite.__CreateDatabaseConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__CreateIndexStringStringBooleanString">
            <summary>设置 SQLite.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__DeleteStringString">
            <summary>设置 SQLite.__Delete(String TableName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__DropIndexStringString">
            <summary>设置 SQLite.__DropIndex(String TableName, String IndexName) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__ExecuteNonQueryString">
            <summary>设置 SQLite.__ExecuteNonQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__ExecuteQueryString">
            <summary>设置 SQLite.__ExecuteQuery(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__ExecuteReaderString">
            <summary>设置 SQLite.__ExecuteReader(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__ExecuteScalarString">
            <summary>设置 SQLite.__ExecuteScalar(String CommandString) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__GetRowCountStringString">
            <summary>设置 SQLite.__GetRowCount(String TableOrViewName, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 SQLite.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 SQLite.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 SQLite.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.c0L2uLG8ORString">
            <summary>设置 SQLite.c0L2uLG8OR(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.iyf2eKkLslString">
            <summary>设置 SQLite.iyf2eKkLsl(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.ShimSQLite.AllInstances.sbb20jZLqGString">
            <summary>设置 SQLite.sbb20jZLqG(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.StubFactory">
            <summary>Shove.DatabaseFactory.Factory 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.InitializeStub">
            <summary>初始化 type StubFactory 的新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__CreateDatabaseConnection">
            <summary>设置 Factory.__CreateDatabaseConnection() 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__CreateDatabaseConnection01">
            <summary>设置 Factory.__CreateDatabaseConnection() 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>设置 Factory.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__CreateIndexStringStringBooleanString">
            <summary>设置 Factory.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__Delete(System.String,System.String)">
            <summary>设置 Factory.__Delete(String TableName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__DeleteStringString">
            <summary>设置 Factory.__Delete(String TableName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__DropIndex(System.String,System.String)">
            <summary>设置 Factory.__DropIndex(String TableName, String IndexName) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__DropIndexStringString">
            <summary>设置 Factory.__DropIndex(String TableName, String IndexName) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteNonQuery(System.String)">
            <summary>设置 Factory.__ExecuteNonQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteNonQueryString">
            <summary>设置 Factory.__ExecuteNonQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteQuery(System.String)">
            <summary>设置 Factory.__ExecuteQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteQueryString">
            <summary>设置 Factory.__ExecuteQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteReader(System.String)">
            <summary>设置 Factory.__ExecuteReader(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteReaderString">
            <summary>设置 Factory.__ExecuteReader(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteScalar(System.String)">
            <summary>设置 Factory.__ExecuteScalar(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__ExecuteScalarString">
            <summary>设置 Factory.__ExecuteScalar(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__GetRowCount(System.String,System.String)">
            <summary>设置 Factory.__GetRowCount(String TableOrViewName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__GetRowCountStringString">
            <summary>设置 Factory.__GetRowCount(String TableOrViewName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>设置 Factory.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 Factory.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>设置 Factory.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 Factory.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactory.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>设置 Factory.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubFactory.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 Factory.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 stub</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.StubFactoryManager">
            <summary>Shove.DatabaseFactory.FactoryManager 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactoryManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactoryManager.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubFactoryManager.InitializeStub">
            <summary>初始化 type StubFactoryManager 的新实例</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubFactoryManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubFactoryManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubFactoryManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.StubMSSQL">
            <summary>Shove.DatabaseFactory.MSSQL 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.InitializeStub">
            <summary>初始化 type StubMSSQL 的新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__CreateDatabaseConnection">
            <summary>设置 MSSQL.__CreateDatabaseConnection() 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__CreateDatabaseConnection01">
            <summary>设置 MSSQL.__CreateDatabaseConnection() 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>设置 MSSQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__CreateIndexStringStringBooleanString">
            <summary>设置 MSSQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__Delete(System.String,System.String)">
            <summary>设置 MSSQL.__Delete(String TableName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__DeleteStringString">
            <summary>设置 MSSQL.__Delete(String TableName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__DropIndex(System.String,System.String)">
            <summary>设置 MSSQL.__DropIndex(String TableName, String IndexName) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__DropIndexStringString">
            <summary>设置 MSSQL.__DropIndex(String TableName, String IndexName) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteNonQuery(System.String)">
            <summary>设置 MSSQL.__ExecuteNonQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteNonQueryString">
            <summary>设置 MSSQL.__ExecuteNonQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteQuery(System.String)">
            <summary>设置 MSSQL.__ExecuteQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteQueryString">
            <summary>设置 MSSQL.__ExecuteQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteReader(System.String)">
            <summary>设置 MSSQL.__ExecuteReader(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteReaderString">
            <summary>设置 MSSQL.__ExecuteReader(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteScalar(System.String)">
            <summary>设置 MSSQL.__ExecuteScalar(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__ExecuteScalarString">
            <summary>设置 MSSQL.__ExecuteScalar(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__GetRowCount(System.String,System.String)">
            <summary>设置 MSSQL.__GetRowCount(String TableOrViewName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__GetRowCountStringString">
            <summary>设置 MSSQL.__GetRowCount(String TableOrViewName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>设置 MSSQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 MSSQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>设置 MSSQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MSSQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMSSQL.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>设置 MSSQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMSSQL.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 MSSQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 stub</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubMSSQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubMSSQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubMSSQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.StubMySQL">
            <summary>Shove.DatabaseFactory.MySQL 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.InitializeStub">
            <summary>初始化 type StubMySQL 的新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__CreateDatabaseConnection">
            <summary>设置 MySQL.__CreateDatabaseConnection() 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__CreateDatabaseConnection01">
            <summary>设置 MySQL.__CreateDatabaseConnection() 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>设置 MySQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__CreateIndexStringStringBooleanString">
            <summary>设置 MySQL.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__Delete(System.String,System.String)">
            <summary>设置 MySQL.__Delete(String TableName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__DeleteStringString">
            <summary>设置 MySQL.__Delete(String TableName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__DropIndex(System.String,System.String)">
            <summary>设置 MySQL.__DropIndex(String TableName, String IndexName) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__DropIndexStringString">
            <summary>设置 MySQL.__DropIndex(String TableName, String IndexName) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteNonQuery(System.String)">
            <summary>设置 MySQL.__ExecuteNonQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteNonQueryString">
            <summary>设置 MySQL.__ExecuteNonQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteQuery(System.String)">
            <summary>设置 MySQL.__ExecuteQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteQueryString">
            <summary>设置 MySQL.__ExecuteQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteReader(System.String)">
            <summary>设置 MySQL.__ExecuteReader(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteReaderString">
            <summary>设置 MySQL.__ExecuteReader(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteScalar(System.String)">
            <summary>设置 MySQL.__ExecuteScalar(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__ExecuteScalarString">
            <summary>设置 MySQL.__ExecuteScalar(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__GetRowCount(System.String,System.String)">
            <summary>设置 MySQL.__GetRowCount(String TableOrViewName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__GetRowCountStringString">
            <summary>设置 MySQL.__GetRowCount(String TableOrViewName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>设置 MySQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 MySQL.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>设置 MySQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 MySQL.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubMySQL.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>设置 MySQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubMySQL.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 MySQL.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 stub</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubMySQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubMySQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubMySQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Fakes.StubSQLite">
            <summary>Shove.DatabaseFactory.SQLite 的存根类型</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.InitializeStub">
            <summary>初始化 type StubSQLite 的新实例</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__CreateDatabaseConnection">
            <summary>设置 SQLite.__CreateDatabaseConnection() 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__CreateDatabaseConnection01">
            <summary>设置 SQLite.__CreateDatabaseConnection() 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>设置 SQLite.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__CreateIndexStringStringBooleanString">
            <summary>设置 SQLite.__CreateIndex(String TableName, String IndexName, Boolean isUnique, String Body) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__Delete(System.String,System.String)">
            <summary>设置 SQLite.__Delete(String TableName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__DeleteStringString">
            <summary>设置 SQLite.__Delete(String TableName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__DropIndex(System.String,System.String)">
            <summary>设置 SQLite.__DropIndex(String TableName, String IndexName) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__DropIndexStringString">
            <summary>设置 SQLite.__DropIndex(String TableName, String IndexName) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteNonQuery(System.String)">
            <summary>设置 SQLite.__ExecuteNonQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteNonQueryString">
            <summary>设置 SQLite.__ExecuteNonQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteQuery(System.String)">
            <summary>设置 SQLite.__ExecuteQuery(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteQueryString">
            <summary>设置 SQLite.__ExecuteQuery(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteReader(System.String)">
            <summary>设置 SQLite.__ExecuteReader(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteReaderString">
            <summary>设置 SQLite.__ExecuteReader(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteScalar(System.String)">
            <summary>设置 SQLite.__ExecuteScalar(String CommandString) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__ExecuteScalarString">
            <summary>设置 SQLite.__ExecuteScalar(String CommandString) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__GetRowCount(System.String,System.String)">
            <summary>设置 SQLite.__GetRowCount(String TableOrViewName, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__GetRowCountStringString">
            <summary>设置 SQLite.__GetRowCount(String TableOrViewName, String Condition) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>设置 SQLite.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__InsertStringFactoryFieldCollectFactoryFieldValueCollect">
            <summary>设置 SQLite.__Insert(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>设置 SQLite.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__OpenStringFactoryFieldCollectStringStringInt32Int32">
            <summary>设置 SQLite.__Open(String TableOrViewName, FieldCollect fieldCollent, String Condition, String OrderBy, Int32 LimitStart, Int32 LimitCount) 的 stub</summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Fakes.StubSQLite.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>设置 SQLite.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 存根</summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Fakes.StubSQLite.__UpdateStringFactoryFieldCollectFactoryFieldValueCollectString">
            <summary>设置 SQLite.__Update(String TableName, FieldCollect fieldCollent, FieldValueCollect fieldValueCollect, String Condition) 的 stub</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubSQLite.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubSQLite.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Fakes.StubSQLite.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Drawing.Fakes.ShimUtility">
            <summary>Shove.Drawing.Utility 的填充码类型</summary>
        </member>
        <member name="M:Shove.Drawing.Fakes.ShimUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Drawing.Fakes.ShimUtility.#ctor(Shove.Drawing.Utility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Drawing.Fakes.ShimUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Drawing.Fakes.ShimUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.ShimUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.ShimUtility.Constructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.ShimUtility.ConvertImageToJPEGStringStringInt32">
            <summary>设置 Utility.ConvertImageToJPEG(String sourceImageUrl, String targetImageUrl, Int32 quality) 的 填充码</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.ShimUtility.ConvertPngTo8BitStringString">
            <summary>设置 Utility.ConvertPngTo8Bit(String sourceImageUrl, String targetImageUrl) 的 填充码</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.ShimUtility.ThumbnailStringStringDouble">
            <summary>设置 Utility.Thumbnail(String SourceImgFileName, String TargetImgFileName, Double Scale) 的 填充码</summary>
        </member>
        <member name="T:Shove.Drawing.Fakes.ShimUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Drawing.Fakes.StubUtility">
            <summary>Shove.Drawing.Utility 的存根类型</summary>
        </member>
        <member name="M:Shove.Drawing.Fakes.StubUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Drawing.Fakes.StubUtility.InitializeStub">
            <summary>初始化 type StubUtility 的新实例</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.StubUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.StubUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Drawing.Fakes.StubUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Fakes.ShimControlExt">
            <summary>Shove.ControlExt 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.#ctor(Shove.ControlExt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.Constructor">
            <summary>设置 ControlExt.ControlExt() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.FillDropDownListDropDownListDataTableStringString">
            <summary>设置 ControlExt.FillDropDownList(DropDownList ddl, DataTable dt, String TextFieldName, String ValueFieldName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.FillDropDownListDropDownListDataTableStringStringStringInt64">
            <summary>设置 ControlExt.FillDropDownList(DropDownList ddl, DataTable dt, String TextFieldName, String IDFieldName, String ParentIDFieldName, Int64 FirstLevelParentIDValue) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.FillListBoxListBoxDataTableStringString">
            <summary>设置 ControlExt.FillListBox(ListBox lb, DataTable dt, String TextField, String ValueField) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.QxAwb2yyRDropDownListDataTableStringStringStringStringInt32">
            <summary>设置 ControlExt.QxAwb2yyR(DropDownList  , DataTable  , String  , String  , String  , String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.SetDownListBoxTextDropDownListString">
            <summary>设置 ControlExt.SetDownListBoxText(DropDownList ddl, String Text) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.SetDownListBoxTextFromValueDropDownListString">
            <summary>设置 ControlExt.SetDownListBoxTextFromValue(DropDownList ddl, String Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.SetListBoxTextFromValueListBoxString">
            <summary>设置 ControlExt.SetListBoxTextFromValue(ListBox lb, String Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.SetListBoxTextListBoxString">
            <summary>设置 ControlExt.SetListBoxText(ListBox lb, String Text) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.SetTreeViewSelectedFromValueTreeViewString">
            <summary>设置 ControlExt.SetTreeViewSelectedFromValue(TreeView tv, String Value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.SetTreeViewSelectedTreeViewString">
            <summary>设置 ControlExt.SetTreeViewSelected(TreeView tv, String Text) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.ShimControlExt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.ShimControlExt.ShimItem">
            <summary>Shove.ControlExt+Item 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.ShimItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.ShimItem.#ctor(Shove.ControlExt.Item)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.ShimItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.ShimControlExt.ShimItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.ShimItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.ShimItem.Constructor">
            <summary>设置 Item.Item() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.ShimItem.ConstructorString">
            <summary>设置 Item.Item(String text) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.ShimItem.ConstructorStringObject">
            <summary>设置 Item.Item(String text, Object value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.ShimItem.ToString">
            <summary>设置 Item.ToString() 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.ShimControlExt.ShimItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Fakes.ShimControlExt.ShimItem.AllInstances.ToString01">
            <summary>设置 Item.ToString() 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Byte">
            <summary>Shove._Byte 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Byte.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Byte.#ctor(Shove._Byte)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Byte.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Byte.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ByteCompareByteArrayByteArray">
            <summary>设置 _Byte.ByteCompare(Byte[] input1, Byte[] input2) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ByteCopyByteArrayInt32Int32ByteArrayInt32">
            <summary>设置 _Byte.ByteCopy(Byte[] Source, Int32 StartIndex, Int32 Count, Byte[] Destination, Int32 DestinationStartIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.BytesToHexStringByteArray">
            <summary>设置 _Byte.BytesToHexString(Byte[] Input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.Constructor">
            <summary>设置 _Byte._Byte() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ExtractBytesFromBufferByteArrayInt32Int32">
            <summary>设置 _Byte.ExtractBytesFromBuffer(Byte[] Buffer, Int32 Index, Int32 Count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ExtractDoubleFromBufferByteArrayInt32Int32">
            <summary>设置 _Byte.ExtractDoubleFromBuffer(Byte[] Buffer, Int32 Index, Int32 Count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ExtractFloatFromBufferByteArrayInt32Int32">
            <summary>设置 _Byte.ExtractFloatFromBuffer(Byte[] Buffer, Int32 Index, Int32 Count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ExtractIntFromBufferByteArrayInt32Int32">
            <summary>设置 _Byte.ExtractIntFromBuffer(Byte[] Buffer, Int32 Index, Int32 Count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ExtractLongFromBufferByteArrayInt32Int32">
            <summary>设置 _Byte.ExtractLongFromBuffer(Byte[] Buffer, Int32 Index, Int32 Count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.ExtractStringFromBufferByteArrayInt32Int32">
            <summary>设置 _Byte.ExtractStringFromBuffer(Byte[] Buffer, Int32 Index, Int32 Count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.HexToBytesString">
            <summary>设置 _Byte.HexToBytes(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.HexToStringString">
            <summary>设置 _Byte.HexToString(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Byte.StringToHexString">
            <summary>设置 _Byte.StringToHex(String input) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Byte.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Convert">
            <summary>Shove._Convert 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.#ctor(Shove._Convert)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.AscChar">
            <summary>设置 _Convert.Asc(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ChrInt32">
            <summary>设置 _Convert.Chr(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.Constructor">
            <summary>设置 _Convert._Convert() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.DataTableToXMLDataTable">
            <summary>设置 _Convert.DataTableToXML(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToBoolStringBoolean">
            <summary>设置 _Convert.StrToBool(String str, Boolean Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToDateTimeStringString">
            <summary>设置 _Convert.StrToDateTime(String str, String Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToDoubleStringDouble">
            <summary>设置 _Convert.StrToDouble(String str, Double Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToFloatStringSingle">
            <summary>设置 _Convert.StrToFloat(String str, Single Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToIntStringInt32">
            <summary>设置 _Convert.StrToInt(String str, Int32 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToLongStringInt64">
            <summary>设置 _Convert.StrToLong(String str, Int64 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.StrToShortStringInt16">
            <summary>设置 _Convert.StrToShort(String str, Int16 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ToDBCString">
            <summary>设置 _Convert.ToDBC(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ToHtmlCodeString">
            <summary>设置 _Convert.ToHtmlCode(String sourceStr) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ToSBCString">
            <summary>设置 _Convert.ToSBC(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ToTextCodeString">
            <summary>设置 _Convert.ToTextCode(String sourceStr) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.UnicodeToChineseString">
            <summary>设置 _Convert.UnicodeToChinese(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.XMLToDataTableString">
            <summary>设置 _Convert.XMLToDataTable(String Xml) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Convert.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Convert.ShimChinese">
            <summary>Shove._Convert+Chinese 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChinese.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChinese.#ctor(Shove._Convert.Chinese)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChinese.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChinese.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.CGhFHWrbOlString">
            <summary>设置 Chinese.CGhFHWrbOl(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.Constructor">
            <summary>设置 Chinese.Chinese() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.IsNFaoMxhRStringInt32">
            <summary>设置 Chinese.IsNFaoMxhR(String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.ToPinYinFirstCharacterString">
            <summary>设置 Chinese.ToPinYinFirstCharacter(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.ToPinYinFullString">
            <summary>设置 Chinese.ToPinYinFull(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.ToPinYinString">
            <summary>设置 Chinese.ToPinYin(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.ToSimplifiedString">
            <summary>设置 Chinese.ToSimplified(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChinese.ToTraditionalString">
            <summary>设置 Chinese.ToTraditional(String str) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Convert.ShimChinese.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Convert.ShimChineseMoney">
            <summary>Shove._Convert+ChineseMoney 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChineseMoney.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChineseMoney.#ctor(Shove._Convert.ChineseMoney)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChineseMoney.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Convert.ShimChineseMoney.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.ConstructorDecimal">
            <summary>设置 ChineseMoney.ChineseMoney(Decimal money) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.Ju2F0sEmZ1Boolean">
            <summary>设置 ChineseMoney.Ju2F0sEmZ1(Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.StaticConstructor">
            <summary>设置 ChineseMoney.ChineseMoney() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.ToString">
            <summary>设置 ChineseMoney.ToString() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.ZeroStringGet">
            <summary>设置 ChineseMoney.get_ZeroString() 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Convert.ShimChineseMoney.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.AllInstances.Ju2F0sEmZ1Boolean">
            <summary>设置 ChineseMoney.Ju2F0sEmZ1(Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.AllInstances.ToString01">
            <summary>设置 ChineseMoney.ToString() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Convert.ShimChineseMoney.AllInstances.ZeroStringGet">
            <summary>设置 ChineseMoney.get_ZeroString() 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Excel">
            <summary>Shove._Excel 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.#ctor(Shove._Excel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.Constructor">
            <summary>设置 _Excel._Excel() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.DataControlToExcelAndDownloadControl">
            <summary>设置 _Excel.DataControlToExcelAndDownload(Control ctl) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.DataControlToExcelAndDownloadControlString">
            <summary>设置 _Excel.DataControlToExcelAndDownload(Control ctl, String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.DataTableToWorkBookAndDownloadDataTableString">
            <summary>设置 _Excel.DataTableToWorkBookAndDownload(DataTable dt, String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.DataTableToWorkBookAndDownloadDataTableStringStringArray">
            <summary>设置 _Excel.DataTableToWorkBookAndDownload(DataTable dt, String FileName, String[] Cells) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.DataTableToWorkBookDataTable">
            <summary>设置 _Excel.DataTableToWorkBook(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.DataTableToWorkBookDataTableStringArray">
            <summary>设置 _Excel.DataTableToWorkBook(DataTable dt, String[] Cells) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.SVaK8Z0hyWorkbook">
            <summary>设置 _Excel.SVaK8Z0hy(Workbook  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.wyj5AFCiv">
            <summary>设置 _Excel.wyj5AFCiv() 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Excel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Excel.ShimExcelHelper">
            <summary>Shove._Excel+ExcelHelper 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimExcelHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimExcelHelper.#ctor(Shove._Excel.ExcelHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimExcelHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimExcelHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.Close">
            <summary>设置 ExcelHelper.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.ConstructorString">
            <summary>设置 ExcelHelper.ExcelHelper(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.GetSheetNames">
            <summary>设置 ExcelHelper.GetSheetNames() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.GetWorksheetByNameString">
            <summary>设置 ExcelHelper.GetWorksheetByName(String name) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.ReadStringStringString">
            <summary>设置 ExcelHelper.Read(String SheetName, String StartCell, String EndCell) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Excel.ShimExcelHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.AllInstances.Close">
            <summary>设置 ExcelHelper.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.AllInstances.GetSheetNames">
            <summary>设置 ExcelHelper.GetSheetNames() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.AllInstances.GetWorksheetByNameString">
            <summary>设置 ExcelHelper.GetWorksheetByName(String name) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimExcelHelper.AllInstances.ReadStringStringString">
            <summary>设置 ExcelHelper.Read(String SheetName, String StartCell, String EndCell) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper">
            <summary>Shove._Excel+NPOIExcelHelper 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.#ctor(Shove._Excel.NPOIExcelHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.Constructor">
            <summary>设置 NPOIExcelHelper.NPOIExcelHelper() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.GOTFbOjad0MemoryStreamString">
            <summary>设置 NPOIExcelHelper.GOTFbOjad0(MemoryStream  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.HasDataStream">
            <summary>设置 NPOIExcelHelper.HasData(Stream excelFileStream) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.HasDataStreamInt32">
            <summary>设置 NPOIExcelHelper.HasData(Stream excelFileStream, Int32 sheetIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStream">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(Stream excelFileStream) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStreamInt32">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(Stream excelFileStream, Int32 sheetIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStreamInt32Int32">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(Stream excelFileStream, Int32 sheetIndex, Int32 headerRowIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStreamString">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(Stream excelFileStream, String sheetName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStreamStringInt32">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(Stream excelFileStream, String sheetName, Int32 headerRowIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelString">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStringInt32">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(String fileName, Int32 sheetIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStringInt32Int32">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(String fileName, Int32 sheetIndex, Int32 headerRowIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStringString">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(String fileName, String sheetName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderFromExcelStringStringInt32">
            <summary>设置 NPOIExcelHelper.RenderFromExcel(String fileName, String sheetName, Int32 headerRowIndex) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderToExcelDataTable">
            <summary>设置 NPOIExcelHelper.RenderToExcel(DataTable table) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderToExcelDataTableHttpContextString">
            <summary>设置 NPOIExcelHelper.RenderToExcel(DataTable table, HttpContext context, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderToExcelDataTableString">
            <summary>设置 NPOIExcelHelper.RenderToExcel(DataTable table, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderToExcelIDataReader">
            <summary>设置 NPOIExcelHelper.RenderToExcel(IDataReader reader) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderToExcelIDataReaderHttpContextString">
            <summary>设置 NPOIExcelHelper.RenderToExcel(IDataReader reader, HttpContext context, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.RenderToExcelIDataReaderString">
            <summary>设置 NPOIExcelHelper.RenderToExcel(IDataReader reader, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.Tv8FB5Eq9DICell">
            <summary>设置 NPOIExcelHelper.Tv8FB5Eq9D(ICell  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.VFWFSnjB4cISheet">
            <summary>设置 NPOIExcelHelper.VFWFSnjB4c(ISheet  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.dDVFhmy8nNISheetInt32">
            <summary>设置 NPOIExcelHelper.dDVFhmy8nN(ISheet  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.uBJFRxWo70MemoryStreamHttpContextString">
            <summary>设置 NPOIExcelHelper.uBJFRxWo70(MemoryStream  , HttpContext  , String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Excel.ShimNPOIExcelHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_String">
            <summary>Shove._String 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.#ctor(Shove._String)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.BytesToHexStringByteArray">
            <summary>设置 _String.BytesToHexString(Byte[] Input) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.BytesToStringByteArray">
            <summary>设置 _String.BytesToString(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.CompressString">
            <summary>设置 _String.Compress(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.Constructor">
            <summary>设置 _String._String() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ConvertEncodingStringEncodingEncoding">
            <summary>设置 _String.ConvertEncoding(String input, Encoding srcEncoding, Encoding tarEncoding) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ConvertEncodingStringStringString">
            <summary>设置 _String.ConvertEncoding(String input, String srcEncoding, String tarEncoding) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.CutStringInt32">
            <summary>设置 _String.Cut(String Input, Int32 Length) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.DecodeBase64String">
            <summary>设置 _String.DecodeBase64(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.DecompressByteArray">
            <summary>设置 _String.Decompress(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.EncodeBase64String">
            <summary>设置 _String.EncodeBase64(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.GetBytesLengthString">
            <summary>设置 _String.GetBytesLength(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.GetBytesLengthStringEncoding">
            <summary>设置 _String.GetBytesLength(String str, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.GetLengthString">
            <summary>设置 _String.GetLength(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.HtmlTextCutStringInt32">
            <summary>设置 _String.HtmlTextCut(String Input, Int32 Length) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ReplaceAtStringCharInt32">
            <summary>设置 _String.ReplaceAt(String input, Char ch, Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ReverseString">
            <summary>设置 _String.Reverse(String sSourceStr) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.SplitStringInt32">
            <summary>设置 _String.Split(String Input, Int32 PartLength) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.SplitStringInt32Int32">
            <summary>设置 _String.Split(String Input, Int32 PartLength, Int32 MaxPartNum) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.StandardizationIdentifierString">
            <summary>设置 _String.StandardizationIdentifier(String str) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.StringAtStringChar">
            <summary>设置 _String.StringAt(String str, Char ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.isChineseCharactersChar">
            <summary>设置 _String.isChineseCharacters(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.isDBCCharactersChar">
            <summary>设置 _String.isDBCCharacters(Char ch) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_String.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_String.ShimValid">
            <summary>Shove._String+Valid 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.ShimValid.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.ShimValid.#ctor(Shove._String.Valid)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.ShimValid.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_String.ShimValid.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.Constructor">
            <summary>设置 Valid.Valid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isBankCardNumberString">
            <summary>设置 Valid.isBankCardNumber(String BankCardNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isDateString">
            <summary>设置 Valid.isDate(String DateString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isDateTimeString">
            <summary>设置 Valid.isDateTime(String DateTimeString) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isEmailString">
            <summary>设置 Valid.isEmail(String Email) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isIDCardNumberString">
            <summary>设置 Valid.isIDCardNumber(String IDCardNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isIDCardNumber_HongkongString">
            <summary>设置 Valid.isIDCardNumber_Hongkong(String IDCardNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isIDCardNumber_MacauString">
            <summary>设置 Valid.isIDCardNumber_Macau(String IDCardNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isIDCardNumber_SingaporeString">
            <summary>设置 Valid.isIDCardNumber_Singapore(String IDCardNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isIDCardNumber_TaiwanString">
            <summary>设置 Valid.isIDCardNumber_Taiwan(String IDCardNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isIPAddressString">
            <summary>设置 Valid.isIPAddress(String Address) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isMobileString">
            <summary>设置 Valid.isMobile(String MobileNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isUrlString">
            <summary>设置 Valid.isUrl(String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_String.ShimValid.isUrlStringBoolean">
            <summary>设置 Valid.isUrl(String Url, Boolean WithPreFix) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_String.ShimValid.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Xml">
            <summary>Shove._Xml 的填充码类型</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Xml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Xml.#ctor(Shove._Xml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Xml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Fakes.Shim_Xml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Xml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Xml.Constructor">
            <summary>设置 _Xml._Xml() 的 填充码</summary>
        </member>
        <member name="P:Shove.Fakes.Shim_Xml.XmlToJsonString">
            <summary>设置 _Xml.XmlToJson(String XmlInput) 的 填充码</summary>
        </member>
        <member name="T:Shove.Fakes.Shim_Xml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Fakes.StubControlExt">
            <summary>Shove.ControlExt 的存根类型</summary>
        </member>
        <member name="M:Shove.Fakes.StubControlExt.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Fakes.StubControlExt.InitializeStub">
            <summary>初始化 type StubControlExt 的新实例</summary>
        </member>
        <member name="P:Shove.Fakes.StubControlExt.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Fakes.StubControlExt.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Fakes.StubControlExt.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Fakes.Stub_Byte">
            <summary>Shove._Byte 的存根类型</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Byte.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Byte.InitializeStub">
            <summary>初始化 type Stub_Byte 的新实例</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Byte.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Byte.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Byte.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Fakes.Stub_Convert">
            <summary>Shove._Convert 的存根类型</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Convert.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Convert.InitializeStub">
            <summary>初始化 type Stub_Convert 的新实例</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Convert.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Convert.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Convert.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Fakes.Stub_Excel">
            <summary>Shove._Excel 的存根类型</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Excel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Excel.InitializeStub">
            <summary>初始化 type Stub_Excel 的新实例</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Excel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Excel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Excel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Fakes.Stub_String">
            <summary>Shove._String 的存根类型</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_String.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_String.InitializeStub">
            <summary>初始化 type Stub_String 的新实例</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_String.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_String.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_String.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Fakes.Stub_Xml">
            <summary>Shove._Xml 的存根类型</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Xml.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Fakes.Stub_Xml.InitializeStub">
            <summary>初始化 type Stub_Xml 的新实例</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Xml.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Xml.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Fakes.Stub_Xml.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.ShimGeneralRestGateway">
            <summary>Shove.Gateways.GeneralRestGateway 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimGeneralRestGateway.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimGeneralRestGateway.#ctor(Shove.Gateways.GeneralRestGateway)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimGeneralRestGateway.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimGeneralRestGateway.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimGeneralRestGateway.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimGeneralRestGateway.BuildUrlStringStringDictionaryOfStringObject">
            <summary>设置 GeneralRestGateway.BuildUrl(String urlBase, String key, Dictionary`2&lt;String,Object&gt; parameters) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimGeneralRestGateway.Constructor">
            <summary>设置 GeneralRestGateway.GeneralRestGateway() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimGeneralRestGateway.HandleStringInt32GeneralRestGatewayDelegateHandleRequestStringRef">
            <summary>设置 GeneralRestGateway.Handle(String key, Int32 allowTimespanSeconds, DelegateHandleRequest HandleRequest, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.ShimGeneralRestGateway.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.ShimIcp">
            <summary>Shove.Gateways.Icp 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimIcp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimIcp.#ctor(Shove.Gateways.Icp)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimIcp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimIcp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimIcp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimIcp.Constructor">
            <summary>设置 Icp.Icp() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimIcp.IcpBeianQueryRealTimeString">
            <summary>设置 Icp.IcpBeianQueryRealTime(String domainName) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.ShimIcp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.ShimSMS">
            <summary>Shove.Gateways.SMS 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimSMS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimSMS.#ctor(Shove.Gateways.SMS)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimSMS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.ShimSMS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimSMS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimSMS.Constructor">
            <summary>设置 SMS.SMS() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimSMS.GetBalanceStringString">
            <summary>设置 SMS.GetBalance(String RegCode, String RegKey) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimSMS.SendSMSStringStringStringString">
            <summary>设置 SMS.SendSMS(String RegCode, String RegKey, String Content, String To) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.ShimSMS.SendSMSStringStringStringStringDateTime">
            <summary>设置 SMS.SendSMS(String RegCode, String RegKey, String Content, String To, DateTime SendTime) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.ShimSMS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.StubGeneralRestGateway">
            <summary>Shove.Gateways.GeneralRestGateway 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.StubGeneralRestGateway.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.StubGeneralRestGateway.InitializeStub">
            <summary>初始化 type StubGeneralRestGateway 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubGeneralRestGateway.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubGeneralRestGateway.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubGeneralRestGateway.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.StubIcp">
            <summary>Shove.Gateways.Icp 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.StubIcp.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.StubIcp.InitializeStub">
            <summary>初始化 type StubIcp 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubIcp.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubIcp.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubIcp.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Fakes.StubSMS">
            <summary>Shove.Gateways.SMS 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.StubSMS.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Fakes.StubSMS.InitializeStub">
            <summary>初始化 type StubSMS 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubSMS.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubSMS.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Fakes.StubSMS.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord">
            <summary>Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.#ctor(Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.ConstructorStringStringStringStringString">
            <summary>设置 CustomerChatRecord.CustomerChatRecord(String worker, String openid, String opercode, String time, String text) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.OpenidGet">
            <summary>设置 CustomerChatRecord.get_Openid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.OperateIdString">
            <summary>设置 CustomerChatRecord.OperateId(String opercode) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.OpercodeGet">
            <summary>设置 CustomerChatRecord.get_Opercode() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.TextGet">
            <summary>设置 CustomerChatRecord.get_Text() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.TimeGet">
            <summary>设置 CustomerChatRecord.get_Time() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.WorkerGet">
            <summary>设置 CustomerChatRecord.get_Worker() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.AllInstances.OpenidGet">
            <summary>设置 CustomerChatRecord.get_Openid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.AllInstances.OpercodeGet">
            <summary>设置 CustomerChatRecord.get_Opercode() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.AllInstances.TextGet">
            <summary>设置 CustomerChatRecord.get_Text() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.AllInstances.TimeGet">
            <summary>设置 CustomerChatRecord.get_Time() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerChatRecord.AllInstances.WorkerGet">
            <summary>设置 CustomerChatRecord.get_Worker() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.CustomerServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.CustomerServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.Constructor">
            <summary>设置 CustomerServiceMessage.CustomerServiceMessage() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimCustomerServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.ErrorInformation 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.#ctor(Shove.Gateways.Weixin.Gongzhong.ErrorInformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.Constructor">
            <summary>设置 ErrorInformation.ErrorInformation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.GetErrorCodeStringString">
            <summary>设置 ErrorInformation.GetErrorCode(String json, String key) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimErrorInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.FansListInformation 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.#ctor(Shove.Gateways.Weixin.Gongzhong.FansListInformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.Constructor">
            <summary>设置 FansListInformation.FansListInformation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.CountGet">
            <summary>设置 FansListInformation.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.CountSetString">
            <summary>设置 FansListInformation.set_Count(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.DataGet">
            <summary>设置 FansListInformation.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.DataSetListOfString">
            <summary>设置 FansListInformation.set_Data(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.Next_openidGet">
            <summary>设置 FansListInformation.get_Next_openid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.Next_openidSetString">
            <summary>设置 FansListInformation.set_Next_openid(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.TotalGet">
            <summary>设置 FansListInformation.get_Total() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.TotalSetString">
            <summary>设置 FansListInformation.set_Total(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.CountGet">
            <summary>设置 FansListInformation.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.CountSetString">
            <summary>设置 FansListInformation.set_Count(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.DataGet">
            <summary>设置 FansListInformation.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.DataSetListOfString">
            <summary>设置 FansListInformation.set_Data(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.Next_openidGet">
            <summary>设置 FansListInformation.get_Next_openid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.Next_openidSetString">
            <summary>设置 FansListInformation.set_Next_openid(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.TotalGet">
            <summary>设置 FansListInformation.get_Total() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimFansListInformation.AllInstances.TotalSetString">
            <summary>设置 FansListInformation.set_Total(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation">
            <summary>Shove.Gateways.Weixin.Gongzhong.GroupsInfromation 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.#ctor(Shove.Gateways.Weixin.Gongzhong.GroupsInfromation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.Constructor">
            <summary>设置 GroupsInfromation.GroupsInfromation() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.ConstructorStringStringString">
            <summary>设置 GroupsInfromation.GroupsInfromation(String id, String name, String count) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.CountGet">
            <summary>设置 GroupsInfromation.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.CountSetString">
            <summary>设置 GroupsInfromation.set_Count(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.IdGet">
            <summary>设置 GroupsInfromation.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.IdSetString">
            <summary>设置 GroupsInfromation.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.NameGet">
            <summary>设置 GroupsInfromation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.NameSetString">
            <summary>设置 GroupsInfromation.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances.CountGet">
            <summary>设置 GroupsInfromation.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances.CountSetString">
            <summary>设置 GroupsInfromation.set_Count(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances.IdGet">
            <summary>设置 GroupsInfromation.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances.IdSetString">
            <summary>设置 GroupsInfromation.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances.NameGet">
            <summary>设置 GroupsInfromation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimGroupsInfromation.AllInstances.NameSetString">
            <summary>设置 GroupsInfromation.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.ConstructorStringString">
            <summary>设置 ImageServiceMessage.ImageServiceMessage(String _media_id, String _touser) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.Media_idGet">
            <summary>设置 ImageServiceMessage.get_Media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.ToJson">
            <summary>设置 ImageServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.AllInstances.Media_idGet">
            <summary>设置 ImageServiceMessage.get_Media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageServiceMessage.AllInstances.ToJson">
            <summary>设置 ImageServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ImageTextMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.ImageTextMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.ArticleCountGet">
            <summary>设置 ImageTextMessage.get_ArticleCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.ConstructorStringStringStringStringString">
            <summary>设置 ImageTextMessage.ImageTextMessage(String articleCount, String title, String description, String picUrl, String url) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.DescriptionGet">
            <summary>设置 ImageTextMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.PicUrlGet">
            <summary>设置 ImageTextMessage.get_PicUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.TitleGet">
            <summary>设置 ImageTextMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.UrlGet">
            <summary>设置 ImageTextMessage.get_Url() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.AllInstances.ArticleCountGet">
            <summary>设置 ImageTextMessage.get_ArticleCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.AllInstances.DescriptionGet">
            <summary>设置 ImageTextMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.AllInstances.PicUrlGet">
            <summary>设置 ImageTextMessage.get_PicUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.AllInstances.TitleGet">
            <summary>设置 ImageTextMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextMessage.AllInstances.UrlGet">
            <summary>设置 ImageTextMessage.get_Url() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.ConstructorStringStringStringStringString">
            <summary>设置 ImageTextServiceMessage.ImageTextServiceMessage(String _title, String _description, String _url, String _picurl, String _touser) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.DescriptionGet">
            <summary>设置 ImageTextServiceMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.PicurlGet">
            <summary>设置 ImageTextServiceMessage.get_Picurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.StaticConstructor">
            <summary>设置 ImageTextServiceMessage.ImageTextServiceMessage() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.TitleGet">
            <summary>设置 ImageTextServiceMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.ToJson">
            <summary>设置 ImageTextServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.UrlGet">
            <summary>设置 ImageTextServiceMessage.get_Url() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.AllInstances.DescriptionGet">
            <summary>设置 ImageTextServiceMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.AllInstances.PicurlGet">
            <summary>设置 ImageTextServiceMessage.get_Picurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.AllInstances.TitleGet">
            <summary>设置 ImageTextServiceMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.AllInstances.ToJson">
            <summary>设置 ImageTextServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimImageTextServiceMessage.AllInstances.UrlGet">
            <summary>设置 ImageTextServiceMessage.get_Url() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.Information 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.#ctor(Shove.Gateways.Weixin.Gongzhong.Information)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.AllGroupsInfromationStringRef">
            <summary>设置 Information.AllGroupsInfromation(String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.Constructor">
            <summary>设置 Information.Information() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.CreateGroupsStringStringRefInt32Ref">
            <summary>设置 Information.CreateGroups(String GroupsName, String&amp; errorDescription, Int32&amp; GroupsId) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.CreatePerpetual_Two_Dimension_CodeStringStringRefStringRef">
            <summary>设置 Information.CreatePerpetual_Two_Dimension_Code(String scene_id, String&amp; ticket, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.CreateTemporary_Two_Dimension_CodeStringStringRefStringRef">
            <summary>设置 Information.CreateTemporary_Two_Dimension_Code(String scene_id, String&amp; ticket, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.GetCustomerChatRecordStringDateTimeDateTimeInt32Int32StringRef">
            <summary>设置 Information.GetCustomerChatRecord(String openId, DateTime starttime, DateTime endtime, Int32 pagesize, Int32 pageindex, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.GetFansListStringStringRef">
            <summary>设置 Information.GetFansList(String next_openid, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.GetGroupIdString">
            <summary>设置 Information.GetGroupId(String OpenID) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.GetUserInformationStringStringStringRef">
            <summary>设置 Information.GetUserInformation(String OpenId, String lang, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.ShiftUserGroupsStringStringStringRef">
            <summary>设置 Information.ShiftUserGroups(String openid, String to_groupid, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.T8UXEC1eyuStringStringRef">
            <summary>设置 Information.T8UXEC1eyu(String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.UpdateGroupsNameStringStringStringRef">
            <summary>设置 Information.UpdateGroupsName(String GroupsId, String GroupsName, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.drZXdoLyIEStringStringRefStringRef">
            <summary>设置 Information.drZXdoLyIE(String  , String&amp;  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.zPIX7u6U4JStringStringStringRefStringRef">
            <summary>设置 Information.zPIX7u6U4J(String  , String  , String&amp;  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AuthorGet">
            <summary>设置 MassImageTextMessage.get_Author() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.ConstructorStringStringStringStringStringString">
            <summary>设置 MassImageTextMessage.MassImageTextMessage(String _thumb_media_id, String _author, String _title, String _content_source_url, String _content, String _digest) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.ContentGet">
            <summary>设置 MassImageTextMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.Content_source_urlGet">
            <summary>设置 MassImageTextMessage.get_Content_source_url() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.DigestGet">
            <summary>设置 MassImageTextMessage.get_Digest() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.Thumb_media_idGet">
            <summary>设置 MassImageTextMessage.get_Thumb_media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.TitleGet">
            <summary>设置 MassImageTextMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.Tojson">
            <summary>设置 MassImageTextMessage.Tojson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.AuthorGet">
            <summary>设置 MassImageTextMessage.get_Author() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.ContentGet">
            <summary>设置 MassImageTextMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.Content_source_urlGet">
            <summary>设置 MassImageTextMessage.get_Content_source_url() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.DigestGet">
            <summary>设置 MassImageTextMessage.get_Digest() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.Thumb_media_idGet">
            <summary>设置 MassImageTextMessage.get_Thumb_media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.TitleGet">
            <summary>设置 MassImageTextMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMassImageTextMessage.AllInstances.Tojson">
            <summary>设置 MassImageTextMessage.Tojson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu">
            <summary>Shove.Gateways.Weixin.Gongzhong.Menu 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.#ctor(Shove.Gateways.Weixin.Gongzhong.Menu)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.Constructor">
            <summary>设置 Menu.Menu() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.KeyGet">
            <summary>设置 Menu.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.KeySetString">
            <summary>设置 Menu.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.NameGet">
            <summary>设置 Menu.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.NameSetString">
            <summary>设置 Menu.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.TypeGet">
            <summary>设置 Menu.get_Type() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.TypeSetString">
            <summary>设置 Menu.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances.KeyGet">
            <summary>设置 Menu.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances.KeySetString">
            <summary>设置 Menu.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances.NameGet">
            <summary>设置 Menu.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances.NameSetString">
            <summary>设置 Menu.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances.TypeGet">
            <summary>设置 Menu.get_Type() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenu.AllInstances.TypeSetString">
            <summary>设置 Menu.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager">
            <summary>Shove.Gateways.Weixin.Gongzhong.MenuManager 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.#ctor(Shove.Gateways.Weixin.Gongzhong.MenuManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.Constructor">
            <summary>设置 MenuManager.MenuManager() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.CreateListOfMenuViewStringRef">
            <summary>设置 MenuManager.Create(List`1&lt;MenuView&gt; Menus, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.DeleteStringRef">
            <summary>设置 MenuManager.Delete(String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.gMuMfSoMyWListOfMenuView">
            <summary>设置 MenuManager.gMuMfSoMyW(List`1&lt;MenuView&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.jafMUr2MHrStringStringStringRef">
            <summary>设置 MenuManager.jafMUr2MHr(String  , String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.vEFMF1qM0ZListOfMenuViewStringRef">
            <summary>设置 MenuManager.vEFMF1qM0Z(List`1&lt;MenuView&gt;  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView">
            <summary>Shove.Gateways.Weixin.Gongzhong.MenuView 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.#ctor(Shove.Gateways.Weixin.Gongzhong.MenuView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.Constructor">
            <summary>设置 MenuView.MenuView() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.SubMenusGet">
            <summary>设置 MenuView.get_SubMenus() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.SubMenusSetListOfMenu">
            <summary>设置 MenuView.set_SubMenus(List`1&lt;Menu&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.AllInstances.SubMenusGet">
            <summary>设置 MenuView.get_SubMenus() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMenuView.AllInstances.SubMenusSetListOfMenu">
            <summary>设置 MenuView.set_SubMenus(List`1&lt;Menu&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.Message 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.Message)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.Constructor">
            <summary>设置 Message.Message() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.ConstructorString">
            <summary>设置 Message.Message(String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.ConstructorStringStringDateTimeString">
            <summary>设置 Message.Message(String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.CreateTimeGet">
            <summary>设置 Message.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.DeveloperIdGet">
            <summary>设置 Message.get_DeveloperId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.MsgTypeGet">
            <summary>设置 Message.get_MsgType() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.OpenIDGet">
            <summary>设置 Message.get_OpenID() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.AllInstances.CreateTimeGet">
            <summary>设置 Message.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.AllInstances.DeveloperIdGet">
            <summary>设置 Message.get_DeveloperId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.AllInstances.MsgTypeGet">
            <summary>设置 Message.get_MsgType() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMessage.AllInstances.OpenIDGet">
            <summary>设置 Message.get_OpenID() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.MusicMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.MusicMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.ConstructorStringStringStringString">
            <summary>设置 MusicMessage.MusicMessage(String title, String description, String musicUrl, String hQMusicUrl) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.DescriptionGet">
            <summary>设置 MusicMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.HQMusicUrlGet">
            <summary>设置 MusicMessage.get_HQMusicUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.MusicUrlGet">
            <summary>设置 MusicMessage.get_MusicUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.TitleGet">
            <summary>设置 MusicMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.AllInstances.DescriptionGet">
            <summary>设置 MusicMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.AllInstances.HQMusicUrlGet">
            <summary>设置 MusicMessage.get_HQMusicUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.AllInstances.MusicUrlGet">
            <summary>设置 MusicMessage.get_MusicUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicMessage.AllInstances.TitleGet">
            <summary>设置 MusicMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.ConstructorStringStringStringStringStringString">
            <summary>设置 MusicServiceMessage.MusicServiceMessage(String _title, String _description, String _musicurl, String _hqmusicurl, String _thumb_media_id, String _touser) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.DescriptionGet">
            <summary>设置 MusicServiceMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.HqmusicurlGet">
            <summary>设置 MusicServiceMessage.get_Hqmusicurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.MusicurlGet">
            <summary>设置 MusicServiceMessage.get_Musicurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.Thumb_media_idGet">
            <summary>设置 MusicServiceMessage.get_Thumb_media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.TitleGet">
            <summary>设置 MusicServiceMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.ToJson">
            <summary>设置 MusicServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances.DescriptionGet">
            <summary>设置 MusicServiceMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances.HqmusicurlGet">
            <summary>设置 MusicServiceMessage.get_Hqmusicurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances.MusicurlGet">
            <summary>设置 MusicServiceMessage.get_Musicurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances.Thumb_media_idGet">
            <summary>设置 MusicServiceMessage.get_Thumb_media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances.TitleGet">
            <summary>设置 MusicServiceMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimMusicServiceMessage.AllInstances.ToJson">
            <summary>设置 MusicServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.ConstructorStringStringStringStringStringStringDateTimeString">
            <summary>设置 RepuestGeographicalPositionmMessage.RepuestGeographicalPositionmMessage(String _Event, String _Latitude, String _Longitude, String _Precision, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.EventGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Event() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.LatitudeGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Latitude() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.LocationGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.LocationSetString">
            <summary>设置 RepuestGeographicalPositionmMessage.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.LongitudeGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Longitude() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.PrecisionGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Precision() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances.EventGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Event() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances.LatitudeGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Latitude() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances.LocationGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances.LocationSetString">
            <summary>设置 RepuestGeographicalPositionmMessage.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances.LongitudeGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Longitude() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRepuestGeographicalPositionmMessage.AllInstances.PrecisionGet">
            <summary>设置 RepuestGeographicalPositionmMessage.get_Precision() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestEventMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestEventMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.ConstructorStringStringStringStringStringDateTimeString">
            <summary>设置 RequestEventMessage.RequestEventMessage(String _event, String eventKey, String _Ticket, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.EventGet">
            <summary>设置 RequestEventMessage.get_Event() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.EventKeyGet">
            <summary>设置 RequestEventMessage.get_EventKey() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.TicketGet">
            <summary>设置 RequestEventMessage.get_Ticket() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.TicketSetString">
            <summary>设置 RequestEventMessage.set_Ticket(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.AllInstances.EventGet">
            <summary>设置 RequestEventMessage.get_Event() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.AllInstances.EventKeyGet">
            <summary>设置 RequestEventMessage.get_EventKey() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.AllInstances.TicketGet">
            <summary>设置 RequestEventMessage.get_Ticket() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestEventMessage.AllInstances.TicketSetString">
            <summary>设置 RequestEventMessage.set_Ticket(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestImageMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestImageMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.ConstructorStringStringStringStringStringDateTimeString">
            <summary>设置 RequestImageMessage.RequestImageMessage(String picUrl, String msgId, String MediaId, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.MediaIdGet">
            <summary>设置 RequestImageMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.MsgIdGet">
            <summary>设置 RequestImageMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.PicUrlGet">
            <summary>设置 RequestImageMessage.get_PicUrl() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.AllInstances.MediaIdGet">
            <summary>设置 RequestImageMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.AllInstances.MsgIdGet">
            <summary>设置 RequestImageMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestImageMessage.AllInstances.PicUrlGet">
            <summary>设置 RequestImageMessage.get_PicUrl() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.ConstructorStringStringStringStringStringStringDateTimeString">
            <summary>设置 RequestLinkMessage.RequestLinkMessage(String title, String descriptiuon, String url, String msgId, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.DescriptionGet">
            <summary>设置 RequestLinkMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.MsgIdGet">
            <summary>设置 RequestLinkMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.TitleGet">
            <summary>设置 RequestLinkMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.UrlGet">
            <summary>设置 RequestLinkMessage.get_Url() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.AllInstances.DescriptionGet">
            <summary>设置 RequestLinkMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.AllInstances.MsgIdGet">
            <summary>设置 RequestLinkMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.AllInstances.TitleGet">
            <summary>设置 RequestLinkMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLinkMessage.AllInstances.UrlGet">
            <summary>设置 RequestLinkMessage.get_Url() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.ConstructorStringStringStringStringStringStringStringDateTimeString">
            <summary>设置 RequestLocationMessage.RequestLocationMessage(String location_X, String location_Y, String scale, String label, String msgId, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.LabelGet">
            <summary>设置 RequestLocationMessage.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.Location_XGet">
            <summary>设置 RequestLocationMessage.get_Location_X() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.Location_YGet">
            <summary>设置 RequestLocationMessage.get_Location_Y() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.MsgIdGet">
            <summary>设置 RequestLocationMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.ScaleGet">
            <summary>设置 RequestLocationMessage.get_Scale() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.AllInstances.LabelGet">
            <summary>设置 RequestLocationMessage.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.AllInstances.Location_XGet">
            <summary>设置 RequestLocationMessage.get_Location_X() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.AllInstances.Location_YGet">
            <summary>设置 RequestLocationMessage.get_Location_Y() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.AllInstances.MsgIdGet">
            <summary>设置 RequestLocationMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestLocationMessage.AllInstances.ScaleGet">
            <summary>设置 RequestLocationMessage.get_Scale() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.ConstructorStringStringStringStringInt64Int64">
            <summary>设置 RequestSendFinishMessage.RequestSendFinishMessage(String _msgID, String _status, String _totalCount, String _filterCount, Int64 _sentCount, Int64 _errorCount) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.ErrorCountGet">
            <summary>设置 RequestSendFinishMessage.get_ErrorCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.FilterCountGet">
            <summary>设置 RequestSendFinishMessage.get_FilterCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.MsgIDGet">
            <summary>设置 RequestSendFinishMessage.get_MsgID() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.SentCountGet">
            <summary>设置 RequestSendFinishMessage.get_SentCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.StatusGet">
            <summary>设置 RequestSendFinishMessage.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.TotalCountGet">
            <summary>设置 RequestSendFinishMessage.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances.ErrorCountGet">
            <summary>设置 RequestSendFinishMessage.get_ErrorCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances.FilterCountGet">
            <summary>设置 RequestSendFinishMessage.get_FilterCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances.MsgIDGet">
            <summary>设置 RequestSendFinishMessage.get_MsgID() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances.SentCountGet">
            <summary>设置 RequestSendFinishMessage.get_SentCount() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances.StatusGet">
            <summary>设置 RequestSendFinishMessage.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestSendFinishMessage.AllInstances.TotalCountGet">
            <summary>设置 RequestSendFinishMessage.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestTextMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestTextMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.ConstructorStringStringStringDateTimeString">
            <summary>设置 RequestTextMessage.RequestTextMessage(String content, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.ContentGet">
            <summary>设置 RequestTextMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestTextMessage.AllInstances.ContentGet">
            <summary>设置 RequestTextMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.ConstructorStringStringStringStringStringDateTimeString">
            <summary>设置 RequestVideoMessage.RequestVideoMessage(String _MediaId, String _ThumbMediaId, String _MsgID, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.MediaIdGet">
            <summary>设置 RequestVideoMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.MsgIdGet">
            <summary>设置 RequestVideoMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.ThumbMediaIdGet">
            <summary>设置 RequestVideoMessage.get_ThumbMediaId() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.AllInstances.MediaIdGet">
            <summary>设置 RequestVideoMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.AllInstances.MsgIdGet">
            <summary>设置 RequestVideoMessage.get_MsgId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVideoMessage.AllInstances.ThumbMediaIdGet">
            <summary>设置 RequestVideoMessage.get_ThumbMediaId() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.ConstructorStringStringStringStringStringStringDateTimeString">
            <summary>设置 RequestVoiceMessage.RequestVoiceMessage(String _MediaId, String _Format, String _MsgID, String _recognition, String _OpenID, String _DeveloperId, DateTime createTime, String msgType) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.FormatGet">
            <summary>设置 RequestVoiceMessage.get_Format() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.MediaIdGet">
            <summary>设置 RequestVoiceMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.MsgIDGet">
            <summary>设置 RequestVoiceMessage.get_MsgID() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.RecognitionGet">
            <summary>设置 RequestVoiceMessage.get_Recognition() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.AllInstances.FormatGet">
            <summary>设置 RequestVoiceMessage.get_Format() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.AllInstances.MediaIdGet">
            <summary>设置 RequestVoiceMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.AllInstances.MsgIDGet">
            <summary>设置 RequestVoiceMessage.get_MsgID() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimRequestVoiceMessage.AllInstances.RecognitionGet">
            <summary>设置 RequestVoiceMessage.get_Recognition() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.ServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.ConstructorStringString">
            <summary>设置 ServiceMessage.ServiceMessage(String _touser, String _msgtype) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.MsgtypeGet">
            <summary>设置 ServiceMessage.get_Msgtype() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.MsgtypeSetString">
            <summary>设置 ServiceMessage.set_Msgtype(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.ToJson">
            <summary>设置 ServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.TouserGet">
            <summary>设置 ServiceMessage.get_Touser() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.TouserSetString">
            <summary>设置 ServiceMessage.set_Touser(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.AllInstances.MsgtypeGet">
            <summary>设置 ServiceMessage.get_Msgtype() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.AllInstances.MsgtypeSetString">
            <summary>设置 ServiceMessage.set_Msgtype(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.AllInstances.ToJson">
            <summary>设置 ServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.AllInstances.TouserGet">
            <summary>设置 ServiceMessage.get_Touser() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimServiceMessage.AllInstances.TouserSetString">
            <summary>设置 ServiceMessage.set_Touser(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.TextMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.TextMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.ConstructorString">
            <summary>设置 TextMessage.TextMessage(String content) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.ContentGet">
            <summary>设置 TextMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextMessage.AllInstances.ContentGet">
            <summary>设置 TextMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.TextServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.TextServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.ConstructorStringString">
            <summary>设置 TextServiceMessage.TextServiceMessage(String _content, String _touser) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.ContentGet">
            <summary>设置 TextServiceMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.ContentSetString">
            <summary>设置 TextServiceMessage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.ToJson">
            <summary>设置 TextServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.AllInstances.ContentGet">
            <summary>设置 TextServiceMessage.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.AllInstances.ContentSetString">
            <summary>设置 TextServiceMessage.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimTextServiceMessage.AllInstances.ToJson">
            <summary>设置 TextServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.UserInformation 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.#ctor(Shove.Gateways.Weixin.Gongzhong.UserInformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.CityGet">
            <summary>设置 UserInformation.get_City() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.ConstructorStringStringStringStringStringStringStringStringStringString">
            <summary>设置 UserInformation.UserInformation(String subscribe, String openid, String nickname, String sex, String city, String country, String province, String language, String headimgurl, String subscribe_time) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.CountryGet">
            <summary>设置 UserInformation.get_Country() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.GroupIdGet">
            <summary>设置 UserInformation.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.HeadimgurlGet">
            <summary>设置 UserInformation.get_Headimgurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.LanguageGet">
            <summary>设置 UserInformation.get_Language() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.NicknameGet">
            <summary>设置 UserInformation.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.OpenidGet">
            <summary>设置 UserInformation.get_Openid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.ProvinceGet">
            <summary>设置 UserInformation.get_Province() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.SexGet">
            <summary>设置 UserInformation.get_Sex() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.SubscribeGet">
            <summary>设置 UserInformation.get_Subscribe() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.Subscribe_timeGet">
            <summary>设置 UserInformation.get_Subscribe_time() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.CityGet">
            <summary>设置 UserInformation.get_City() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.CountryGet">
            <summary>设置 UserInformation.get_Country() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.GroupIdGet">
            <summary>设置 UserInformation.get_GroupId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.HeadimgurlGet">
            <summary>设置 UserInformation.get_Headimgurl() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.LanguageGet">
            <summary>设置 UserInformation.get_Language() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.NicknameGet">
            <summary>设置 UserInformation.get_Nickname() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.OpenidGet">
            <summary>设置 UserInformation.get_Openid() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.ProvinceGet">
            <summary>设置 UserInformation.get_Province() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.SexGet">
            <summary>设置 UserInformation.get_Sex() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.SubscribeGet">
            <summary>设置 UserInformation.get_Subscribe() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserInformation.AllInstances.Subscribe_timeGet">
            <summary>设置 UserInformation.get_Subscribe_time() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.UserMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.UserMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.CheckValidationResultObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>设置 UserMessage.CheckValidationResult(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.Constructor">
            <summary>设置 UserMessage.UserMessage() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.DeleteMassSendMessageStringStringRef">
            <summary>设置 UserMessage.DeleteMassSendMessage(String msg_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.HandleStringUserMessageDelegateGetDataStringRef">
            <summary>设置 UserMessage.Handle(String toKen, DelegateGetData GetData, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.NkEpI87REhStringStringRef">
            <summary>设置 UserMessage.NkEpI87REh(String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.SendFansListMessageStringStringStringStringRefStringRef">
            <summary>设置 UserMessage.SendFansListMessage(String OpenidList, String messagetype, String content, String&amp; msg_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.SendGroupMessageStringStringStringStringRefStringRef">
            <summary>设置 UserMessage.SendGroupMessage(String group_id, String messagetype, String content, String&amp; msg_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.SendGroupVideoMessageStringStringInt32StringStringStringRefStringRef">
            <summary>设置 UserMessage.SendGroupVideoMessage(String to_user, String Video_media_id, Int32 type, String VideoTitle, String description, String&amp; msg_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.SendMessageServiceMessageStringRef">
            <summary>设置 UserMessage.SendMessage(ServiceMessage message, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.VSapaDgPhUStringStringStringRef">
            <summary>设置 UserMessage.VSapaDgPhU(String  , String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.WebPageAuthorizationStringStringStringRefStringRef">
            <summary>设置 UserMessage.WebPageAuthorization(String appid, String secret, String&amp; state, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.ko4pH3OcWaStringStringStringRef">
            <summary>设置 UserMessage.ko4pH3OcWa(String  , String  , String&amp;  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUserMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility">
            <summary>Shove.Gateways.Weixin.Gongzhong.Utility 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.#ctor(Shove.Gateways.Weixin.Gongzhong.Utility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.Access_tokenGet">
            <summary>设置 Utility.get_Access_token() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.AnalysisJsonStringString">
            <summary>设置 Utility.AnalysisJson(String json, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.Constructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.DeletePermanenceMaterialStringStringRef">
            <summary>设置 Utility.DeletePermanenceMaterial(String media_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.DownloadFileStringStringRefStringRef">
            <summary>设置 Utility.DownloadFile(String media_id, String&amp; saveFilePath, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.DownloadTwo_Dimension_CodeStringStringRefStringRef">
            <summary>设置 Utility.DownloadTwo_Dimension_Code(String ticket, String&amp; saveFilePath, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.FromUnixTimeString">
            <summary>设置 Utility.FromUnixTime(String timeStamp) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.GetDetailedAddress_APIStringString">
            <summary>设置 Utility.GetDetailedAddress_API(String latitude, String longitude) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.InitializeAccessTokenStringString">
            <summary>设置 Utility.InitializeAccessToken(String _AppID, String _AppSecret) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.ResetAccessTokenStringString">
            <summary>设置 Utility.ResetAccessToken(String _AppID, String _AppSecret) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.StaticConstructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.UnixTimeStampDateTime">
            <summary>设置 Utility.UnixTimeStamp(DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.UpdatePermanenceImageTextMaterialListOfMassImageTextMessageStringStringRef">
            <summary>设置 Utility.UpdatePermanenceImageTextMaterial(List`1&lt;MassImageTextMessage&gt; massImageTextMessage, String media_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.UploadFileStringStringStringRefStringRefStringRef">
            <summary>设置 Utility.UploadFile(String filePath, String type, String&amp; media_id, String&amp; created_at, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.UploadMassImageTextMessageListOfMassImageTextMessageStringRefStringRef">
            <summary>设置 Utility.UploadMassImageTextMessage(List`1&lt;MassImageTextMessage&gt; massImageTextMessage, String&amp; media_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.UploadPermanenceFileMaterialStringStringStringStringStringRefStringRefStringRef">
            <summary>设置 Utility.UploadPermanenceFileMaterial(String filePath, String type, String videoTitle, String videoIntroduction, String&amp; media_id, String&amp; url, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.UploadPermanenceImageTextMaterialListOfMassImageTextMessageStringRefStringRef">
            <summary>设置 Utility.UploadPermanenceImageTextMaterial(List`1&lt;MassImageTextMessage&gt; massImageTextMessage, String&amp; media_id, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VideoMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.VideoMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.ConstructorStringStringString">
            <summary>设置 VideoMessage.VideoMessage(String _MediaId, String _Title, String _Description) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.DescriptionGet">
            <summary>设置 VideoMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.MediaIdGet">
            <summary>设置 VideoMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.TitleGet">
            <summary>设置 VideoMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.AllInstances.DescriptionGet">
            <summary>设置 VideoMessage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.AllInstances.MediaIdGet">
            <summary>设置 VideoMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoMessage.AllInstances.TitleGet">
            <summary>设置 VideoMessage.get_Title() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.ConstructorStringStringString">
            <summary>设置 VideoServiceMessage.VideoServiceMessage(String _media_id, String _thumb_media_id, String _touser) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.Media_idGet">
            <summary>设置 VideoServiceMessage.get_Media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.Media_idSetString">
            <summary>设置 VideoServiceMessage.set_Media_id(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.Thumb_media_idGet">
            <summary>设置 VideoServiceMessage.get_Thumb_media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.Thumb_media_idSetString">
            <summary>设置 VideoServiceMessage.set_Thumb_media_id(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.ToJson">
            <summary>设置 VideoServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.AllInstances.Media_idGet">
            <summary>设置 VideoServiceMessage.get_Media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.AllInstances.Media_idSetString">
            <summary>设置 VideoServiceMessage.set_Media_id(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.AllInstances.Thumb_media_idGet">
            <summary>设置 VideoServiceMessage.get_Thumb_media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.AllInstances.Thumb_media_idSetString">
            <summary>设置 VideoServiceMessage.set_Thumb_media_id(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVideoServiceMessage.AllInstances.ToJson">
            <summary>设置 VideoServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VoiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.VoiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.ConstructorString">
            <summary>设置 VoiceMessage.VoiceMessage(String _MediaId) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.MediaIdGet">
            <summary>设置 VoiceMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceMessage.AllInstances.MediaIdGet">
            <summary>设置 VoiceMessage.get_MediaId() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.#ctor(Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.ConstructorStringString">
            <summary>设置 VoiceServiceMessage.VoiceServiceMessage(String _Media_id, String _touser) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.Media_idGet">
            <summary>设置 VoiceServiceMessage.get_Media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.ToJson">
            <summary>设置 VoiceServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.AllInstances.Media_idGet">
            <summary>设置 VoiceServiceMessage.get_Media_id() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.ShimVoiceServiceMessage.AllInstances.ToJson">
            <summary>设置 VoiceServiceMessage.ToJson() 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerChatRecord">
            <summary>Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerChatRecord.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerChatRecord.InitializeStub">
            <summary>初始化 type StubCustomerChatRecord 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerChatRecord.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerChatRecord.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerChatRecord.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.CustomerServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerServiceMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerServiceMessage.InitializeStub">
            <summary>初始化 type StubCustomerServiceMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubCustomerServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubErrorInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.ErrorInformation 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubErrorInformation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubErrorInformation.InitializeStub">
            <summary>初始化 type StubErrorInformation 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubErrorInformation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubErrorInformation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubErrorInformation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubFansListInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.FansListInformation 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubFansListInformation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubFansListInformation.InitializeStub">
            <summary>初始化 type StubFansListInformation 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubFansListInformation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubFansListInformation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubFansListInformation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation">
            <summary>Shove.Gateways.Weixin.Gongzhong.GroupsInfromation 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation.InitializeStub">
            <summary>初始化 type StubGroupsInfromation 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubGroupsInfromation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.InitializeStub">
            <summary>初始化 type StubImageServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.ToJson">
            <summary>设置 ImageServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.ToJson01">
            <summary>设置 ImageServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ImageTextMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextMessage.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextMessage.InitializeStub">
            <summary>初始化 type StubImageTextMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.InitializeStub">
            <summary>初始化 type StubImageTextServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.ToJson">
            <summary>设置 ImageTextServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.ToJson01">
            <summary>设置 ImageTextServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubImageTextServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.Information 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubInformation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubInformation.InitializeStub">
            <summary>初始化 type StubInformation 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubInformation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubInformation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubInformation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMassImageTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMassImageTextMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMassImageTextMessage.InitializeStub">
            <summary>初始化 type StubMassImageTextMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMassImageTextMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMassImageTextMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMassImageTextMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenu">
            <summary>Shove.Gateways.Weixin.Gongzhong.Menu 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenu.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenu.InitializeStub">
            <summary>初始化 type StubMenu 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenu.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenu.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenu.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuManager">
            <summary>Shove.Gateways.Weixin.Gongzhong.MenuManager 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuManager.InitializeStub">
            <summary>初始化 type StubMenuManager 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuView">
            <summary>Shove.Gateways.Weixin.Gongzhong.MenuView 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuView.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuView.InitializeStub">
            <summary>初始化 type StubMenuView 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuView.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuView.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMenuView.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.Message 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.#ctor(System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.InitializeStub">
            <summary>初始化 type StubMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.MusicMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicMessage.InitializeStub">
            <summary>初始化 type StubMusicMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.InitializeStub">
            <summary>初始化 type StubMusicServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.ToJson">
            <summary>设置 MusicServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.ToJson01">
            <summary>设置 MusicServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubMusicServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRepuestGeographicalPositionmMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRepuestGeographicalPositionmMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRepuestGeographicalPositionmMessage.InitializeStub">
            <summary>初始化 type StubRepuestGeographicalPositionmMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRepuestGeographicalPositionmMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRepuestGeographicalPositionmMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRepuestGeographicalPositionmMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestEventMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestEventMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestEventMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestEventMessage.InitializeStub">
            <summary>初始化 type StubRequestEventMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestEventMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestEventMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestEventMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestImageMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestImageMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestImageMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestImageMessage.InitializeStub">
            <summary>初始化 type StubRequestImageMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestImageMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestImageMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestImageMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLinkMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLinkMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLinkMessage.InitializeStub">
            <summary>初始化 type StubRequestLinkMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLinkMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLinkMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLinkMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLocationMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLocationMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLocationMessage.InitializeStub">
            <summary>初始化 type StubRequestLocationMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLocationMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLocationMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestLocationMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestSendFinishMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestSendFinishMessage.#ctor(System.String,System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestSendFinishMessage.InitializeStub">
            <summary>初始化 type StubRequestSendFinishMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestSendFinishMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestSendFinishMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestSendFinishMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestTextMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestTextMessage.#ctor(System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestTextMessage.InitializeStub">
            <summary>初始化 type StubRequestTextMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestTextMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestTextMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestTextMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVideoMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVideoMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVideoMessage.InitializeStub">
            <summary>初始化 type StubRequestVideoMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVideoMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVideoMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVideoMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVoiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVoiceMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVoiceMessage.InitializeStub">
            <summary>初始化 type StubRequestVoiceMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVoiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVoiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubRequestVoiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.ServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.InitializeStub">
            <summary>初始化 type StubServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.ToJson">
            <summary>设置 ServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.ToJson01">
            <summary>设置 ServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.TextMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextMessage.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextMessage.InitializeStub">
            <summary>初始化 type StubTextMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.TextServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.InitializeStub">
            <summary>初始化 type StubTextServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.ToJson">
            <summary>设置 TextServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.ToJson01">
            <summary>设置 TextServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubTextServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserInformation">
            <summary>Shove.Gateways.Weixin.Gongzhong.UserInformation 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserInformation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserInformation.InitializeStub">
            <summary>初始化 type StubUserInformation 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserInformation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserInformation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserInformation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.UserMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserMessage.InitializeStub">
            <summary>初始化 type StubUserMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUserMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUtility">
            <summary>Shove.Gateways.Weixin.Gongzhong.Utility 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUtility.InitializeStub">
            <summary>初始化 type StubUtility 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VideoMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoMessage.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoMessage.InitializeStub">
            <summary>初始化 type StubVideoMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.InitializeStub">
            <summary>初始化 type StubVideoServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.ToJson">
            <summary>设置 VideoServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.ToJson01">
            <summary>设置 VideoServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVideoServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VoiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceMessage.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceMessage.InitializeStub">
            <summary>初始化 type StubVoiceMessage 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage">
            <summary>Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.InitializeStub">
            <summary>初始化 type StubVoiceServiceMessage 的新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.ToJson">
            <summary>设置 VoiceServiceMessage.ToJson() 的 存根</summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.ToJson01">
            <summary>设置 VoiceServiceMessage.ToJson() 的 stub</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Fakes.StubVoiceServiceMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay">
            <summary>Shove.Gateways.Weixin.Shanghu.Pay 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.#ctor(Shove.Gateways.Weixin.Shanghu.Pay)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.Constructor">
            <summary>设置 Pay.Pay() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.HandlePayDelegateHandleBusinessStringRef">
            <summary>设置 Pay.Handle(DelegateHandleBusiness HandleBusiness, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.PaymentStringInt32StringStringStringStringStringRefStringRef">
            <summary>设置 Pay.Payment(String outTradeNo, Int32 totalFeeCent, String spbillCreateIp, String body, String attach, String notifyUrl, String&amp; qrCodeUrl, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.PaymentStringInt32StringStringStringStringStringStringRef">
            <summary>设置 Pay.Payment(String outTradeNo, Int32 totalFeeCent, String spbillCreateIp, String body, String attach, String notifyUrl, String payQrCodeImagePath, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Fakes.ShimPay.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility">
            <summary>Shove.Gateways.Weixin.Shanghu.Utility 的填充码类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.#ctor(Shove.Gateways.Weixin.Shanghu.Utility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.Constructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.CreateSignSortedDictionaryOfStringStringString">
            <summary>设置 Utility.CreateSign(SortedDictionary`2&lt;String,String&gt; sParaTemp, String _key) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.IOxXNje7FnDictionaryOfStringString">
            <summary>设置 Utility.IOxXNje7Fn(Dictionary`2&lt;String,String&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.InitializePayConfigStringStringString">
            <summary>设置 Utility.InitializePayConfig(String _AppID, String _MchID, String _PayKey) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.PostStringStringStringRefStringRef">
            <summary>设置 Utility.Post(String url, String data, String&amp; errorDescription, String&amp; xmlResult) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.StaticConstructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.XaqXCaJ8iFDictionaryOfStringStringStringStringString">
            <summary>设置 Utility.XaqXCaJ8iF(Dictionary`2&lt;String,String&gt;  , String  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.krtX8ZaQXwSortedDictionaryOfStringString">
            <summary>设置 Utility.krtX8ZaQXw(SortedDictionary`2&lt;String,String&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.w40X1lY3FGStringStringString">
            <summary>设置 Utility.w40X1lY3FG(String  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances.CreateSignSortedDictionaryOfStringStringString">
            <summary>设置 Utility.CreateSign(SortedDictionary`2&lt;String,String&gt; sParaTemp, String _key) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances.IOxXNje7FnDictionaryOfStringString">
            <summary>设置 Utility.IOxXNje7Fn(Dictionary`2&lt;String,String&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances.PostStringStringStringRefStringRef">
            <summary>设置 Utility.Post(String url, String data, String&amp; errorDescription, String&amp; xmlResult) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances.XaqXCaJ8iFDictionaryOfStringStringStringStringString">
            <summary>设置 Utility.XaqXCaJ8iF(Dictionary`2&lt;String,String&gt;  , String  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances.krtX8ZaQXwSortedDictionaryOfStringString">
            <summary>设置 Utility.krtX8ZaQXw(SortedDictionary`2&lt;String,String&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.ShimUtility.AllInstances.w40X1lY3FGStringStringString">
            <summary>设置 Utility.w40X1lY3FG(String  , String  , String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Fakes.StubPay">
            <summary>Shove.Gateways.Weixin.Shanghu.Pay 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.StubPay.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.StubPay.InitializeStub">
            <summary>初始化 type StubPay 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.StubPay.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.StubPay.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.StubPay.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Fakes.StubUtility">
            <summary>Shove.Gateways.Weixin.Shanghu.Utility 的存根类型</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.StubUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Fakes.StubUtility.InitializeStub">
            <summary>初始化 type StubUtility 的新实例</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.StubUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.StubUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Shanghu.Fakes.StubUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.HTML.Fakes.ShimHTML">
            <summary>Shove.HTML.HTML 的填充码类型</summary>
        </member>
        <member name="M:Shove.HTML.Fakes.ShimHTML.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.HTML.Fakes.ShimHTML.#ctor(Shove.HTML.HTML)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.HTML.Fakes.ShimHTML.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.HTML.Fakes.ShimHTML.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.ClearCommentaryString">
            <summary>设置 HTML.ClearCommentary(String html) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.ClearReplaceString">
            <summary>设置 HTML.ClearReplace(String s) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.ClearScriptString">
            <summary>设置 HTML.ClearScript(String html) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.ClearStyleString">
            <summary>设置 HTML.ClearStyle(String html) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.Constructor">
            <summary>设置 HTML.HTML() 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.DIc94LxYOStringString">
            <summary>设置 HTML.DIc94LxYO(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetBodyStringBoolean">
            <summary>设置 HTML.GetBody(String html, Boolean WithBodyTag) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetDescriptionStringInt32">
            <summary>设置 HTML.GetDescription(String html, Int32 MaxLen) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetHTMLString">
            <summary>设置 HTML.GetHTML(String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetHTMLStringInt32">
            <summary>设置 HTML.GetHTML(String Url, Int32 Timeout) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetHTMLStringInt32RefDateTimeRefStringRef">
            <summary>设置 HTML.GetHTML(String Url, Int32&amp; Type, DateTime&amp; LastModifiedTime, String&amp; HostAbsolutePath) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetHTMLUrlsStringStringInt32Int32">
            <summary>设置 HTML.GetHTMLUrls(String Page, String HostAbsolutePath, Int32 MaxLen, Int32 FindUrlLevel) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetHTMLUrlsWithDescriptionStringStringInt32Int32Int32">
            <summary>设置 HTML.GetHTMLUrlsWithDescription(String Page, String HostAbsolutePath, Int32 HrefMaxLen, Int32 DescriptionMaxLen, Int32 FindUrlLevel) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetKeywordsStringInt32">
            <summary>设置 HTML.GetKeywords(String html, Int32 MaxLen) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetTextStringInt32">
            <summary>设置 HTML.GetText(String html, Int32 MaxLen) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.GetTitleStringInt32">
            <summary>设置 HTML.GetTitle(String html, Int32 MaxLen) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.ML4XDGoDrStringString">
            <summary>设置 HTML.ML4XDGoDr(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.SetTextKeywordsHighLightStringStringArrayString">
            <summary>设置 HTML.SetTextKeywordsHighLight(String Text, String[] Keywords, String Color) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.StandardizationHTMLStringBooleanBooleanBoolean">
            <summary>设置 HTML.StandardizationHTML(String html, Boolean isClearCommentary, Boolean isClearScript, Boolean isClearStyle) 的 填充码</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.ShimHTML.StandardizationHTMLStringBooleanBooleanBooleanBoolean">
            <summary>设置 HTML.StandardizationHTML(String html, Boolean isClearCommentary, Boolean isClearScript, Boolean isClearStyle, Boolean isReplenishHtmlTag) 的 填充码</summary>
        </member>
        <member name="T:Shove.HTML.Fakes.ShimHTML.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.HTML.Fakes.StubHTML">
            <summary>Shove.HTML.HTML 的存根类型</summary>
        </member>
        <member name="M:Shove.HTML.Fakes.StubHTML.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.HTML.Fakes.StubHTML.InitializeStub">
            <summary>初始化 type StubHTML 的新实例</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.StubHTML.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.StubHTML.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.HTML.Fakes.StubHTML.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs">
            <summary>Shove.I3kmSMS_GatewayService.QueryBalanceCompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.#ctor(Shove.I3kmSMS_GatewayService.QueryBalanceCompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 QueryBalanceCompletedEventArgs.QueryBalanceCompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.ResultGet">
            <summary>设置 QueryBalanceCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimQueryBalanceCompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 QueryBalanceCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs">
            <summary>Shove.I3kmSMS_GatewayService.SMSReceiveCompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.#ctor(Shove.I3kmSMS_GatewayService.SMSReceiveCompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 SMSReceiveCompletedEventArgs.SMSReceiveCompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.ResultGet">
            <summary>设置 SMSReceiveCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSMSReceiveCompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 SMSReceiveCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs">
            <summary>Shove.I3kmSMS_GatewayService.SendSMS_2CompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.#ctor(Shove.I3kmSMS_GatewayService.SendSMS_2CompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 SendSMS_2CompletedEventArgs.SendSMS_2CompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.ResultGet">
            <summary>设置 SendSMS_2CompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.ShimSendSMS_2CompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 SendSMS_2CompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway">
            <summary>Shove.I3kmSMS_GatewayService.sms_gateway 的填充码类型</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.#ctor(Shove.I3kmSMS_GatewayService.sms_gateway)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.CancelAsyncObject">
            <summary>设置 sms_gateway.CancelAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.Constructor">
            <summary>设置 sms_gateway.sms_gateway() 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.FQlKCHWG2TObject">
            <summary>设置 sms_gateway.FQlKCHWG2T(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.QVcKNat4ZXObject">
            <summary>设置 sms_gateway.QVcKNat4ZX(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.QueryBalanceAsyncStringStringString">
            <summary>设置 sms_gateway.QueryBalanceAsync(String RegCode, String TimeStamp, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.QueryBalanceAsyncStringStringStringObject">
            <summary>设置 sms_gateway.QueryBalanceAsync(String RegCode, String TimeStamp, String Sign, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.QueryBalanceCompletedAddQueryBalanceCompletedEventHandler">
            <summary>设置 sms_gateway.add_QueryBalanceCompleted(QueryBalanceCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.QueryBalanceCompletedRemoveQueryBalanceCompletedEventHandler">
            <summary>设置 sms_gateway.remove_QueryBalanceCompleted(QueryBalanceCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.QueryBalanceStringStringString">
            <summary>设置 sms_gateway.QueryBalance(String RegCode, String TimeStamp, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.RhHKWqRwweString">
            <summary>设置 sms_gateway.RhHKWqRwwe(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SMSReceiveAsyncStringStringStringStringString">
            <summary>设置 sms_gateway.SMSReceiveAsync(String RegCode, String TimeStamp, String Sign, String Content, String To) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SMSReceiveAsyncStringStringStringStringStringObject">
            <summary>设置 sms_gateway.SMSReceiveAsync(String RegCode, String TimeStamp, String Sign, String Content, String To, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SMSReceiveCompletedAddSMSReceiveCompletedEventHandler">
            <summary>设置 sms_gateway.add_SMSReceiveCompleted(SMSReceiveCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SMSReceiveCompletedRemoveSMSReceiveCompletedEventHandler">
            <summary>设置 sms_gateway.remove_SMSReceiveCompleted(SMSReceiveCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SMSReceiveStringStringStringStringString">
            <summary>设置 sms_gateway.SMSReceive(String RegCode, String TimeStamp, String Sign, String Content, String To) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SendSMS_2AsyncStringStringStringStringStringDateTime">
            <summary>设置 sms_gateway.SendSMS_2Async(String RegCode, String TimeStamp, String Sign, String Content, String To, DateTime SendTime) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SendSMS_2AsyncStringStringStringStringStringDateTimeObject">
            <summary>设置 sms_gateway.SendSMS_2Async(String RegCode, String TimeStamp, String Sign, String Content, String To, DateTime SendTime, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SendSMS_2CompletedAddSendSMS_2CompletedEventHandler">
            <summary>设置 sms_gateway.add_SendSMS_2Completed(SendSMS_2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SendSMS_2CompletedRemoveSendSMS_2CompletedEventHandler">
            <summary>设置 sms_gateway.remove_SendSMS_2Completed(SendSMS_2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.SendSMS_2StringStringStringStringStringDateTime">
            <summary>设置 sms_gateway.SendSMS_2(String RegCode, String TimeStamp, String Sign, String Content, String To, DateTime SendTime) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.UcOK1G9UKZObject">
            <summary>设置 sms_gateway.UcOK1G9UKZ(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.UrlGet">
            <summary>设置 sms_gateway.get_Url() 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.UrlSetString">
            <summary>设置 sms_gateway.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.UseDefaultCredentialsGet">
            <summary>设置 sms_gateway.get_UseDefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.UseDefaultCredentialsSetBoolean">
            <summary>设置 sms_gateway.set_UseDefaultCredentials(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.CancelAsyncObject">
            <summary>设置 sms_gateway.CancelAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.FQlKCHWG2TObject">
            <summary>设置 sms_gateway.FQlKCHWG2T(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.QVcKNat4ZXObject">
            <summary>设置 sms_gateway.QVcKNat4ZX(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.QueryBalanceAsyncStringStringString">
            <summary>设置 sms_gateway.QueryBalanceAsync(String RegCode, String TimeStamp, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.QueryBalanceAsyncStringStringStringObject">
            <summary>设置 sms_gateway.QueryBalanceAsync(String RegCode, String TimeStamp, String Sign, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.QueryBalanceCompletedAddQueryBalanceCompletedEventHandler">
            <summary>设置 sms_gateway.add_QueryBalanceCompleted(QueryBalanceCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.QueryBalanceCompletedRemoveQueryBalanceCompletedEventHandler">
            <summary>设置 sms_gateway.remove_QueryBalanceCompleted(QueryBalanceCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.QueryBalanceStringStringString">
            <summary>设置 sms_gateway.QueryBalance(String RegCode, String TimeStamp, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.RhHKWqRwweString">
            <summary>设置 sms_gateway.RhHKWqRwwe(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SMSReceiveAsyncStringStringStringStringString">
            <summary>设置 sms_gateway.SMSReceiveAsync(String RegCode, String TimeStamp, String Sign, String Content, String To) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SMSReceiveAsyncStringStringStringStringStringObject">
            <summary>设置 sms_gateway.SMSReceiveAsync(String RegCode, String TimeStamp, String Sign, String Content, String To, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SMSReceiveCompletedAddSMSReceiveCompletedEventHandler">
            <summary>设置 sms_gateway.add_SMSReceiveCompleted(SMSReceiveCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SMSReceiveCompletedRemoveSMSReceiveCompletedEventHandler">
            <summary>设置 sms_gateway.remove_SMSReceiveCompleted(SMSReceiveCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SMSReceiveStringStringStringStringString">
            <summary>设置 sms_gateway.SMSReceive(String RegCode, String TimeStamp, String Sign, String Content, String To) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SendSMS_2AsyncStringStringStringStringStringDateTime">
            <summary>设置 sms_gateway.SendSMS_2Async(String RegCode, String TimeStamp, String Sign, String Content, String To, DateTime SendTime) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SendSMS_2AsyncStringStringStringStringStringDateTimeObject">
            <summary>设置 sms_gateway.SendSMS_2Async(String RegCode, String TimeStamp, String Sign, String Content, String To, DateTime SendTime, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SendSMS_2CompletedAddSendSMS_2CompletedEventHandler">
            <summary>设置 sms_gateway.add_SendSMS_2Completed(SendSMS_2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SendSMS_2CompletedRemoveSendSMS_2CompletedEventHandler">
            <summary>设置 sms_gateway.remove_SendSMS_2Completed(SendSMS_2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.SendSMS_2StringStringStringStringStringDateTime">
            <summary>设置 sms_gateway.SendSMS_2(String RegCode, String TimeStamp, String Sign, String Content, String To, DateTime SendTime) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.UcOK1G9UKZObject">
            <summary>设置 sms_gateway.UcOK1G9UKZ(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.UrlGet">
            <summary>设置 sms_gateway.get_Url() 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.UrlSetString">
            <summary>设置 sms_gateway.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.UseDefaultCredentialsGet">
            <summary>设置 sms_gateway.get_UseDefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Shimsms_gateway.AllInstances.UseDefaultCredentialsSetBoolean">
            <summary>设置 sms_gateway.set_UseDefaultCredentials(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway">
            <summary>Shove.I3kmSMS_GatewayService.sms_gateway 的存根类型</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.Abort">
            <summary>设置 WebClientProtocol.Abort() 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.Abort01">
            <summary>设置 WebClientProtocol.Abort() 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.AttachBackingFieldToSite">
            <summary>附加委托以将 Stubsms_gateway.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.CanRaiseEventsGet">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.Dispose(System.Boolean)">
            <summary>设置 Component.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.DisposeBoolean">
            <summary>设置 Component.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
            <summary>设置 SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage message, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetReaderForMessageSoapClientMessageInt32">
            <summary>设置 SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage message, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetService(System.Type)">
            <summary>设置 Component.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetServiceType">
            <summary>设置 Component.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWebRequest(System.Uri)">
            <summary>设置 SoapHttpClientProtocol.GetWebRequest(Uri uri) 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWebRequestUri">
            <summary>设置 SoapHttpClientProtocol.GetWebRequest(Uri uri) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWebResponse(System.Net.WebRequest)">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request) 的 存根</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request, IAsyncResult result) 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWebResponseWebRequest">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request) 的 stub</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWebResponseWebRequestIAsyncResult">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request, IAsyncResult result) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
            <summary>设置 SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage message, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.GetWriterForMessageSoapClientMessageInt32">
            <summary>设置 SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage message, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.InitializeStub">
            <summary>初始化 type Stubsms_gateway 的新实例</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.SiteGet">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.SiteSetISite">
            <summary>设置 Component.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.ToString">
            <summary>设置 Component.ToString() 的 存根</summary>
        </member>
        <member name="F:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.ToString01">
            <summary>设置 Component.ToString() 的 stub</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.CanRaiseEvents">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.Fakes.Stubsms_gateway.Site">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
        <member name="T:Shove.InformationCode.Fakes.ShimQrCode">
            <summary>Shove.InformationCode.QrCode 的填充码类型</summary>
        </member>
        <member name="M:Shove.InformationCode.Fakes.ShimQrCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.InformationCode.Fakes.ShimQrCode.#ctor(Shove.InformationCode.QrCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.InformationCode.Fakes.ShimQrCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.InformationCode.Fakes.ShimQrCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.Constructor">
            <summary>设置 QrCode.QrCode() 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.CreateCodeStringBarcodeFormatInt32Int32ImageFormat">
            <summary>设置 QrCode.CreateCode(String input, BarcodeFormat fromat, Int32 CanvasWidth, Int32 CanvasHeight, ImageFormat imageFormat) 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.CreateCodeStringBarcodeFormatInt32Int32ImageFormatString">
            <summary>设置 QrCode.CreateCode(String input, BarcodeFormat fromat, Int32 CanvasWidth, Int32 CanvasHeight, ImageFormat imageFormat, String logoImageFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.CreateCodeStringBarcodeFormatInt32Int32StringImageFormat">
            <summary>设置 QrCode.CreateCode(String input, BarcodeFormat fromat, Int32 CanvasWidth, Int32 CanvasHeight, String OutputFileName, ImageFormat imageFormat) 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.CreateCodeStringBarcodeFormatInt32Int32StringImageFormatString">
            <summary>设置 QrCode.CreateCode(String input, BarcodeFormat fromat, Int32 CanvasWidth, Int32 CanvasHeight, String OutputFileName, ImageFormat imageFormat, String logoImageFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.ReadCodeBitmap">
            <summary>设置 QrCode.ReadCode(Bitmap bmap) 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.ReadCodeImage">
            <summary>设置 QrCode.ReadCode(Image img) 的 填充码</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.ShimQrCode.ReadCodeString">
            <summary>设置 QrCode.ReadCode(String FileName) 的 填充码</summary>
        </member>
        <member name="T:Shove.InformationCode.Fakes.ShimQrCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.InformationCode.Fakes.StubQrCode">
            <summary>Shove.InformationCode.QrCode 的存根类型</summary>
        </member>
        <member name="M:Shove.InformationCode.Fakes.StubQrCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.InformationCode.Fakes.StubQrCode.InitializeStub">
            <summary>初始化 type StubQrCode 的新实例</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.StubQrCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.StubQrCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.InformationCode.Fakes.StubQrCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimMySoapHeader">
            <summary>Shove.NewtonServices.MySoapHeader 的填充码类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimMySoapHeader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimMySoapHeader.#ctor(Shove.NewtonServices.MySoapHeader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimMySoapHeader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimMySoapHeader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AnyAttrGet">
            <summary>设置 MySoapHeader.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AnyAttrSetXmlAttributeArray">
            <summary>设置 MySoapHeader.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.Constructor">
            <summary>设置 MySoapHeader.MySoapHeader() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.PasswordGet">
            <summary>设置 MySoapHeader.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.PasswordSetString">
            <summary>设置 MySoapHeader.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.UserNameGet">
            <summary>设置 MySoapHeader.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.UserNameSetString">
            <summary>设置 MySoapHeader.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances.AnyAttrGet">
            <summary>设置 MySoapHeader.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 MySoapHeader.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances.PasswordGet">
            <summary>设置 MySoapHeader.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances.PasswordSetString">
            <summary>设置 MySoapHeader.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances.UserNameGet">
            <summary>设置 MySoapHeader.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimMySoapHeader.AllInstances.UserNameSetString">
            <summary>设置 MySoapHeader.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimService">
            <summary>Shove.NewtonServices.Service 的填充码类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimService.#ctor(Shove.NewtonServices.Service)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimService.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimService.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.C7cKhBDpYxObject">
            <summary>设置 Service.C7cKhBDpYx(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.CDUKGREF8vString">
            <summary>设置 Service.CDUKGREF8v(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.CancelAsyncObject">
            <summary>设置 Service.CancelAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.Constructor">
            <summary>设置 Service.Service() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.DDJKeUWkbgObject">
            <summary>设置 Service.DDJKeUWkbg(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.F2kKuMsNrCObject">
            <summary>设置 Service.F2kKuMsNrC(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.LcPK0gs8NxObject">
            <summary>设置 Service.LcPK0gs8Nx(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.MySoapHeaderValueGet">
            <summary>设置 Service.get_MySoapHeaderValue() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.MySoapHeaderValueSetMySoapHeader">
            <summary>设置 Service.set_MySoapHeaderValue(MySoapHeader value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.TestSoapHeader">
            <summary>设置 Service.TestSoapHeader() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.TestSoapHeaderAsync">
            <summary>设置 Service.TestSoapHeaderAsync() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.TestSoapHeaderAsyncObject">
            <summary>设置 Service.TestSoapHeaderAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.TestSoapHeaderCompletedAddTestSoapHeaderCompletedEventHandler">
            <summary>设置 Service.add_TestSoapHeaderCompleted(TestSoapHeaderCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.TestSoapHeaderCompletedRemoveTestSoapHeaderCompletedEventHandler">
            <summary>设置 Service.remove_TestSoapHeaderCompleted(TestSoapHeaderCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.UrlGet">
            <summary>设置 Service.get_Url() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.UrlSetString">
            <summary>设置 Service.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.UseDefaultCredentialsGet">
            <summary>设置 Service.get_UseDefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.UseDefaultCredentialsSetBoolean">
            <summary>设置 Service.set_UseDefaultCredentials(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getClientSIServiceStatus">
            <summary>设置 Service.getClientSIServiceStatus() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getClientSIServiceStatusAsync">
            <summary>设置 Service.getClientSIServiceStatusAsync() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getClientSIServiceStatusAsyncObject">
            <summary>设置 Service.getClientSIServiceStatusAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getClientSIServiceStatusCompletedAddgetClientSIServiceStatusCompletedEventHandler">
            <summary>设置 Service.add_getClientSIServiceStatusCompleted(getClientSIServiceStatusCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getClientSIServiceStatusCompletedRemovegetClientSIServiceStatusCompletedEventHandler">
            <summary>设置 Service.remove_getClientSIServiceStatusCompleted(getClientSIServiceStatusCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSI2AsyncStringString">
            <summary>设置 Service.getSI2Async(String Content, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSI2AsyncStringStringObject">
            <summary>设置 Service.getSI2Async(String Content, String Sign, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSI2CompletedAddgetSI2CompletedEventHandler">
            <summary>设置 Service.add_getSI2Completed(getSI2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSI2CompletedRemovegetSI2CompletedEventHandler">
            <summary>设置 Service.remove_getSI2Completed(getSI2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSI2StringString">
            <summary>设置 Service.getSI2(String Content, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSIAsyncStringString">
            <summary>设置 Service.getSIAsync(String Url, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSIAsyncStringStringObject">
            <summary>设置 Service.getSIAsync(String Url, String Sign, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSICompletedAddgetSICompletedEventHandler">
            <summary>设置 Service.add_getSICompleted(getSICompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSICompletedRemovegetSICompletedEventHandler">
            <summary>设置 Service.remove_getSICompleted(getSICompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.getSIStringString">
            <summary>设置 Service.getSI(String Url, String Sign) 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.C7cKhBDpYxObject">
            <summary>设置 Service.C7cKhBDpYx(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.CDUKGREF8vString">
            <summary>设置 Service.CDUKGREF8v(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.CancelAsyncObject">
            <summary>设置 Service.CancelAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.DDJKeUWkbgObject">
            <summary>设置 Service.DDJKeUWkbg(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.F2kKuMsNrCObject">
            <summary>设置 Service.F2kKuMsNrC(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.LcPK0gs8NxObject">
            <summary>设置 Service.LcPK0gs8Nx(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.MySoapHeaderValueGet">
            <summary>设置 Service.get_MySoapHeaderValue() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.MySoapHeaderValueSetMySoapHeader">
            <summary>设置 Service.set_MySoapHeaderValue(MySoapHeader value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.TestSoapHeader">
            <summary>设置 Service.TestSoapHeader() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.TestSoapHeaderAsync">
            <summary>设置 Service.TestSoapHeaderAsync() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.TestSoapHeaderAsyncObject">
            <summary>设置 Service.TestSoapHeaderAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.TestSoapHeaderCompletedAddTestSoapHeaderCompletedEventHandler">
            <summary>设置 Service.add_TestSoapHeaderCompleted(TestSoapHeaderCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.TestSoapHeaderCompletedRemoveTestSoapHeaderCompletedEventHandler">
            <summary>设置 Service.remove_TestSoapHeaderCompleted(TestSoapHeaderCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.UrlGet">
            <summary>设置 Service.get_Url() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.UrlSetString">
            <summary>设置 Service.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.UseDefaultCredentialsGet">
            <summary>设置 Service.get_UseDefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.UseDefaultCredentialsSetBoolean">
            <summary>设置 Service.set_UseDefaultCredentials(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getClientSIServiceStatus">
            <summary>设置 Service.getClientSIServiceStatus() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getClientSIServiceStatusAsync">
            <summary>设置 Service.getClientSIServiceStatusAsync() 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getClientSIServiceStatusAsyncObject">
            <summary>设置 Service.getClientSIServiceStatusAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getClientSIServiceStatusCompletedAddgetClientSIServiceStatusCompletedEventHandler">
            <summary>设置 Service.add_getClientSIServiceStatusCompleted(getClientSIServiceStatusCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getClientSIServiceStatusCompletedRemovegetClientSIServiceStatusCompletedEventHandler">
            <summary>设置 Service.remove_getClientSIServiceStatusCompleted(getClientSIServiceStatusCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSI2AsyncStringString">
            <summary>设置 Service.getSI2Async(String Content, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSI2AsyncStringStringObject">
            <summary>设置 Service.getSI2Async(String Content, String Sign, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSI2CompletedAddgetSI2CompletedEventHandler">
            <summary>设置 Service.add_getSI2Completed(getSI2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSI2CompletedRemovegetSI2CompletedEventHandler">
            <summary>设置 Service.remove_getSI2Completed(getSI2CompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSI2StringString">
            <summary>设置 Service.getSI2(String Content, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSIAsyncStringString">
            <summary>设置 Service.getSIAsync(String Url, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSIAsyncStringStringObject">
            <summary>设置 Service.getSIAsync(String Url, String Sign, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSICompletedAddgetSICompletedEventHandler">
            <summary>设置 Service.add_getSICompleted(getSICompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSICompletedRemovegetSICompletedEventHandler">
            <summary>设置 Service.remove_getSICompleted(getSICompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimService.AllInstances.getSIStringString">
            <summary>设置 Service.getSI(String Url, String Sign) 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs">
            <summary>Shove.NewtonServices.TestSoapHeaderCompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.#ctor(Shove.NewtonServices.TestSoapHeaderCompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 TestSoapHeaderCompletedEventArgs.TestSoapHeaderCompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.ResultGet">
            <summary>设置 TestSoapHeaderCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimTestSoapHeaderCompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 TestSoapHeaderCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs">
            <summary>Shove.NewtonServices.getClientSIServiceStatusCompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.#ctor(Shove.NewtonServices.getClientSIServiceStatusCompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 getClientSIServiceStatusCompletedEventArgs.getClientSIServiceStatusCompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.ResultGet">
            <summary>设置 getClientSIServiceStatusCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetClientSIServiceStatusCompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 getClientSIServiceStatusCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs">
            <summary>Shove.NewtonServices.getSI2CompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.#ctor(Shove.NewtonServices.getSI2CompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 getSI2CompletedEventArgs.getSI2CompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.ResultGet">
            <summary>设置 getSI2CompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSI2CompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 getSI2CompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs">
            <summary>Shove.NewtonServices.getSICompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.#ctor(Shove.NewtonServices.getSICompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 getSICompletedEventArgs.getSICompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.ResultGet">
            <summary>设置 getSICompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.ShimgetSICompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 getSICompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.StubMySoapHeader">
            <summary>Shove.NewtonServices.MySoapHeader 的存根类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubMySoapHeader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubMySoapHeader.InitializeStub">
            <summary>初始化 type StubMySoapHeader 的新实例</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubMySoapHeader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubMySoapHeader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubMySoapHeader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.NewtonServices.Fakes.StubService">
            <summary>Shove.NewtonServices.Service 的存根类型</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.Abort">
            <summary>设置 WebClientProtocol.Abort() 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.Abort01">
            <summary>设置 WebClientProtocol.Abort() 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.AttachBackingFieldToSite">
            <summary>附加委托以将 StubService.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.CanRaiseEventsGet">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.Dispose(System.Boolean)">
            <summary>设置 Component.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.DisposeBoolean">
            <summary>设置 Component.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
            <summary>设置 SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage message, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.GetReaderForMessageSoapClientMessageInt32">
            <summary>设置 SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage message, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.GetService(System.Type)">
            <summary>设置 Component.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.GetServiceType">
            <summary>设置 Component.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.GetWebRequest(System.Uri)">
            <summary>设置 SoapHttpClientProtocol.GetWebRequest(Uri uri) 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.GetWebRequestUri">
            <summary>设置 SoapHttpClientProtocol.GetWebRequest(Uri uri) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.GetWebResponse(System.Net.WebRequest)">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request) 的 存根</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request, IAsyncResult result) 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.GetWebResponseWebRequest">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request) 的 stub</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.GetWebResponseWebRequestIAsyncResult">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request, IAsyncResult result) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
            <summary>设置 SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage message, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.GetWriterForMessageSoapClientMessageInt32">
            <summary>设置 SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage message, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.InitializeStub">
            <summary>初始化 type StubService 的新实例</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.SiteGet">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.SiteSetISite">
            <summary>设置 Component.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:Shove.NewtonServices.Fakes.StubService.ToString">
            <summary>设置 Component.ToString() 的 存根</summary>
        </member>
        <member name="F:Shove.NewtonServices.Fakes.StubService.ToString01">
            <summary>设置 Component.ToString() 的 stub</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubService.CanRaiseEvents">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Shove.NewtonServices.Fakes.StubService.Site">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.ShimDictionary">
            <summary>Shove.WordSplit.Dictionary 的填充码类型</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimDictionary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimDictionary.#ctor(Shove.WordSplit.Dictionary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimDictionary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimDictionary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AddWordString">
            <summary>设置 Dictionary.AddWord(String Word) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.CalcWordMaxLen">
            <summary>设置 Dictionary.CalcWordMaxLen() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.Constructor">
            <summary>设置 Dictionary.Dictionary() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.ConstructorString">
            <summary>设置 Dictionary.Dictionary(String chineseDictionaryFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.DeleteWordString">
            <summary>设置 Dictionary.DeleteWord(String Word) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.FindWordsListString">
            <summary>设置 Dictionary.FindWordsList(String ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.GetWordAtDictionaryString">
            <summary>设置 Dictionary.GetWordAtDictionary(String sWord) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.GetWordTypeChar">
            <summary>设置 Dictionary.GetWordType(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.GetWordsListAllBooleanBoolean">
            <summary>设置 Dictionary.GetWordsListAll(Boolean WithFlag, Boolean ReSort) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.LoadFromTxtFileString">
            <summary>设置 Dictionary.LoadFromTxtFile(String TxtFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.OpenDictionary">
            <summary>设置 Dictionary.OpenDictionary() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.Save">
            <summary>设置 Dictionary.Save() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.SaveString">
            <summary>设置 Dictionary.Save(String chineseDictionaryFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.SaveToTxtFileString">
            <summary>设置 Dictionary.SaveToTxtFile(String TxtFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.WordExistString">
            <summary>设置 Dictionary.WordExist(String sWord) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.WordSort">
            <summary>设置 Dictionary.WordSort() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.WordSortInt32">
            <summary>设置 Dictionary.WordSort(Int32 Unicode) 的 填充码</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.ShimDictionary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.AddWordString">
            <summary>设置 Dictionary.AddWord(String Word) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.CalcWordMaxLen">
            <summary>设置 Dictionary.CalcWordMaxLen() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.DeleteWordString">
            <summary>设置 Dictionary.DeleteWord(String Word) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.FindWordsListString">
            <summary>设置 Dictionary.FindWordsList(String ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.GetWordAtDictionaryString">
            <summary>设置 Dictionary.GetWordAtDictionary(String sWord) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.GetWordTypeChar">
            <summary>设置 Dictionary.GetWordType(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.GetWordsListAllBooleanBoolean">
            <summary>设置 Dictionary.GetWordsListAll(Boolean WithFlag, Boolean ReSort) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.LoadFromTxtFileString">
            <summary>设置 Dictionary.LoadFromTxtFile(String TxtFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.OpenDictionary">
            <summary>设置 Dictionary.OpenDictionary() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.Save">
            <summary>设置 Dictionary.Save() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.SaveString">
            <summary>设置 Dictionary.Save(String chineseDictionaryFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.SaveToTxtFileString">
            <summary>设置 Dictionary.SaveToTxtFile(String TxtFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.WordExistString">
            <summary>设置 Dictionary.WordExist(String sWord) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.WordSort">
            <summary>设置 Dictionary.WordSort() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimDictionary.AllInstances.WordSortInt32">
            <summary>设置 Dictionary.WordSort(Int32 Unicode) 的 填充码</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.ShimShoveWordSplit">
            <summary>Shove.WordSplit.ShoveWordSplit 的填充码类型</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimShoveWordSplit.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimShoveWordSplit.#ctor(Shove.WordSplit.ShoveWordSplit)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimShoveWordSplit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimShoveWordSplit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.Constructor">
            <summary>设置 ShoveWordSplit.ShoveWordSplit() 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.ConstructorString">
            <summary>设置 ShoveWordSplit.ShoveWordSplit(String chineseDictionaryFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.GetSlpitWordsString">
            <summary>设置 ShoveWordSplit.GetSlpitWords(String sSource) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.ReBuildWordsStringArray">
            <summary>设置 ShoveWordSplit.ReBuildWords(String[] sWordsList) 的 填充码</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.ShimShoveWordSplit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.AllInstances.GetSlpitWordsString">
            <summary>设置 ShoveWordSplit.GetSlpitWords(String sSource) 的 填充码</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimShoveWordSplit.AllInstances.ReBuildWordsStringArray">
            <summary>设置 ShoveWordSplit.ReBuildWords(String[] sWordsList) 的 填充码</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.ShimWordsList">
            <summary>Shove.WordSplit.WordsList 的填充码类型</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimWordsList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimWordsList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.ShimWordsList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.ShimWordsList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.ShimWordsList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.StubDictionary">
            <summary>Shove.WordSplit.Dictionary 的存根类型</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.StubDictionary.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.StubDictionary.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.StubDictionary.InitializeStub">
            <summary>初始化 type StubDictionary 的新实例</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.StubDictionary.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.StubDictionary.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.StubDictionary.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.WordSplit.Fakes.StubShoveWordSplit">
            <summary>Shove.WordSplit.ShoveWordSplit 的存根类型</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.StubShoveWordSplit.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.StubShoveWordSplit.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.WordSplit.Fakes.StubShoveWordSplit.InitializeStub">
            <summary>初始化 type StubShoveWordSplit 的新实例</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.StubShoveWordSplit.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.StubShoveWordSplit.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.WordSplit.Fakes.StubShoveWordSplit.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimFile">
            <summary>Shove._IO.File 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.#ctor(Shove._IO.File)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.CompressString">
            <summary>设置 File.Compress(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.CompressStringString">
            <summary>设置 File.Compress(String FileName, String ZipFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.Constructor">
            <summary>设置 File.File() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.CopyDirectoryStringString">
            <summary>设置 File.CopyDirectory(String src, String dest) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.CopyFileStringStringBoolean">
            <summary>设置 File.CopyFile(String src, String dest, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.DecompressString">
            <summary>设置 File.Decompress(String ZipFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.DecompressStringString">
            <summary>设置 File.Decompress(String ZipFileName, String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.DownloadHttpContextStringArray">
            <summary>设置 File.Download(HttpContext context, String[] FileNames) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.DownloadStringArray">
            <summary>设置 File.Download(String[] FileNames) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetDirectorySizeString">
            <summary>设置 File.GetDirectorySize(String DirectoryName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetEncodingOfFileString">
            <summary>设置 File.GetEncodingOfFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetFileListPageString">
            <summary>设置 File.GetFileList(Page page, String Path) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetFileListString">
            <summary>设置 File.GetFileList(String Path) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetFileListWithSubDirPageString">
            <summary>设置 File.GetFileListWithSubDir(Page page, String Path) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetFileListWithSubDirString">
            <summary>设置 File.GetFileListWithSubDir(String StartDirName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetNewFileNamePageStringStringString">
            <summary>设置 File.GetNewFileName(Page page, String path, String Ext, String Flag) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.GetSystemDirectory">
            <summary>设置 File.GetSystemDirectory() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ReadFileString">
            <summary>设置 File.ReadFile(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.Te1XaQb8SKHtmlInputFileString">
            <summary>设置 File.Te1XaQb8SK(HtmlInputFile  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.UploadFilePageHtmlInputFileStringStringBooleanString">
            <summary>设置 File.UploadFile(Page page, HtmlInputFile file, String TargetDirectory, String FileName, Boolean OverwriteExistFile, String LimitFileTypeList) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.UploadFilePageHtmlInputFileStringStringRefBooleanString">
            <summary>设置 File.UploadFile(Page page, HtmlInputFile file, String TargetDirectory, String&amp; ShortFileName, Boolean OverwriteExistFile, String LimitFileTypeList) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.UploadFilePageHtmlInputFileStringStringRefString">
            <summary>设置 File.UploadFile(Page page, HtmlInputFile file, String TargetDirectory, String&amp; NewFileName, String LimitFileTypeList) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.WriteFileStringString">
            <summary>设置 File.WriteFile(String FileName, String Content) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.WriteFileStringStringEncoding">
            <summary>设置 File.WriteFile(String FileName, String Content, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ZipMultiFilesInt32BooleanStringArray">
            <summary>设置 File.ZipMultiFiles(Int32 CompressLevel, Boolean isWithoutFilePathInfo, String[] FileNames) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.i3NXIGCbGjStringArrayList">
            <summary>设置 File.i3NXIGCbGj(String  , ArrayList  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimFile.ShimCompressDirectory">
            <summary>Shove._IO.File+CompressDirectory 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.#ctor(Shove._IO.File.CompressDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.CompressStringStringInt32Boolean">
            <summary>设置 CompressDirectory.Compress(String DirectoryName, String GzipFileName, Int32 CompressionLevel, Boolean IsWithDirectory) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.Constructor">
            <summary>设置 CompressDirectory.CompressDirectory() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.DecompressStringStringBoolean">
            <summary>设置 CompressDirectory.Decompress(String GzipFile, String targetPath, Boolean IsOutputDirectory) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.NUtfZtFsvPString">
            <summary>设置 CompressDirectory.NUtfZtFsvP(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.QfxfPiA0QZString">
            <summary>设置 CompressDirectory.QfxfPiA0QZ(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.QuDfqxnXiWFileInfo">
            <summary>设置 CompressDirectory.QuDfqxnXiW(FileInfo  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.VJkfnxqv1ZDirectoryInfoDictionaryOfStringDateTime">
            <summary>设置 CompressDirectory.VJkfnxqv1Z(DirectoryInfo  , Dictionary`2&lt;String,DateTime&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.opZfAO67t9DirectoryInfoArrayDictionaryOfStringDateTime">
            <summary>设置 CompressDirectory.opZfAO67t9(DirectoryInfo[]  , Dictionary`2&lt;String,DateTime&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.wgOfHSviSFListOfFileInfoStringInt32">
            <summary>设置 CompressDirectory.wgOfHSviSF(List`1&lt;FileInfo&gt;  , String  , Int32  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimFile.ShimCompressDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimIniFile">
            <summary>Shove._IO.IniFile 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimIniFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimIniFile.#ctor(Shove._IO.IniFile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimIniFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimIniFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.ConstructorString">
            <summary>设置 IniFile.IniFile(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.ConstructorStringBoolean">
            <summary>设置 IniFile.IniFile(String FileName, Boolean Lazy) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.FYtXny6NKg">
            <summary>设置 IniFile.FYtXny6NKg() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.FileNameGet">
            <summary>设置 IniFile.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.MQZXZMFHfGByteArray">
            <summary>设置 IniFile.MQZXZMFHfG(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.ReadStringString">
            <summary>设置 IniFile.Read(String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.RikXPYFZJLStringBoolean">
            <summary>设置 IniFile.RikXPYFZJL(String  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.WriteStringStringObject">
            <summary>设置 IniFile.Write(String SectionName, String Key, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.lDSXqxD3kJString">
            <summary>设置 IniFile.lDSXqxD3kJ(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.rJ6XAuPk2h">
            <summary>设置 IniFile.rJ6XAuPk2h() 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimIniFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.FYtXny6NKg">
            <summary>设置 IniFile.FYtXny6NKg() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.FileNameGet">
            <summary>设置 IniFile.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.MQZXZMFHfGByteArray">
            <summary>设置 IniFile.MQZXZMFHfG(Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.ReadStringString">
            <summary>设置 IniFile.Read(String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.RikXPYFZJLStringBoolean">
            <summary>设置 IniFile.RikXPYFZJL(String  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.WriteStringStringObject">
            <summary>设置 IniFile.Write(String SectionName, String Key, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.lDSXqxD3kJString">
            <summary>设置 IniFile.lDSXqxD3kJ(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimIniFile.AllInstances.rJ6XAuPk2h">
            <summary>设置 IniFile.rJ6XAuPk2h() 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimLog">
            <summary>Shove._IO.Log 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimLog.#ctor(Shove._IO.Log)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimLog.ConstructorString">
            <summary>设置 Log.Log(String pathname) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimLog.WriteString">
            <summary>设置 Log.Write(String Message) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimLog.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimLog.AllInstances.WriteString">
            <summary>设置 Log.Write(String Message) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrintDirect">
            <summary>Shove._IO.PrintDirect 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect.#ctor(Shove._IO.PrintDirect)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrintDirect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrintDirect.Constructor">
            <summary>设置 PrintDirect.PrintDirect() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrintDirect.PrintStringStringStringInt32RefStringRef">
            <summary>设置 PrintDirect.Print(String PrinterName, String DocumentName, String Content, Int32&amp; pcWritten, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrintDirect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrintDirect2">
            <summary>Shove._IO.PrintDirect2 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect2.#ctor(Shove._IO.PrintDirect2)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrintDirect2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrintDirect2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrintDirect2.Constructor">
            <summary>设置 PrintDirect2.PrintDirect2() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrintDirect2.PrintStringStringStringRef">
            <summary>设置 PrintDirect2.Print(String PortName, String Content, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrintDirect2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrinter">
            <summary>Shove._IO.Printer 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.#ctor(Shove._IO.Printer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrinter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrinter.Constructor">
            <summary>设置 Printer.Printer() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrinter.EnumPrintersPrinterPrinterEnumFlags">
            <summary>设置 Printer.EnumPrinters(PrinterEnumFlags Flags) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrinter.GetPrinter">
            <summary>设置 Printer.GetPrinter() 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrinter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrinter.ShimPRINTER_INFO_2">
            <summary>Shove._IO.Printer+PRINTER_INFO_2 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.ShimPRINTER_INFO_2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.ShimPRINTER_INFO_2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimPrinter.ShimPRINTER_INFO_2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimPrinter.ShimPRINTER_INFO_2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimPrinter.ShimPRINTER_INFO_2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimZip">
            <summary>Shove._IO.Zip 的填充码类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimZip.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimZip.#ctor(Shove._IO.Zip)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimZip.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._IO.Fakes.ShimZip.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimZip.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimZip.CompressStream">
            <summary>设置 Zip.Compress(Stream Source) 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimZip.Constructor">
            <summary>设置 Zip.Zip() 的 填充码</summary>
        </member>
        <member name="P:Shove._IO.Fakes.ShimZip.DecompressStream">
            <summary>设置 Zip.Decompress(Stream Source) 的 填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.ShimZip.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubFile">
            <summary>Shove._IO.File 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubFile.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubFile.InitializeStub">
            <summary>初始化 type StubFile 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubFile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubFile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubFile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubIniFile">
            <summary>Shove._IO.IniFile 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubIniFile.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubIniFile.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubIniFile.InitializeStub">
            <summary>初始化 type StubIniFile 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubIniFile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubIniFile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubIniFile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubLog">
            <summary>Shove._IO.Log 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubLog.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubLog.InitializeStub">
            <summary>初始化 type StubLog 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubLog.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubLog.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubLog.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubPrintDirect">
            <summary>Shove._IO.PrintDirect 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubPrintDirect.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubPrintDirect.InitializeStub">
            <summary>初始化 type StubPrintDirect 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrintDirect.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrintDirect.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrintDirect.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubPrintDirect2">
            <summary>Shove._IO.PrintDirect2 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubPrintDirect2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubPrintDirect2.InitializeStub">
            <summary>初始化 type StubPrintDirect2 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrintDirect2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrintDirect2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrintDirect2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubPrinter">
            <summary>Shove._IO.Printer 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubPrinter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubPrinter.InitializeStub">
            <summary>初始化 type StubPrinter 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrinter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrinter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubPrinter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._IO.Fakes.StubZip">
            <summary>Shove._IO.Zip 的存根类型</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubZip.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._IO.Fakes.StubZip.InitializeStub">
            <summary>初始化 type StubZip 的新实例</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubZip.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubZip.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._IO.Fakes.StubZip.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimEmail">
            <summary>Shove._Net.Email 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimEmail.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimEmail.#ctor(Shove._Net.Email)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimEmail.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimEmail.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.Constructor">
            <summary>设置 Email.Email() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.SendEmailStringStringStringStringStringStringString">
            <summary>设置 Email.SendEmail(String MailFrom, String MailTo, String Subject, String Body, String MailServer, String MailUserName, String MailUserPassword) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.SendEmailStringStringStringStringStringStringStringArrayStringStringString">
            <summary>设置 Email.SendEmail(String MailFrom, String DisplayName, String MailTo, String CC, String Subject, String Body, String[] Attachments, String MailServer, String MailUserName, String MailUserPassword) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.SendEmailStringStringStringStringStringStringStringString">
            <summary>设置 Email.SendEmail(String MailFrom, String DisplayName, String MailTo, String Subject, String Body, String MailServer, String MailUserName, String MailUserPassword) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.SendEmailStringStringStringStringStringStringStringStringArrayInt32StringStringStringStringRef">
            <summary>设置 Email.SendEmail(String MailFrom, String DisplayName, String MailTo, String CC, String Bcc, String Subject, String Body, String[] Attachments, Int32 Priority, String MailServer, String MailUserName, String MailUserPassword, String&amp; ErrorDescrption) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimEmail.SendEmailStringStringStringStringStringStringStringStringString">
            <summary>设置 Email.SendEmail(String MailFrom, String DisplayName, String MailTo, String CC, String Subject, String Body, String MailServer, String MailUserName, String MailUserPassword) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimEmail.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimIPAddress">
            <summary>Shove._Net.IPAddress 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimIPAddress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimIPAddress.#ctor(Shove._Net.IPAddress)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimIPAddress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimIPAddress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.Constructor">
            <summary>设置 IPAddress.IPAddress() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.GetPlaceFromIPAddressInt64DataSet">
            <summary>设置 IPAddress.GetPlaceFromIPAddress(Int64 IPAddress, DataSet ds) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.GetPlaceFromIPAddressInt64SqlConnectionString">
            <summary>设置 IPAddress.GetPlaceFromIPAddress(Int64 IPAddress, SqlConnection conn, String IPTable) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.GetPlaceFromIPAddressInt64String">
            <summary>设置 IPAddress.GetPlaceFromIPAddress(Int64 IPAddress, String DataFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.GetPlaceFromIPAddressStringDataSet">
            <summary>设置 IPAddress.GetPlaceFromIPAddress(String sIPAddress, DataSet ds) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.GetPlaceFromIPAddressStringSqlConnectionString">
            <summary>设置 IPAddress.GetPlaceFromIPAddress(String sIPAddress, SqlConnection conn, String IPTable) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.GetPlaceFromIPAddressStringString">
            <summary>设置 IPAddress.GetPlaceFromIPAddress(String sIPAddress, String DataFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimIPAddress.IPAddressToInt64String">
            <summary>设置 IPAddress.IPAddressToInt64(String IPAddress) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimIPAddress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet">
            <summary>Shove._Net.Internet 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.#ctor(Shove._Net.Internet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.Constructor">
            <summary>设置 Internet.Internet() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.GetInternetConnectedState">
            <summary>设置 Internet.GetInternetConnectedState() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.SetNetworkAdapterDNSStringString">
            <summary>设置 Internet.SetNetworkAdapterDNS(String dns1, String dns2) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.AllInstances.SetNetworkAdapterDNSStringString">
            <summary>设置 Internet.SetNetworkAdapterDNS(String dns1, String dns2) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.ShimRasManager">
            <summary>Shove._Net.Internet+RasManager 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.#ctor(Shove._Net.Internet.RasManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.Connect">
            <summary>设置 RasManager.Connect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.Constructor">
            <summary>设置 RasManager.RasManager() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.EntryNameGet">
            <summary>设置 RasManager.get_EntryName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.EntryNameSetString">
            <summary>设置 RasManager.set_EntryName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.HangAllConnection">
            <summary>设置 RasManager.HangAllConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.PasswordGet">
            <summary>设置 RasManager.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.PasswordSetString">
            <summary>设置 RasManager.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.RasDialFuncUInt32Int32Int32">
            <summary>设置 RasManager.RasDialFunc(UInt32 unMsg, Int32 rasconnstate, Int32 dwError) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.UserNameGet">
            <summary>设置 RasManager.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.UserNameSetString">
            <summary>设置 RasManager.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.Connect">
            <summary>设置 RasManager.Connect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.EntryNameGet">
            <summary>设置 RasManager.get_EntryName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.EntryNameSetString">
            <summary>设置 RasManager.set_EntryName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.HangAllConnection">
            <summary>设置 RasManager.HangAllConnection() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.PasswordGet">
            <summary>设置 RasManager.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.PasswordSetString">
            <summary>设置 RasManager.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.UserNameGet">
            <summary>设置 RasManager.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.AllInstances.UserNameSetString">
            <summary>设置 RasManager.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASCONN">
            <summary>Shove._Net.Internet+RasManager+RASCONN 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASCONN.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASCONN.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASCONN.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASCONN.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASCONN.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASDIALPARAMS">
            <summary>Shove._Net.Internet+RasManager+RASDIALPARAMS 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASDIALPARAMS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASDIALPARAMS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASDIALPARAMS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASDIALPARAMS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._Net.Fakes.ShimInternet.ShimRasManager.ShimRASDIALPARAMS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.Fakes.StubEmail">
            <summary>Shove._Net.Email 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.StubEmail.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.StubEmail.InitializeStub">
            <summary>初始化 type StubEmail 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubEmail.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubEmail.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubEmail.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Fakes.StubIPAddress">
            <summary>Shove._Net.IPAddress 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.StubIPAddress.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.StubIPAddress.InitializeStub">
            <summary>初始化 type StubIPAddress 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubIPAddress.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubIPAddress.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubIPAddress.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Fakes.StubInternet">
            <summary>Shove._Net.Internet 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Fakes.StubInternet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Fakes.StubInternet.InitializeStub">
            <summary>初始化 type StubInternet 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubInternet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubInternet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Fakes.StubInternet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimFtpClient">
            <summary>Shove._Net.Ftp.FtpClient 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpClient.#ctor(Shove._Net.Ftp.FtpClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AsynchronousDisconnect">
            <summary>设置 FtpClient.AsynchronousDisconnect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AsynchronousDownloadStringStringOverrideMode">
            <summary>设置 FtpClient.AsynchronousDownload(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AsynchronousUpdateStringStringOverrideMode">
            <summary>设置 FtpClient.AsynchronousUpdate(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.Cancel">
            <summary>设置 FtpClient.Cancel() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.Connect">
            <summary>设置 FtpClient.Connect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.ConstructorStringInt32StringStringBooleanBooleanBoolean">
            <summary>设置 FtpClient.FtpClient(String Server, Int32 Port, String UserName, String Password, Boolean UseBinary, Boolean UsePassive, Boolean EnableSsl) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.ConstructorStringInt32StringStringBooleanBooleanBooleanInt32">
            <summary>设置 FtpClient.FtpClient(String Server, Int32 Port, String UserName, String Password, Boolean UseBinary, Boolean UsePassive, Boolean EnableSsl, Int32 TransferBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.ConstructorStringStringString">
            <summary>设置 FtpClient.FtpClient(String Server, String UserName, String Password) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.CreateDirectoryString">
            <summary>设置 FtpClient.CreateDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.DeleteDirectoryString">
            <summary>设置 FtpClient.DeleteDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.DeleteFileString">
            <summary>设置 FtpClient.DeleteFile(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.DirectoryExistsString">
            <summary>设置 FtpClient.DirectoryExists(String directoryName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.Disconnect">
            <summary>设置 FtpClient.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.DownloadStringStringBoolean">
            <summary>设置 FtpClient.Download(String localFileName, String remoteFileName, Boolean resume) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.FileExistsString">
            <summary>设置 FtpClient.FileExists(String filename) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.GetDirectorysString">
            <summary>设置 FtpClient.GetDirectorys(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.GetFileSizeString">
            <summary>设置 FtpClient.GetFileSize(String filename) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.GetFilesString">
            <summary>设置 FtpClient.GetFiles(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.HrowvuwbvF">
            <summary>设置 FtpClient.HrowvuwbvF() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.JlMw3Ltfcu">
            <summary>设置 FtpClient.JlMw3Ltfcu() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.MIewinxCepStringIListOfFtpFileInfo">
            <summary>设置 FtpClient.MIewinxCep(String  , IList`1&lt;FtpFileInfo&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.OnTransferingAddFtpClientTransferEventHandler">
            <summary>设置 FtpClient.add_OnTransfering(TransferEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.OnTransferingRemoveFtpClientTransferEventHandler">
            <summary>设置 FtpClient.remove_OnTransfering(TransferEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.RenameStringString">
            <summary>设置 FtpClient.Rename(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.UpdateStringStringBoolean">
            <summary>设置 FtpClient.Update(String localFileName, String remoteFileName, Boolean resume) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.XyYwnhR1LbObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.XyYwnhR1Lb(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient._AsynchronousDownloadStringStringOverrideMode">
            <summary>设置 FtpClient._AsynchronousDownload(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient._AsynchronousUpdateStringStringOverrideMode">
            <summary>设置 FtpClient._AsynchronousUpdate(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.dxiwAfTE0OObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.dxiwAfTE0O(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.es4wqeVLyuStringIListOfFtpFileInfo">
            <summary>设置 FtpClient.es4wqeVLyu(String  , IList`1&lt;FtpFileInfo&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.iyywPX1mwRObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.iyywPX1mwR(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.qPRwx80nHcString">
            <summary>设置 FtpClient.qPRwx80nHc(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.tcRwHXLOBtObjectBytesTransferredEventArgs">
            <summary>设置 FtpClient.tcRwHXLOBt(Object  , BytesTransferredEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.xZwwZsOOVSObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.xZwwZsOOVS(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.AsynchronousDisconnect">
            <summary>设置 FtpClient.AsynchronousDisconnect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.AsynchronousDownloadStringStringOverrideMode">
            <summary>设置 FtpClient.AsynchronousDownload(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.AsynchronousUpdateStringStringOverrideMode">
            <summary>设置 FtpClient.AsynchronousUpdate(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.Cancel">
            <summary>设置 FtpClient.Cancel() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.Connect">
            <summary>设置 FtpClient.Connect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.CreateDirectoryString">
            <summary>设置 FtpClient.CreateDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.DeleteDirectoryString">
            <summary>设置 FtpClient.DeleteDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.DeleteFileString">
            <summary>设置 FtpClient.DeleteFile(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.DirectoryExistsString">
            <summary>设置 FtpClient.DirectoryExists(String directoryName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.Disconnect">
            <summary>设置 FtpClient.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.DownloadStringStringBoolean">
            <summary>设置 FtpClient.Download(String localFileName, String remoteFileName, Boolean resume) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.FileExistsString">
            <summary>设置 FtpClient.FileExists(String filename) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.GetDirectorysString">
            <summary>设置 FtpClient.GetDirectorys(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.GetFileSizeString">
            <summary>设置 FtpClient.GetFileSize(String filename) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.GetFilesString">
            <summary>设置 FtpClient.GetFiles(String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.HrowvuwbvF">
            <summary>设置 FtpClient.HrowvuwbvF() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.JlMw3Ltfcu">
            <summary>设置 FtpClient.JlMw3Ltfcu() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.MIewinxCepStringIListOfFtpFileInfo">
            <summary>设置 FtpClient.MIewinxCep(String  , IList`1&lt;FtpFileInfo&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.OnTransferingAddFtpClientTransferEventHandler">
            <summary>设置 FtpClient.add_OnTransfering(TransferEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.OnTransferingRemoveFtpClientTransferEventHandler">
            <summary>设置 FtpClient.remove_OnTransfering(TransferEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.RenameStringString">
            <summary>设置 FtpClient.Rename(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.UpdateStringStringBoolean">
            <summary>设置 FtpClient.Update(String localFileName, String remoteFileName, Boolean resume) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.XyYwnhR1LbObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.XyYwnhR1Lb(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances._AsynchronousDownloadStringStringOverrideMode">
            <summary>设置 FtpClient._AsynchronousDownload(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances._AsynchronousUpdateStringStringOverrideMode">
            <summary>设置 FtpClient._AsynchronousUpdate(String localFileName, String remoteFileName, OverrideMode mode) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.dxiwAfTE0OObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.dxiwAfTE0O(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.es4wqeVLyuStringIListOfFtpFileInfo">
            <summary>设置 FtpClient.es4wqeVLyu(String  , IList`1&lt;FtpFileInfo&gt;  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.iyywPX1mwRObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.iyywPX1mwR(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.qPRwx80nHcString">
            <summary>设置 FtpClient.qPRwx80nHc(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.tcRwHXLOBtObjectBytesTransferredEventArgs">
            <summary>设置 FtpClient.tcRwHXLOBt(Object  , BytesTransferredEventArgs  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpClient.AllInstances.xZwwZsOOVSObjectFTPFileTransferEventArgs">
            <summary>设置 FtpClient.xZwwZsOOVS(Object  , FTPFileTransferEventArgs  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimFtpFileInfo">
            <summary>Shove._Net.Ftp.FtpFileInfo 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.#ctor(Shove._Net.Ftp.FtpFileInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.ConstructorFTPFileString">
            <summary>设置 FtpFileInfo.FtpFileInfo(FTPFile file, String path) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimFtpFileInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimTask">
            <summary>Shove._Net.Ftp.Task 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTask.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTask.#ctor(Shove._Net.Ftp.Task)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTask.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTask.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTask.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AddTaskItem">
            <summary>设置 Task.Add(TaskItem item) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.CancelAll">
            <summary>设置 Task.CancelAll() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.ClearAll">
            <summary>设置 Task.ClearAll() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.ClearFinished">
            <summary>设置 Task.ClearFinished() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.CompletedGet">
            <summary>设置 Task.get_Completed() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.ConstructorInt32">
            <summary>设置 Task.Task(Int32 MaxRuningTaskNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.CountGet">
            <summary>设置 Task.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.FinishedGet">
            <summary>设置 Task.get_Finished() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.GetEnumerator">
            <summary>设置 Task.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.ItemGetInt32">
            <summary>设置 Task.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.RemoveInt32">
            <summary>设置 Task.Remove(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.RemoveTaskItem">
            <summary>设置 Task.Remove(TaskItem item) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.bw0wobx2i9">
            <summary>设置 Task.bw0wobx2i9() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimTask.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.AddTaskItem">
            <summary>设置 Task.Add(TaskItem item) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.CancelAll">
            <summary>设置 Task.CancelAll() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.ClearAll">
            <summary>设置 Task.ClearAll() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.ClearFinished">
            <summary>设置 Task.ClearFinished() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.CompletedGet">
            <summary>设置 Task.get_Completed() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.CountGet">
            <summary>设置 Task.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.FinishedGet">
            <summary>设置 Task.get_Finished() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.GetEnumerator">
            <summary>设置 Task.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.ItemGetInt32">
            <summary>设置 Task.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.RemoveInt32">
            <summary>设置 Task.Remove(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.RemoveTaskItem">
            <summary>设置 Task.Remove(TaskItem item) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTask.AllInstances.bw0wobx2i9">
            <summary>设置 Task.bw0wobx2i9() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimTaskItem">
            <summary>Shove._Net.Ftp.TaskItem 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTaskItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTaskItem.#ctor(Shove._Net.Ftp.TaskItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTaskItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTaskItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ConstructorStringStringInt32StringStringBooleanBooleanBooleanInt32StringStringDirectionInstruct">
            <summary>设置 TaskItem.TaskItem(String Identifiers, String Server, Int32 Port, String UserName, String Password, Boolean UseBinary, Boolean UsePassive, Boolean EnableSsl, Int32 TransferBufferSize, String LocalFileName, String RemoteFileName, Direction TransferDirection, Instruct InitializationInstruct) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ConstructorStringStringInt32StringStringBooleanBooleanBooleanStringStringDirectionInstruct">
            <summary>设置 TaskItem.TaskItem(String Identifiers, String Server, Int32 Port, String UserName, String Password, Boolean UseBinary, Boolean UsePassive, Boolean EnableSsl, String LocalFileName, String RemoteFileName, Direction TransferDirection, Instruct InitializationInstruct) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ConstructorStringStringInt32StringStringStringStringDirection">
            <summary>设置 TaskItem.TaskItem(String Identifiers, String Server, Int32 Port, String UserName, String Password, String LocalFileName, String RemoteFileName, Direction TransferDirection) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ConstructorStringStringInt32StringStringStringStringDirectionInstruct">
            <summary>设置 TaskItem.TaskItem(String Identifiers, String Server, Int32 Port, String UserName, String Password, String LocalFileName, String RemoteFileName, Direction TransferDirection, Instruct InitializationInstruct) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ConstructorStringStringStringStringStringStringDirection">
            <summary>设置 TaskItem.TaskItem(String Identifiers, String Server, String UserName, String Password, String LocalFileName, String RemoteFileName, Direction TransferDirection) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ConstructorStringStringStringStringStringStringDirectionInstruct">
            <summary>设置 TaskItem.TaskItem(String Identifiers, String Server, String UserName, String Password, String LocalFileName, String RemoteFileName, Direction TransferDirection, Instruct InitializationInstruct) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ExceptionGet">
            <summary>设置 TaskItem.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.FileSizeGet">
            <summary>设置 TaskItem.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.IdentifiersGet">
            <summary>设置 TaskItem.get_Identifiers() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.LocalFileNameGet">
            <summary>设置 TaskItem.get_LocalFileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.On_TransferingObjectTransferEventArgs">
            <summary>设置 TaskItem.On_Transfering(Object sender, TransferEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ParentGet">
            <summary>设置 TaskItem.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.ParentSetTask">
            <summary>设置 TaskItem.set_Parent(Task value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.RemoteFileNameGet">
            <summary>设置 TaskItem.get_RemoteFileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.TransferDirectionGet">
            <summary>设置 TaskItem.get_TransferDirection() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.TransferInstructGet">
            <summary>设置 TaskItem.get_TransferInstruct() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.TransferInstructSetInstruct">
            <summary>设置 TaskItem.set_TransferInstruct(Instruct value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.TransferStatusGet">
            <summary>设置 TaskItem.get_TransferStatus() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.TransferredSizeGet">
            <summary>设置 TaskItem.get_TransferredSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.VIitw4DrIa">
            <summary>设置 TaskItem.VIitw4DrIa() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.y0Nt5uiUwj">
            <summary>设置 TaskItem.y0Nt5uiUwj() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.ExceptionGet">
            <summary>设置 TaskItem.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.FileSizeGet">
            <summary>设置 TaskItem.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.IdentifiersGet">
            <summary>设置 TaskItem.get_Identifiers() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.LocalFileNameGet">
            <summary>设置 TaskItem.get_LocalFileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.On_TransferingObjectTransferEventArgs">
            <summary>设置 TaskItem.On_Transfering(Object sender, TransferEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.ParentGet">
            <summary>设置 TaskItem.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.ParentSetTask">
            <summary>设置 TaskItem.set_Parent(Task value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.RemoteFileNameGet">
            <summary>设置 TaskItem.get_RemoteFileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.TransferDirectionGet">
            <summary>设置 TaskItem.get_TransferDirection() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.TransferInstructGet">
            <summary>设置 TaskItem.get_TransferInstruct() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.TransferInstructSetInstruct">
            <summary>设置 TaskItem.set_TransferInstruct(Instruct value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.TransferStatusGet">
            <summary>设置 TaskItem.get_TransferStatus() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.TransferredSizeGet">
            <summary>设置 TaskItem.get_TransferredSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.VIitw4DrIa">
            <summary>设置 TaskItem.VIitw4DrIa() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTaskItem.AllInstances.y0Nt5uiUwj">
            <summary>设置 TaskItem.y0Nt5uiUwj() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimTransferEventArgs">
            <summary>Shove._Net.Ftp.TransferEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.#ctor(Shove._Net.Ftp.TransferEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.Constructor">
            <summary>设置 TransferEventArgs.TransferEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.ExceptionGet">
            <summary>设置 TransferEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.ExceptionSetException">
            <summary>设置 TransferEventArgs.set_Exception(Exception value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.FileSizeGet">
            <summary>设置 TransferEventArgs.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.FileSizeSetInt64">
            <summary>设置 TransferEventArgs.set_FileSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.TransferStatusGet">
            <summary>设置 TransferEventArgs.get_TransferStatus() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.TransferStatusSetStatus">
            <summary>设置 TransferEventArgs.set_TransferStatus(Status value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.TransferredSizeGet">
            <summary>设置 TransferEventArgs.get_TransferredSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.TransferredSizeSetInt64">
            <summary>设置 TransferEventArgs.set_TransferredSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.ExceptionGet">
            <summary>设置 TransferEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.ExceptionSetException">
            <summary>设置 TransferEventArgs.set_Exception(Exception value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.FileSizeGet">
            <summary>设置 TransferEventArgs.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.FileSizeSetInt64">
            <summary>设置 TransferEventArgs.set_FileSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.TransferStatusGet">
            <summary>设置 TransferEventArgs.get_TransferStatus() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.TransferStatusSetStatus">
            <summary>设置 TransferEventArgs.set_TransferStatus(Status value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.TransferredSizeGet">
            <summary>设置 TransferEventArgs.get_TransferredSize() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.ShimTransferEventArgs.AllInstances.TransferredSizeSetInt64">
            <summary>设置 TransferEventArgs.set_TransferredSize(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.StubFtpClient">
            <summary>Shove._Net.Ftp.FtpClient 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubFtpClient.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubFtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubFtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubFtpClient.InitializeStub">
            <summary>初始化 type StubFtpClient 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubFtpClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubFtpClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubFtpClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.StubFtpFileInfo">
            <summary>Shove._Net.Ftp.FtpFileInfo 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubFtpFileInfo.#ctor(EnterpriseDT.Net.Ftp.FTPFile,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubFtpFileInfo.InitializeStub">
            <summary>初始化 type StubFtpFileInfo 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubFtpFileInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubFtpFileInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubFtpFileInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.StubTask">
            <summary>Shove._Net.Ftp.Task 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTask.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTask.InitializeStub">
            <summary>初始化 type StubTask 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTask.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTask.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTask.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.StubTaskItem">
            <summary>Shove._Net.Ftp.TaskItem 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTaskItem.InitializeStub">
            <summary>初始化 type StubTaskItem 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTaskItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTaskItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTaskItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.Ftp.Fakes.StubTransferEventArgs">
            <summary>Shove._Net.Ftp.TransferEventArgs 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTransferEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.Ftp.Fakes.StubTransferEventArgs.InitializeStub">
            <summary>初始化 type StubTransferEventArgs 的新实例</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTransferEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTransferEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.Ftp.Fakes.StubTransferEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.FtpManage.Fakes.ShimFileZillaServer">
            <summary>Shove._Net.FtpManage.FileZillaServer 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.#ctor(Shove._Net.FtpManage.FileZillaServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.CYatyIFDM2">
            <summary>设置 FileZillaServer.CYatyIFDM2() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.ConstructorStringString">
            <summary>设置 FileZillaServer.FileZillaServer(String ExecuteFileName, String ConfigFileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.CreateUserFileZillaServerUserStringRef">
            <summary>设置 FileZillaServer.CreateUser(FileZillaServerUser user, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.EditUserFileZillaServerUserStringRef">
            <summary>设置 FileZillaServer.EditUser(FileZillaServerUser user, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.GetUserStringStringRef">
            <summary>设置 FileZillaServer.GetUser(String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.GetUsersStringRef">
            <summary>设置 FileZillaServer.GetUsers(String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.QueryUsedSpaceSizeFileZillaServerUserStringRef">
            <summary>设置 FileZillaServer.QueryUsedSpaceSize(FileZillaServerUser user, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.RemoveUserStringStringRef">
            <summary>设置 FileZillaServer.RemoveUser(String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.StartService">
            <summary>设置 FileZillaServer.StartService() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.StopService">
            <summary>设置 FileZillaServer.StopService() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.jVJtbBSNHU">
            <summary>设置 FileZillaServer.jVJtbBSNHU() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.pD4tBl3mvM">
            <summary>设置 FileZillaServer.pD4tBl3mvM() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.y1YtSSje0F">
            <summary>设置 FileZillaServer.y1YtSSje0F() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.CYatyIFDM2">
            <summary>设置 FileZillaServer.CYatyIFDM2() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.CreateUserFileZillaServerUserStringRef">
            <summary>设置 FileZillaServer.CreateUser(FileZillaServerUser user, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.EditUserFileZillaServerUserStringRef">
            <summary>设置 FileZillaServer.EditUser(FileZillaServerUser user, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.GetUserStringStringRef">
            <summary>设置 FileZillaServer.GetUser(String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.GetUsersStringRef">
            <summary>设置 FileZillaServer.GetUsers(String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.QueryUsedSpaceSizeFileZillaServerUserStringRef">
            <summary>设置 FileZillaServer.QueryUsedSpaceSize(FileZillaServerUser user, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.RemoveUserStringStringRef">
            <summary>设置 FileZillaServer.RemoveUser(String UserName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.StartService">
            <summary>设置 FileZillaServer.StartService() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.StopService">
            <summary>设置 FileZillaServer.StopService() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.jVJtbBSNHU">
            <summary>设置 FileZillaServer.jVJtbBSNHU() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.pD4tBl3mvM">
            <summary>设置 FileZillaServer.pD4tBl3mvM() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServer.AllInstances.y1YtSSje0F">
            <summary>设置 FileZillaServer.y1YtSSje0F() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser">
            <summary>Shove._Net.FtpManage.FileZillaServerUser 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.#ctor(Shove._Net.FtpManage.FileZillaServerUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.Constructor">
            <summary>设置 FileZillaServerUser.FileZillaServerUser() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.HashPasswordString">
            <summary>设置 FileZillaServerUser.HashPassword(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.ValidUserInfoFileZillaServerUser">
            <summary>设置 FileZillaServerUser.ValidUserInfo(FileZillaServerUser user) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.FtpManage.Fakes.ShimFileZillaServerUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.FtpManage.Fakes.StubFileZillaServer">
            <summary>Shove._Net.FtpManage.FileZillaServer 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.StubFileZillaServer.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.StubFileZillaServer.InitializeStub">
            <summary>初始化 type StubFileZillaServer 的新实例</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.StubFileZillaServer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.StubFileZillaServer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.StubFileZillaServer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.FtpManage.Fakes.StubFileZillaServerUser">
            <summary>Shove._Net.FtpManage.FileZillaServerUser 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.StubFileZillaServerUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.FtpManage.Fakes.StubFileZillaServerUser.InitializeStub">
            <summary>初始化 type StubFileZillaServerUser 的新实例</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.StubFileZillaServerUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.StubFileZillaServerUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.FtpManage.Fakes.StubFileZillaServerUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimHostHeader">
            <summary>Shove._Net.IIS.HostHeader 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimHostHeader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimHostHeader.#ctor(Shove._Net.IIS.HostHeader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimHostHeader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimHostHeader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AddDirectoryEntry">
            <summary>设置 HostHeader.Add(DirectoryEntry server) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AddPropertyValueCollection">
            <summary>设置 HostHeader.Add(PropertyValueCollection serverBindings) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AddStringInt32String">
            <summary>设置 HostHeader.Add(String ip, Int32 port, String domainName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.Clear">
            <summary>设置 HostHeader.Clear() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.Constructor">
            <summary>设置 HostHeader.HostHeader() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimHostHeader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AllInstances.AddDirectoryEntry">
            <summary>设置 HostHeader.Add(DirectoryEntry server) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AllInstances.AddPropertyValueCollection">
            <summary>设置 HostHeader.Add(PropertyValueCollection serverBindings) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AllInstances.AddStringInt32String">
            <summary>设置 HostHeader.Add(String ip, Int32 port, String domainName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimHostHeader.AllInstances.Clear">
            <summary>设置 HostHeader.Clear() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISManagement">
            <summary>Shove._Net.IIS.IISManagement 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISManagement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISManagement.#ctor(Shove._Net.IIS.IISManagement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISManagement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISManagement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AddHostHeaderDirectoryEntryHostHeader">
            <summary>设置 IISManagement.AddHostHeader(DirectoryEntry Server, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AddHostHeaderInt32HostHeader">
            <summary>设置 IISManagement.AddHostHeader(Int32 Identify, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AddHostHeaderStringHostHeader">
            <summary>设置 IISManagement.AddHostHeader(String ServerComment, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AddHostHeaderStringInt32HostHeader">
            <summary>设置 IISManagement.AddHostHeader(String MachineName, Int32 Identify, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AddHostHeaderStringStringHostHeader">
            <summary>设置 IISManagement.AddHostHeader(String MachineName, String ServerComment, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AssignAppPoolDirectoryEntryString">
            <summary>设置 IISManagement.AssignAppPool(DirectoryEntry Server, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AssignAppPoolInt32String">
            <summary>设置 IISManagement.AssignAppPool(Int32 Identify, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AssignAppPoolStringInt32String">
            <summary>设置 IISManagement.AssignAppPool(String MachineName, Int32 Identify, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AssignAppPoolStringString">
            <summary>设置 IISManagement.AssignAppPool(String ServerComment, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.AssignAppPoolStringStringString">
            <summary>设置 IISManagement.AssignAppPool(String MachineName, String ServerComment, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.ConfigAppPoolAppPoolMethodTypeString">
            <summary>设置 IISManagement.ConfigAppPool(AppPoolMethodType method, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.ConfigAppPoolStringAppPoolMethodTypeString">
            <summary>设置 IISManagement.ConfigAppPool(String MachineName, AppPoolMethodType method, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.ConfigAppPoolStringString">
            <summary>设置 IISManagement.ConfigAppPool(String method, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.ConfigAppPoolStringStringString">
            <summary>设置 IISManagement.ConfigAppPool(String MachineName, String method, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.Constructor">
            <summary>设置 IISManagement.IISManagement() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.CreateAppPoolStringAppPoolTypeBoolean">
            <summary>设置 IISManagement.CreateAppPool(String AppPoolName, AppPoolType type, Boolean isStart) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.CreateAppPoolStringStringAppPoolTypeBoolean">
            <summary>设置 IISManagement.CreateAppPool(String MachineName, String AppPoolName, AppPoolType type, Boolean isStart) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.CreateIISWebServerIISWebServer">
            <summary>设置 IISManagement.CreateIISWebServer(IISWebServer iisws) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.CreateIISWebServerStringIISWebServer">
            <summary>设置 IISManagement.CreateIISWebServer(String MachineName, IISWebServer iisws) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.CreateIISWebVirtualDirIISWebVirtualDirBoolean">
            <summary>设置 IISManagement.CreateIISWebVirtualDir(IISWebVirtualDir iisvd, Boolean deleteExists) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.CreateIISWebVirtualDirStringIISWebVirtualDirBoolean">
            <summary>设置 IISManagement.CreateIISWebVirtualDir(String MachineName, IISWebVirtualDir iisvd, Boolean deleteExists) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServer404PageDirectoryEntryString">
            <summary>设置 IISManagement.EditIISWebServer404Page(DirectoryEntry Server, String Page) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServer404PageInt32String">
            <summary>设置 IISManagement.EditIISWebServer404Page(Int32 Identify, String Page) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServer404PageStringInt32String">
            <summary>设置 IISManagement.EditIISWebServer404Page(String MachineName, Int32 Identify, String Page) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServer404PageStringString">
            <summary>设置 IISManagement.EditIISWebServer404Page(String ServerComment, String Page) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServer404PageStringStringString">
            <summary>设置 IISManagement.EditIISWebServer404Page(String MachineName, String ServerComment, String Page) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerDefaultPageDirectoryEntryString">
            <summary>设置 IISManagement.EditIISWebServerDefaultPage(DirectoryEntry Server, String DefaultPageList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerDefaultPageInt32String">
            <summary>设置 IISManagement.EditIISWebServerDefaultPage(Int32 Identify, String DefaultPageList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerDefaultPageStringInt32String">
            <summary>设置 IISManagement.EditIISWebServerDefaultPage(String MachineName, Int32 Identify, String DefaultPageList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerDefaultPageStringString">
            <summary>设置 IISManagement.EditIISWebServerDefaultPage(String ServerComment, String DefaultPageList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerDefaultPageStringStringString">
            <summary>设置 IISManagement.EditIISWebServerDefaultPage(String MachineName, String ServerComment, String DefaultPageList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerIISWebServer">
            <summary>设置 IISManagement.EditIISWebServer(IISWebServer iisws) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerMimeDirectoryEntryString">
            <summary>设置 IISManagement.EditIISWebServerMime(DirectoryEntry Server, String MimeMapList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerMimeInt32String">
            <summary>设置 IISManagement.EditIISWebServerMime(Int32 Identify, String MimeMapList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerMimeStringInt32String">
            <summary>设置 IISManagement.EditIISWebServerMime(String MachineName, Int32 Identify, String MimeMapList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerMimeStringString">
            <summary>设置 IISManagement.EditIISWebServerMime(String ServerComment, String MimeMapList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerMimeStringStringString">
            <summary>设置 IISManagement.EditIISWebServerMime(String MachineName, String ServerComment, String MimeMapList) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerNetFrameVersionDirectoryEntryString">
            <summary>设置 IISManagement.EditIISWebServerNetFrameVersion(DirectoryEntry Server, String NetExecuteFileNameOfVersion) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerNetFrameVersionInt32String">
            <summary>设置 IISManagement.EditIISWebServerNetFrameVersion(Int32 Identify, String NetExecuteFileNameOfVersion) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerNetFrameVersionStringInt32String">
            <summary>设置 IISManagement.EditIISWebServerNetFrameVersion(String MachineName, Int32 Identify, String NetExecuteFileNameOfVersion) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerNetFrameVersionStringString">
            <summary>设置 IISManagement.EditIISWebServerNetFrameVersion(String ServerComment, String NetExecuteFileNameOfVersion) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerNetFrameVersionStringStringString">
            <summary>设置 IISManagement.EditIISWebServerNetFrameVersion(String MachineName, String ServerComment, String NetExecuteFileNameOfVersion) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerPathDirectoryEntryString">
            <summary>设置 IISManagement.EditIISWebServerPath(DirectoryEntry Server, String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerPathInt32String">
            <summary>设置 IISManagement.EditIISWebServerPath(Int32 Identify, String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerPathStringInt32String">
            <summary>设置 IISManagement.EditIISWebServerPath(String MachineName, Int32 Identify, String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerPathStringString">
            <summary>设置 IISManagement.EditIISWebServerPath(String ServerComment, String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerPathStringStringString">
            <summary>设置 IISManagement.EditIISWebServerPath(String MachineName, String ServerComment, String path) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.EditIISWebServerStringIISWebServer">
            <summary>设置 IISManagement.EditIISWebServer(String MachineName, IISWebServer iisws) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetAppPoolList">
            <summary>设置 IISManagement.GetAppPoolList() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetAppPoolListString">
            <summary>设置 IISManagement.GetAppPoolList(String MachineName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISServerVersion">
            <summary>设置 IISManagement.GetIISServerVersion() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISServerVersionString">
            <summary>设置 IISManagement.GetIISServerVersion(String MachineName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerExistsInt32">
            <summary>设置 IISManagement.GetIISWebServerExists(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerExistsString">
            <summary>设置 IISManagement.GetIISWebServerExists(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerExistsStringInt32">
            <summary>设置 IISManagement.GetIISWebServerExists(String MachineName, Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerExistsStringString">
            <summary>设置 IISManagement.GetIISWebServerExists(String MachineName, String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerFromAppPoolString">
            <summary>设置 IISManagement.GetIISWebServerFromAppPool(String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerFromAppPoolStringString">
            <summary>设置 IISManagement.GetIISWebServerFromAppPool(String MachineName, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerInt32">
            <summary>设置 IISManagement.GetIISWebServer(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStateDirectoryEntry">
            <summary>设置 IISManagement.GetIISWebServerState(DirectoryEntry server) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStateInt32">
            <summary>设置 IISManagement.GetIISWebServerState(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStateString">
            <summary>设置 IISManagement.GetIISWebServerState(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStateStringInt32">
            <summary>设置 IISManagement.GetIISWebServerState(String MachineName, Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStateStringString">
            <summary>设置 IISManagement.GetIISWebServerState(String MachineName, String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerString">
            <summary>设置 IISManagement.GetIISWebServer(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStringInt32">
            <summary>设置 IISManagement.GetIISWebServer(String MachineName, Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServerStringString">
            <summary>设置 IISManagement.GetIISWebServer(String MachineName, String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServers">
            <summary>设置 IISManagement.GetIISWebServers() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.GetIISWebServersString">
            <summary>设置 IISManagement.GetIISWebServers(String MachineName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveAppPoolString">
            <summary>设置 IISManagement.RemoveAppPool(String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveAppPoolStringString">
            <summary>设置 IISManagement.RemoveAppPool(String MachineName, String AppPoolName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebServerInt32">
            <summary>设置 IISManagement.RemoveIISWebServer(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebServerString">
            <summary>设置 IISManagement.RemoveIISWebServer(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebServerStringInt32">
            <summary>设置 IISManagement.RemoveIISWebServer(String MachineName, Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebServerStringString">
            <summary>设置 IISManagement.RemoveIISWebServer(String MachineName, String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirDirectoryEntryString">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(DirectoryEntry Server, String VirtualDir) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirIISWebVirtualDir">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(IISWebVirtualDir iisvd) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirInt32String">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(Int32 Identify, String VirtualDir) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirStringIISWebVirtualDir">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(String MachineName, IISWebVirtualDir iisvd) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirStringInt32String">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(String MachineName, Int32 Identify, String VirtualDir) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirStringString">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(String ServerComment, String VirtualDir) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.RemoveIISWebVirtualDirStringStringString">
            <summary>设置 IISManagement.RemoveIISWebVirtualDir(String MachineName, String ServerComment, String VirtualDir) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.SGEwuWDRcf">
            <summary>设置 IISManagement.SGEwuWDRcf() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.SetHostHeaderDirectoryEntryHostHeader">
            <summary>设置 IISManagement.SetHostHeader(DirectoryEntry Server, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.SetHostHeaderInt32HostHeader">
            <summary>设置 IISManagement.SetHostHeader(Int32 Identify, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.SetHostHeaderStringHostHeader">
            <summary>设置 IISManagement.SetHostHeader(String ServerComment, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.SetHostHeaderStringInt32HostHeader">
            <summary>设置 IISManagement.SetHostHeader(String MachineName, Int32 Identify, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.SetHostHeaderStringStringHostHeader">
            <summary>设置 IISManagement.SetHostHeader(String MachineName, String ServerComment, HostHeader hostHeader) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StartDirectoryEntry">
            <summary>设置 IISManagement.Start(DirectoryEntry Server) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StartInt32">
            <summary>设置 IISManagement.Start(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StartString">
            <summary>设置 IISManagement.Start(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StartStringInt32">
            <summary>设置 IISManagement.Start(String MachineName, Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StartStringString">
            <summary>设置 IISManagement.Start(String MachineName, String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StaticConstructor">
            <summary>设置 IISManagement.IISManagement() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StopDirectoryEntry">
            <summary>设置 IISManagement.Stop(DirectoryEntry Server) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StopInt32">
            <summary>设置 IISManagement.Stop(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StopString">
            <summary>设置 IISManagement.Stop(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StopStringInt32">
            <summary>设置 IISManagement.Stop(String MachineName, Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.StopStringString">
            <summary>设置 IISManagement.Stop(String MachineName, String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISManagement.ju8we1cc2ODirectoryEntry">
            <summary>设置 IISManagement.ju8we1cc2O(DirectoryEntry  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISManagement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebServer">
            <summary>Shove._Net.IIS.IISWebServer 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServer.#ctor(Shove._Net.IIS.IISWebServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AnonymousUserNameGet">
            <summary>设置 IISWebServer.get_AnonymousUserName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AnonymousUserNameSetString">
            <summary>设置 IISWebServer.set_AnonymousUserName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AnonymousUserPassGet">
            <summary>设置 IISWebServer.get_AnonymousUserPass() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AnonymousUserPassSetString">
            <summary>设置 IISWebServer.set_AnonymousUserPass(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.Constructor">
            <summary>设置 IISWebServer.IISWebServer() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AllInstances.AnonymousUserNameGet">
            <summary>设置 IISWebServer.get_AnonymousUserName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AllInstances.AnonymousUserNameSetString">
            <summary>设置 IISWebServer.set_AnonymousUserName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AllInstances.AnonymousUserPassGet">
            <summary>设置 IISWebServer.get_AnonymousUserPass() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServer.AllInstances.AnonymousUserPassSetString">
            <summary>设置 IISWebServer.set_AnonymousUserPass(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebServerCollection">
            <summary>Shove._Net.IIS.IISWebServerCollection 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.#ctor(Shove._Net.IIS.IISWebServerCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.A4SwmFQavoIISWebServer">
            <summary>设置 IISWebServerCollection.A4SwmFQavo(IISWebServer  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AddRangeIISWebServerArray">
            <summary>设置 IISWebServerCollection.AddRange(IISWebServer[] WebServers) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.Constructor">
            <summary>设置 IISWebServerCollection.IISWebServerCollection() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.ContainsInt32">
            <summary>设置 IISWebServerCollection.Contains(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.ContainsString">
            <summary>设置 IISWebServerCollection.Contains(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.Identifies">
            <summary>设置 IISWebServerCollection.Identifies() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.ItemGetInt32">
            <summary>设置 IISWebServerCollection.get_Item(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.ItemGetString">
            <summary>设置 IISWebServerCollection.get_Item(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.RemoveIISWebServer">
            <summary>设置 IISWebServerCollection.Remove(IISWebServer WebServer) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.ServerComments">
            <summary>设置 IISWebServerCollection.ServerComments() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.A4SwmFQavoIISWebServer">
            <summary>设置 IISWebServerCollection.A4SwmFQavo(IISWebServer  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.AddRangeIISWebServerArray">
            <summary>设置 IISWebServerCollection.AddRange(IISWebServer[] WebServers) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.ContainsInt32">
            <summary>设置 IISWebServerCollection.Contains(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.ContainsString">
            <summary>设置 IISWebServerCollection.Contains(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.Identifies">
            <summary>设置 IISWebServerCollection.Identifies() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.ItemGetInt32">
            <summary>设置 IISWebServerCollection.get_Item(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.ItemGetString">
            <summary>设置 IISWebServerCollection.get_Item(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.RemoveIISWebServer">
            <summary>设置 IISWebServerCollection.Remove(IISWebServer WebServer) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebServerCollection.AllInstances.ServerComments">
            <summary>设置 IISWebServerCollection.ServerComments() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir">
            <summary>Shove._Net.IIS.IISWebVirtualDir 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.#ctor(Shove._Net.IIS.IISWebVirtualDir)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.Constructor">
            <summary>设置 IISWebVirtualDir.IISWebVirtualDir() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.ConstructorIISWebServer">
            <summary>设置 IISWebVirtualDir.IISWebVirtualDir(IISWebServer ws) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.ConstructorInt32">
            <summary>设置 IISWebVirtualDir.IISWebVirtualDir(Int32 Identify) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.ConstructorString">
            <summary>设置 IISWebVirtualDir.IISWebVirtualDir(String ServerComment) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.ParentGet">
            <summary>设置 IISWebVirtualDir.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.ParentSetIISWebServer">
            <summary>设置 IISWebVirtualDir.set_Parent(IISWebServer value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.AllInstances.ParentGet">
            <summary>设置 IISWebVirtualDir.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDir.AllInstances.ParentSetIISWebServer">
            <summary>设置 IISWebVirtualDir.set_Parent(IISWebServer value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection">
            <summary>Shove._Net.IIS.IISWebVirtualDirCollection 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.#ctor(Shove._Net.IIS.IISWebVirtualDirCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AddIISWebVirtualDir">
            <summary>设置 IISWebVirtualDirCollection.Add(IISWebVirtualDir iisvd) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AddRangeIISWebVirtualDirArray">
            <summary>设置 IISWebVirtualDirCollection.AddRange(IISWebVirtualDir[] iisvds) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.ConstructorIISWebServer">
            <summary>设置 IISWebVirtualDirCollection.IISWebVirtualDirCollection(IISWebServer Parent) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.ItemGetInt32">
            <summary>设置 IISWebVirtualDirCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.ItemGetString">
            <summary>设置 IISWebVirtualDirCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.RemoveIISWebVirtualDir">
            <summary>设置 IISWebVirtualDirCollection.Remove(IISWebVirtualDir iisvd) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AllInstances.AddIISWebVirtualDir">
            <summary>设置 IISWebVirtualDirCollection.Add(IISWebVirtualDir iisvd) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AllInstances.AddRangeIISWebVirtualDirArray">
            <summary>设置 IISWebVirtualDirCollection.AddRange(IISWebVirtualDir[] iisvds) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AllInstances.ItemGetInt32">
            <summary>设置 IISWebVirtualDirCollection.get_Item(Int32 Index) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AllInstances.ItemGetString">
            <summary>设置 IISWebVirtualDirCollection.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.ShimIISWebVirtualDirCollection.AllInstances.RemoveIISWebVirtualDir">
            <summary>设置 IISWebVirtualDirCollection.Remove(IISWebVirtualDir iisvd) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.StubHostHeader">
            <summary>Shove._Net.IIS.HostHeader 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubHostHeader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubHostHeader.InitializeStub">
            <summary>初始化 type StubHostHeader 的新实例</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubHostHeader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubHostHeader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubHostHeader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.StubIISManagement">
            <summary>Shove._Net.IIS.IISManagement 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISManagement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISManagement.InitializeStub">
            <summary>初始化 type StubIISManagement 的新实例</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISManagement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISManagement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISManagement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.StubIISWebServer">
            <summary>Shove._Net.IIS.IISWebServer 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServer.InitializeStub">
            <summary>初始化 type StubIISWebServer 的新实例</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebServer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebServer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebServer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.StubIISWebServerCollection">
            <summary>Shove._Net.IIS.IISWebServerCollection 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.InitializeStub">
            <summary>初始化 type StubIISWebServerCollection 的新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebServerCollection.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebServerCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebServerCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebServerCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.StubIISWebVirtualDir">
            <summary>Shove._Net.IIS.IISWebVirtualDir 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.#ctor(Shove._Net.IIS.IISWebServer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.InitializeStub">
            <summary>初始化 type StubIISWebVirtualDir 的新实例</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebVirtualDir.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection">
            <summary>Shove._Net.IIS.IISWebVirtualDirCollection 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.#ctor(Shove._Net.IIS.IISWebServer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.InitializeStub">
            <summary>初始化 type StubIISWebVirtualDirCollection 的新实例</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.IIS.Fakes.StubIISWebVirtualDirCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.ShimSocketService">
            <summary>Shove._Net.TCP.SocketService 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.#ctor(Shove._Net.TCP.SocketService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.Constructor">
            <summary>设置 SocketService.SocketService() 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.ShimSocketService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient">
            <summary>Shove._Net.TCP.SocketService+Client 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.#ctor(Shove._Net.TCP.SocketService.Client)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.ConnectStringRef">
            <summary>设置 Client.Connect(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.ConstructorStringInt32">
            <summary>设置 Client.Client(String hostNameOrIP, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.DisConnectStringRef">
            <summary>设置 Client.DisConnect(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.ReceiveDataStringRef">
            <summary>设置 Client.ReceiveData(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.SendDataByteArrayStringRef">
            <summary>设置 Client.SendData(Byte[] SendBuffer, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.AllInstances.ConnectStringRef">
            <summary>设置 Client.Connect(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.AllInstances.DisConnectStringRef">
            <summary>设置 Client.DisConnect(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.AllInstances.ReceiveDataStringRef">
            <summary>设置 Client.ReceiveData(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimClient.AllInstances.SendDataByteArrayStringRef">
            <summary>设置 Client.SendData(Byte[] SendBuffer, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer">
            <summary>Shove._Net.TCP.SocketService+Server 的填充码类型</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.#ctor(Shove._Net.TCP.SocketService.Server)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.ConstructorStringStringInt32ServerSocketServiceReceiveHandler">
            <summary>设置 Server.Server(String hostName, String ip, Int32 port, ReceiveHandler delegate_ReceiveHandler) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.StartStringRef">
            <summary>设置 Server.Start(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.StopStringRef">
            <summary>设置 Server.Stop(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.tcpServer_SessionCreatedObjectTCP_ServerSessionEventArgsOfTCP_ServerSession">
            <summary>设置 Server.tcpServer_SessionCreated(Object sender, TCP_ServerSessionEventArgs`1&lt;TCP_ServerSession&gt; e) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.AllInstances.StartStringRef">
            <summary>设置 Server.Start(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.AllInstances.StopStringRef">
            <summary>设置 Server.Stop(String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.ShimSocketService.ShimServer.AllInstances.tcpServer_SessionCreatedObjectTCP_ServerSessionEventArgsOfTCP_ServerSession">
            <summary>设置 Server.tcpServer_SessionCreated(Object sender, TCP_ServerSessionEventArgs`1&lt;TCP_ServerSession&gt; e) 的 填充码</summary>
        </member>
        <member name="T:Shove._Net.TCP.Fakes.StubSocketService">
            <summary>Shove._Net.TCP.SocketService 的存根类型</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.StubSocketService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Net.TCP.Fakes.StubSocketService.InitializeStub">
            <summary>初始化 type StubSocketService 的新实例</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.StubSocketService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.StubSocketService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Net.TCP.Fakes.StubSocketService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimEncrypt">
            <summary>Shove._Security.Encrypt 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimEncrypt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimEncrypt.#ctor(Shove._Security.Encrypt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimEncrypt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimEncrypt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.B3a5gTHTd8StringString">
            <summary>设置 Encrypt.B3a5gTHTd8(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.BBv5k9S3ntString">
            <summary>设置 Encrypt.BBv5k9S3nt(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.Constructor">
            <summary>设置 Encrypt.Encrypt() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.D3C5dAU7OxStringString">
            <summary>设置 Encrypt.D3C5dAU7Ox(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.Decrypt3DESStringStringString">
            <summary>设置 Encrypt.Decrypt3DES(String CallPassword, String input, String key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.DecryptAESStringStringString">
            <summary>设置 Encrypt.DecryptAES(String CallPassword, String input, String key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.DecryptSESStringStringString">
            <summary>设置 Encrypt.DecryptSES(String input, String key, String encodingName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.Encrypt3DESStringStringString">
            <summary>设置 Encrypt.Encrypt3DES(String CallPassword, String input, String key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.EncryptAESStringStringString">
            <summary>设置 Encrypt.EncryptAES(String CallPassword, String input, String key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.EncryptSESStringStringString">
            <summary>设置 Encrypt.EncryptSES(String input, String key, String encodingName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.EncryptStringStringString">
            <summary>设置 Encrypt.EncryptString(String CallPassword, String s) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.GetMachineSerialNumberStringBooleanBooleanBooleanBoolean">
            <summary>设置 Encrypt.GetMachineSerialNumber(String CallPassword, Boolean isUseBiosSerialNumber, Boolean isUseIdeDiskSerialNumber, Boolean isUseNetAdapterMacAddress, Boolean isUseCpuSerialNumber) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.LC55CiwaZt">
            <summary>设置 Encrypt.LC55CiwaZt() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.MD5String">
            <summary>设置 Encrypt.MD5(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.MD5StringEncoding">
            <summary>设置 Encrypt.MD5(String input, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.MD5StringString">
            <summary>设置 Encrypt.MD5(String input, String CharsetName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.NoUnEncryptStringStringString">
            <summary>设置 Encrypt.NoUnEncryptString(String CallPassword, String s) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.NoUnEncryptStringStringStringStringInt32Int32Int32">
            <summary>设置 Encrypt.NoUnEncryptString(String CallPassword, String SourceStr, String Marking_str, Int32 Part_Num, Int32 Part_Len, Int32 Ch_Type) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.ParamterSignatureStringObjectArray">
            <summary>设置 Encrypt.ParamterSignature(String Key, Object[] Params) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.StaticConstructor">
            <summary>设置 Encrypt.Encrypt() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.UnEncryptStringStringString">
            <summary>设置 Encrypt.UnEncryptString(String CallPassword, String d) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.Xmi5NiA4H9StringString">
            <summary>设置 Encrypt.Xmi5NiA4H9(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.bAu584jjqR">
            <summary>设置 Encrypt.bAu584jjqR() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.dAJ57w8ctNStringString">
            <summary>设置 Encrypt.dAJ57w8ctN(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.fCg5VEnueRStringString">
            <summary>设置 Encrypt.fCg5VEnueR(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.jIn5EkgJMVStringString">
            <summary>设置 Encrypt.jIn5EkgJMV(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.l9H5jV2PDiStringString">
            <summary>设置 Encrypt.l9H5jV2PDi(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.me05JUsHOHObject">
            <summary>设置 Encrypt.me05JUsHOH(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.o5Y5WeJqbYStringString">
            <summary>设置 Encrypt.o5Y5WeJqbY(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.wWC5Yw2IneStringString">
            <summary>设置 Encrypt.wWC5Yw2Ine(String  , String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimEncrypt.z4N51XuFqQStringString">
            <summary>设置 Encrypt.z4N51XuFqQ(String  , String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimEncrypt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimGetSIService">
            <summary>Shove._Security.GetSIService 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.#ctor(Shove._Security.GetSIService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimGetSIService.Bind(System.IServiceProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimGetSIService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimGetSIService.Constructor">
            <summary>设置 GetSIService.GetSIService() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimGetSIService.GetCallCert">
            <summary>设置 GetSIService.GetCallCert() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimGetSIService.GoInt32StringStringString">
            <summary>设置 GetSIService.Go(Int32 ot, String cmd, String content, String Sign) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimGetSIService.a3Y5TtyiOf">
            <summary>设置 GetSIService.a3Y5TtyiOf() 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimGetSIService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimGetSIService.AllInstances.GoInt32StringStringString">
            <summary>设置 GetSIService.Go(Int32 ot, String cmd, String content, String Sign) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimLicense">
            <summary>Shove._Security.License 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimLicense.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimLicense.#ctor(Shove._Security.License)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimLicense.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimLicense.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.Constructor">
            <summary>设置 License.License() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.PP55BYTUOa">
            <summary>设置 License.PP55BYTUOa() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.RefreshString">
            <summary>设置 License.Refresh(String license) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.StaticConstructor">
            <summary>设置 License.License() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.UpdateString">
            <summary>设置 License.Update(String license) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.getAdminPagesAllow">
            <summary>设置 License.getAdminPagesAllow() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.getAndoridAllow">
            <summary>设置 License.getAndoridAllow() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.getDomainNameAllow">
            <summary>设置 License.getDomainNameAllow() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.getWebPagesAllow">
            <summary>设置 License.getWebPagesAllow() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.getWindowsPhoneAllow">
            <summary>设置 License.getWindowsPhoneAllow() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimLicense.getiOSAllow">
            <summary>设置 License.getiOSAllow() 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimLicense.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNTFS">
            <summary>Shove._Security.NTFS 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNTFS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNTFS.#ctor(Shove._Security.NTFS)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNTFS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNTFS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.AddDirectorySecurityStringStringString">
            <summary>设置 NTFS.AddDirectorySecurity(String DirectoryName, String Account, String UserRights) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.AddFileSecurityStringStringString">
            <summary>设置 NTFS.AddFileSecurity(String FileName, String Account, String UserRights) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.Constructor">
            <summary>设置 NTFS.NTFS() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.GetDirectoryAccountSecurityString">
            <summary>设置 NTFS.GetDirectoryAccountSecurity(String DirectoryName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.GetFileAccountSecurityString">
            <summary>设置 NTFS.GetFileAccountSecurity(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.RemoveDirectoryAccountSecurityStringString">
            <summary>设置 NTFS.RemoveDirectoryAccountSecurity(String DirectoryName, String Account) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNTFS.RemoveFileAccountSecurityStringString">
            <summary>设置 NTFS.RemoveFileAccountSecurity(String FileName, String Account) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNTFS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser">
            <summary>Shove._Security.NetUser 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.#ctor(Shove._Security.NetUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.AddUserToGroupStringStringStringRef">
            <summary>设置 NetUser.AddUserToGroup(String UserName, String GroupName, String&amp; ReturnDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.Constructor">
            <summary>设置 NetUser.NetUser() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.PR35mcLjmMDirectoryEntryString">
            <summary>设置 NetUser.PR35mcLjmM(DirectoryEntry  , String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.ShimLOCALGROUP_USERS_INFO_0">
            <summary>Shove._Security.NetUser+LOCALGROUP_USERS_INFO_0 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimLOCALGROUP_USERS_INFO_0.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimLOCALGROUP_USERS_INFO_0.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimLOCALGROUP_USERS_INFO_0.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.ShimLOCALGROUP_USERS_INFO_0.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.ShimLOCALGROUP_USERS_INFO_0.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_0">
            <summary>Shove._Security.NetUser+USER_INFO_0 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_0.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_0.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_0.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_0.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_0.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_1">
            <summary>Shove._Security.NetUser+USER_INFO_1 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimNetUser.ShimUSER_INFO_1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimSes">
            <summary>Shove._Security.Ses 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimSes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimSes.#ctor(Shove._Security.Ses)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimSes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimSes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.ConstructorStringEncoding">
            <summary>设置 Ses.Ses(String key, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.ConstructorStringString">
            <summary>设置 Ses.Ses(String key, String EncodingName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.DecryptByteArrayInt32ByteArrayInt32Ref">
            <summary>设置 Ses.Decrypt(Byte[] input, Int32 len, Byte[] output, Int32&amp; DecryptResultLength) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.EncryptByteArrayByteArray">
            <summary>设置 Ses.Encrypt(Byte[] input, Byte[] output) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.GetEncryptResultLengthByteArray">
            <summary>设置 Ses.GetEncryptResultLength(Byte[] input) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.KCW5vNErriByteArrayInt32">
            <summary>设置 Ses.KCW5vNErri(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.TIv5iNWfKpByteArrayInt32">
            <summary>设置 Ses.TIv5iNWfKp(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.bbK5qd25pHByteArrayByteArray">
            <summary>设置 Ses.bbK5qd25pH(Byte[]  , Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.yyH5Z8qj3vByteArrayInt32">
            <summary>设置 Ses.yyH5Z8qj3v(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.z3x53mZZt0ByteArrayInt32">
            <summary>设置 Ses.z3x53mZZt0(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimSes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.DecryptByteArrayInt32ByteArrayInt32Ref">
            <summary>设置 Ses.Decrypt(Byte[] input, Int32 len, Byte[] output, Int32&amp; DecryptResultLength) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.EncryptByteArrayByteArray">
            <summary>设置 Ses.Encrypt(Byte[] input, Byte[] output) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.GetEncryptResultLengthByteArray">
            <summary>设置 Ses.GetEncryptResultLength(Byte[] input) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.KCW5vNErriByteArrayInt32">
            <summary>设置 Ses.KCW5vNErri(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.TIv5iNWfKpByteArrayInt32">
            <summary>设置 Ses.TIv5iNWfKp(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.bbK5qd25pHByteArrayByteArray">
            <summary>设置 Ses.bbK5qd25pH(Byte[]  , Byte[]  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.yyH5Z8qj3vByteArrayInt32">
            <summary>设置 Ses.yyH5Z8qj3v(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimSes.AllInstances.z3x53mZZt0ByteArrayInt32">
            <summary>设置 Ses.z3x53mZZt0(Byte[]  , Int32  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimStatussAuthorities">
            <summary>Shove._Security.StatussAuthorities 的填充码类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimStatussAuthorities.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimStatussAuthorities.#ctor(Shove._Security.StatussAuthorities)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimStatussAuthorities.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Security.Fakes.ShimStatussAuthorities.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.Constructor">
            <summary>设置 StatussAuthorities.StatussAuthorities() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.V2r54vGEseString">
            <summary>设置 StatussAuthorities.V2r54vGEse(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.WBc5asyQxu">
            <summary>设置 StatussAuthorities.WBc5asyQxu() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.bxi561W5GK">
            <summary>设置 StatussAuthorities.bxi561W5GK() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.hpf5HcS0VTString">
            <summary>设置 StatussAuthorities.hpf5HcS0VT(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.ShimStatussAuthorities.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.AllInstances.V2r54vGEseString">
            <summary>设置 StatussAuthorities.V2r54vGEse(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.AllInstances.WBc5asyQxu">
            <summary>设置 StatussAuthorities.WBc5asyQxu() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.AllInstances.bxi561W5GK">
            <summary>设置 StatussAuthorities.bxi561W5GK() 的 填充码</summary>
        </member>
        <member name="P:Shove._Security.Fakes.ShimStatussAuthorities.AllInstances.hpf5HcS0VTString">
            <summary>设置 StatussAuthorities.hpf5HcS0VT(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubEncrypt">
            <summary>Shove._Security.Encrypt 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubEncrypt.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubEncrypt.InitializeStub">
            <summary>初始化 type StubEncrypt 的新实例</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubEncrypt.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubEncrypt.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubEncrypt.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubGetSIService">
            <summary>Shove._Security.GetSIService 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubGetSIService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubGetSIService.AttachBackingFieldToSite">
            <summary>附加委托以将 StubGetSIService.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.ContainerGet">
            <summary>设置 MarshalByValueComponent.get_Container() 的 stub</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.DesignModeGet">
            <summary>设置 MarshalByValueComponent.get_DesignMode() 的 stub</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubGetSIService.Dispose(System.Boolean)">
            <summary>设置 MarshalByValueComponent.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.DisposeBoolean">
            <summary>设置 MarshalByValueComponent.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubGetSIService.GetService(System.Type)">
            <summary>设置 MarshalByValueComponent.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.GetServiceType">
            <summary>设置 MarshalByValueComponent.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubGetSIService.InitializeStub">
            <summary>初始化 type StubGetSIService 的新实例</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.SiteGet">
            <summary>设置 MarshalByValueComponent.get_Site() 的 stub</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.SiteSetISite">
            <summary>设置 MarshalByValueComponent.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubGetSIService.ToString">
            <summary>设置 MarshalByValueComponent.ToString() 的 存根</summary>
        </member>
        <member name="F:Shove._Security.Fakes.StubGetSIService.ToString01">
            <summary>设置 MarshalByValueComponent.ToString() 的 stub</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubGetSIService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubGetSIService.Container">
            <summary>设置 MarshalByValueComponent.get_Container() 的 stub</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubGetSIService.DesignMode">
            <summary>设置 MarshalByValueComponent.get_DesignMode() 的 stub</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubGetSIService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubGetSIService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubGetSIService.Site">
            <summary>设置 MarshalByValueComponent.get_Site() 的 stub</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubLicense">
            <summary>Shove._Security.License 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubLicense.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubLicense.InitializeStub">
            <summary>初始化 type StubLicense 的新实例</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubLicense.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubLicense.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubLicense.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubNTFS">
            <summary>Shove._Security.NTFS 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubNTFS.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubNTFS.InitializeStub">
            <summary>初始化 type StubNTFS 的新实例</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubNTFS.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubNTFS.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubNTFS.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubNetUser">
            <summary>Shove._Security.NetUser 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubNetUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubNetUser.InitializeStub">
            <summary>初始化 type StubNetUser 的新实例</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubNetUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubNetUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubNetUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubSes">
            <summary>Shove._Security.Ses 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubSes.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubSes.#ctor(System.String,System.Text.Encoding)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubSes.InitializeStub">
            <summary>初始化 type StubSes 的新实例</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubSes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubSes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubSes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Security.Fakes.StubStatussAuthorities">
            <summary>Shove._Security.StatussAuthorities 的存根类型</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubStatussAuthorities.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Security.Fakes.StubStatussAuthorities.InitializeStub">
            <summary>初始化 type StubStatussAuthorities 的新实例</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubStatussAuthorities.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubStatussAuthorities.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Security.Fakes.StubStatussAuthorities.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._System.Device.Fakes.ShimCameraWorker">
            <summary>Shove._System.Device.CameraWorker 的填充码类型</summary>
        </member>
        <member name="M:Shove._System.Device.Fakes.ShimCameraWorker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._System.Device.Fakes.ShimCameraWorker.#ctor(Shove._System.Device.CameraWorker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._System.Device.Fakes.ShimCameraWorker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._System.Device.Fakes.ShimCameraWorker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.CaptureString">
            <summary>设置 CameraWorker.Capture(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.Close">
            <summary>设置 CameraWorker.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.ConstructorIntPtrInt32Int32Int32Int32">
            <summary>设置 CameraWorker.CameraWorker(IntPtr handle, Int32 left, Int32 top, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.Open">
            <summary>设置 CameraWorker.Open() 的 填充码</summary>
        </member>
        <member name="T:Shove._System.Device.Fakes.ShimCameraWorker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.AllInstances.CaptureString">
            <summary>设置 CameraWorker.Capture(String FileName) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.AllInstances.Close">
            <summary>设置 CameraWorker.Close() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.ShimCameraWorker.AllInstances.Open">
            <summary>设置 CameraWorker.Open() 的 填充码</summary>
        </member>
        <member name="T:Shove._System.Device.Fakes.StubCameraWorker">
            <summary>Shove._System.Device.CameraWorker 的存根类型</summary>
        </member>
        <member name="M:Shove._System.Device.Fakes.StubCameraWorker.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._System.Device.Fakes.StubCameraWorker.InitializeStub">
            <summary>初始化 type StubCameraWorker 的新实例</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.StubCameraWorker.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.StubCameraWorker.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._System.Device.Fakes.StubCameraWorker.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._System.DynamicCode.Fakes.ShimCShap">
            <summary>Shove._System.DynamicCode.CShap 的填充码类型</summary>
        </member>
        <member name="M:Shove._System.DynamicCode.Fakes.ShimCShap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._System.DynamicCode.Fakes.ShimCShap.#ctor(Shove._System.DynamicCode.CShap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._System.DynamicCode.Fakes.ShimCShap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._System.DynamicCode.Fakes.ShimCShap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.ShimCShap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.ShimCShap.CompileStringIListOfStringRefStringArray">
            <summary>设置 CShap.Compile(String Code, IList`1&lt;String&gt;&amp; ErrorList, String[] dll_ReferencedAssemblies) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.ShimCShap.Constructor">
            <summary>设置 CShap.CShap() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.ShimCShap.ExecuteClassStringStringStringIListOfStringStringArray">
            <summary>设置 CShap.ExecuteClass(String ClassCode, String ClassFullName, String EntryMethodName, IList`1&lt;String&gt; ErrorList, String[] dll_ReferencedAssemblies) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.ShimCShap.ExecuteCodeBlockStringIListOfStringRefStringStringArray">
            <summary>设置 CShap.ExecuteCodeBlock(String CodeBlock, IList`1&lt;String&gt;&amp; ErrorList, String using_NameSpaces, String[] dll_ReferencedAssemblies) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.ShimCShap.f2x59haRRfStringString">
            <summary>设置 CShap.f2x59haRRf(String  , String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._System.DynamicCode.Fakes.ShimCShap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._System.DynamicCode.Fakes.StubCShap">
            <summary>Shove._System.DynamicCode.CShap 的存根类型</summary>
        </member>
        <member name="M:Shove._System.DynamicCode.Fakes.StubCShap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._System.DynamicCode.Fakes.StubCShap.InitializeStub">
            <summary>初始化 type StubCShap 的新实例</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.StubCShap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.StubCShap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._System.DynamicCode.Fakes.StubCShap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._System.Fakes.ShimProcesses">
            <summary>Shove._System.Processes 的填充码类型</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimProcesses.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimProcesses.#ctor(Shove._System.Processes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimProcesses.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimProcesses.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.Constructor">
            <summary>设置 Processes.Processes() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.ExecuteConsoleCommandString">
            <summary>设置 Processes.ExecuteConsoleCommand(String cmd) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.GetServiceString">
            <summary>设置 Processes.GetService(String ServiceName) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.KillProcessesString">
            <summary>设置 Processes.KillProcesses(String ProcessesName) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.StartServiceServiceController">
            <summary>设置 Processes.StartService(ServiceController sc) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.StartServiceString">
            <summary>设置 Processes.StartService(String ServiceName) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.StopServiceServiceController">
            <summary>设置 Processes.StopService(ServiceController sc) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimProcesses.StopServiceString">
            <summary>设置 Processes.StopService(String ServiceName) 的 填充码</summary>
        </member>
        <member name="T:Shove._System.Fakes.ShimProcesses.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._System.Fakes.ShimSystemInformation">
            <summary>Shove._System.SystemInformation 的填充码类型</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimSystemInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimSystemInformation.#ctor(Shove._System.SystemInformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimSystemInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._System.Fakes.ShimSystemInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.Constructor">
            <summary>设置 SystemInformation.SystemInformation() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.GetBIOSSerialNumber">
            <summary>设置 SystemInformation.GetBIOSSerialNumber() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.GetCPUSerialNumber">
            <summary>设置 SystemInformation.GetCPUSerialNumber() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.GetHardDiskSerialNumber">
            <summary>设置 SystemInformation.GetHardDiskSerialNumber() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.GetNetCardMACAddress">
            <summary>设置 SystemInformation.GetNetCardMACAddress() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.GetNetCardMACAddresss">
            <summary>设置 SystemInformation.GetNetCardMACAddresss() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.ShimSystemInformation.GetWMIInfoStringString">
            <summary>设置 SystemInformation.GetWMIInfo(String sInfoType, String sWin32_Database) 的 填充码</summary>
        </member>
        <member name="T:Shove._System.Fakes.ShimSystemInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._System.Fakes.Shim_Screen">
            <summary>Shove._System._Screen 的填充码类型</summary>
        </member>
        <member name="M:Shove._System.Fakes.Shim_Screen.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._System.Fakes.Shim_Screen.#ctor(Shove._System._Screen)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._System.Fakes.Shim_Screen.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._System.Fakes.Shim_Screen.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.Shim_Screen.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.Shim_Screen.CaptureScreen">
            <summary>设置 _Screen.CaptureScreen() 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.Shim_Screen.CaptureScreenToFileStringImageFormat">
            <summary>设置 _Screen.CaptureScreenToFile(String filename, ImageFormat format) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.Shim_Screen.CaptureWindowIntPtr">
            <summary>设置 _Screen.CaptureWindow(IntPtr handle) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.Shim_Screen.CaptureWindowToFileIntPtrStringImageFormat">
            <summary>设置 _Screen.CaptureWindowToFile(IntPtr handle, String filename, ImageFormat format) 的 填充码</summary>
        </member>
        <member name="P:Shove._System.Fakes.Shim_Screen.Constructor">
            <summary>设置 _Screen._Screen() 的 填充码</summary>
        </member>
        <member name="T:Shove._System.Fakes.Shim_Screen.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._System.Fakes.StubProcesses">
            <summary>Shove._System.Processes 的存根类型</summary>
        </member>
        <member name="M:Shove._System.Fakes.StubProcesses.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._System.Fakes.StubProcesses.InitializeStub">
            <summary>初始化 type StubProcesses 的新实例</summary>
        </member>
        <member name="P:Shove._System.Fakes.StubProcesses.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.StubProcesses.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._System.Fakes.StubProcesses.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._System.Fakes.StubSystemInformation">
            <summary>Shove._System.SystemInformation 的存根类型</summary>
        </member>
        <member name="M:Shove._System.Fakes.StubSystemInformation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._System.Fakes.StubSystemInformation.InitializeStub">
            <summary>初始化 type StubSystemInformation 的新实例</summary>
        </member>
        <member name="P:Shove._System.Fakes.StubSystemInformation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.StubSystemInformation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._System.Fakes.StubSystemInformation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._System.Fakes.Stub_Screen">
            <summary>Shove._System._Screen 的存根类型</summary>
        </member>
        <member name="M:Shove._System.Fakes.Stub_Screen.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._System.Fakes.Stub_Screen.InitializeStub">
            <summary>初始化 type Stub_Screen 的新实例</summary>
        </member>
        <member name="P:Shove._System.Fakes.Stub_Screen.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._System.Fakes.Stub_Screen.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._System.Fakes.Stub_Screen.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimCache">
            <summary>Shove._Web.Cache 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimCache.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimCache.#ctor(Shove._Web.Cache)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimCache.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimCache.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.ClearCacheHttpContextString">
            <summary>设置 Cache.ClearCache(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.ClearCacheString">
            <summary>设置 Cache.ClearCache(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.Constructor">
            <summary>设置 Cache.Cache() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsBooleanHttpContextStringBoolean">
            <summary>设置 Cache.GetCacheAsBoolean(HttpContext context, String Key, Boolean Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsBooleanStringBoolean">
            <summary>设置 Cache.GetCacheAsBoolean(String Key, Boolean Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsDataSetHttpContextString">
            <summary>设置 Cache.GetCacheAsDataSet(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsDataSetString">
            <summary>设置 Cache.GetCacheAsDataSet(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsDataTableHttpContextString">
            <summary>设置 Cache.GetCacheAsDataTable(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsDataTableString">
            <summary>设置 Cache.GetCacheAsDataTable(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsIntHttpContextStringInt32">
            <summary>设置 Cache.GetCacheAsInt(HttpContext context, String Key, Int32 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsIntStringInt32">
            <summary>设置 Cache.GetCacheAsInt(String Key, Int32 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsLongHttpContextStringInt64">
            <summary>设置 Cache.GetCacheAsLong(HttpContext context, String Key, Int64 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsLongStringInt64">
            <summary>设置 Cache.GetCacheAsLong(String Key, Int64 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsStringHttpContextStringString">
            <summary>设置 Cache.GetCacheAsString(HttpContext context, String Key, String Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheAsStringStringString">
            <summary>设置 Cache.GetCacheAsString(String Key, String Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheHttpContextString">
            <summary>设置 Cache.GetCache(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.GetCacheString">
            <summary>设置 Cache.GetCache(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.SetCacheHttpContextStringObject">
            <summary>设置 Cache.SetCache(HttpContext context, String Key, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.SetCacheHttpContextStringObjectInt32">
            <summary>设置 Cache.SetCache(HttpContext context, String Key, Object Value, Int32 CacheSeconds) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.SetCacheStringObject">
            <summary>设置 Cache.SetCache(String Key, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimCache.SetCacheStringObjectInt32">
            <summary>设置 Cache.SetCache(String Key, Object Value, Int32 CacheSeconds) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimCache.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimIIS">
            <summary>Shove._Web.IIS 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.#ctor(Shove._Web.IIS)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AddHostHeaderInt64StringStringString">
            <summary>设置 IIS.AddHostHeader(Int64 SiteNum, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AddHostHeaderStringStringStringString">
            <summary>设置 IIS.AddHostHeader(String SiteName, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.Constructor">
            <summary>设置 IIS.IIS() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.CreateApplicationPoolStringInt32">
            <summary>设置 IIS.CreateApplicationPool(String PoolName, Int32 PeriodicRestartTime) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.CreateWebSiteIISSiteInfo">
            <summary>设置 IIS.CreateWebSite(SiteInfo siteInfo) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.DeleteHostHeaderInt64StringStringString">
            <summary>设置 IIS.DeleteHostHeader(Int64 SiteNum, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.DeleteHostHeaderStringStringStringString">
            <summary>设置 IIS.DeleteHostHeader(String SiteName, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.DeleteWebSiteByNameString">
            <summary>设置 IIS.DeleteWebSiteByName(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.EnsureNewSiteEnavaibleString">
            <summary>设置 IIS.EnsureNewSiteEnavaible(String bindStr) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.GetApplicationPools">
            <summary>设置 IIS.GetApplicationPools() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.GetDirectoryEntryString">
            <summary>设置 IIS.GetDirectoryEntry(String EntryPath) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.GetNewWebSiteID">
            <summary>设置 IIS.GetNewWebSiteID() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.GetWebSiteNumString">
            <summary>设置 IIS.GetWebSiteNum(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.HostNameGet">
            <summary>设置 IIS.get_HostName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.HostNameSetString">
            <summary>设置 IIS.set_HostName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.PasswordGet">
            <summary>设置 IIS.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.PasswordSetString">
            <summary>设置 IIS.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.RemoteConfigStringStringString">
            <summary>设置 IIS.RemoteConfig(String hostName, String userName, String password) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.RestartApplicationPoolStringIISApplicationPoolOperateType">
            <summary>设置 IIS.RestartApplicationPool(String applicationPoolName, ApplicationPoolOperateType OperateType) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.StartWebSiteString">
            <summary>设置 IIS.StartWebSite(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.StopWebSiteString">
            <summary>设置 IIS.StopWebSite(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.UserNameGet">
            <summary>设置 IIS.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.UserNameSetString">
            <summary>设置 IIS.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimIIS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.AddHostHeaderInt64StringStringString">
            <summary>设置 IIS.AddHostHeader(Int64 SiteNum, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.AddHostHeaderStringStringStringString">
            <summary>设置 IIS.AddHostHeader(String SiteName, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.CreateApplicationPoolStringInt32">
            <summary>设置 IIS.CreateApplicationPool(String PoolName, Int32 PeriodicRestartTime) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.CreateWebSiteIISSiteInfo">
            <summary>设置 IIS.CreateWebSite(SiteInfo siteInfo) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.DeleteHostHeaderInt64StringStringString">
            <summary>设置 IIS.DeleteHostHeader(Int64 SiteNum, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.DeleteHostHeaderStringStringStringString">
            <summary>设置 IIS.DeleteHostHeader(String SiteName, String IPAddress, String Port, String Url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.DeleteWebSiteByNameString">
            <summary>设置 IIS.DeleteWebSiteByName(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.EnsureNewSiteEnavaibleString">
            <summary>设置 IIS.EnsureNewSiteEnavaible(String bindStr) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.GetApplicationPools">
            <summary>设置 IIS.GetApplicationPools() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.GetDirectoryEntryString">
            <summary>设置 IIS.GetDirectoryEntry(String EntryPath) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.GetNewWebSiteID">
            <summary>设置 IIS.GetNewWebSiteID() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.GetWebSiteNumString">
            <summary>设置 IIS.GetWebSiteNum(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.HostNameGet">
            <summary>设置 IIS.get_HostName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.HostNameSetString">
            <summary>设置 IIS.set_HostName(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.PasswordGet">
            <summary>设置 IIS.get_Password() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.PasswordSetString">
            <summary>设置 IIS.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.RemoteConfigStringStringString">
            <summary>设置 IIS.RemoteConfig(String hostName, String userName, String password) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.RestartApplicationPoolStringIISApplicationPoolOperateType">
            <summary>设置 IIS.RestartApplicationPool(String applicationPoolName, ApplicationPoolOperateType OperateType) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.StartWebSiteString">
            <summary>设置 IIS.StartWebSite(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.StopWebSiteString">
            <summary>设置 IIS.StopWebSite(String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.UserNameGet">
            <summary>设置 IIS.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.AllInstances.UserNameSetString">
            <summary>设置 IIS.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimIIS.ShimSiteInfo">
            <summary>Shove._Web.IIS+SiteInfo 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.ShimSiteInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.ShimSiteInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimIIS.ShimSiteInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimIIS.ShimSiteInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimIIS.ShimSiteInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimJavaScript">
            <summary>Shove._Web.JavaScript 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimJavaScript.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimJavaScript.#ctor(Shove._Web.JavaScript)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimJavaScript.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimJavaScript.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.AddFavoritePageStringString">
            <summary>设置 JavaScript.AddFavorite(Page page, String url, String SiteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.AlertPageString">
            <summary>设置 JavaScript.Alert(Page page, String Msg) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.AlertPageStringString">
            <summary>设置 JavaScript.Alert(Page page, String Msg, String RedirectUrl) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.AlertPageStringStringString">
            <summary>设置 JavaScript.Alert(Page page, String Msg, String RedirectUrl, String FrameName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.ClosePagePage">
            <summary>设置 JavaScript.ClosePage(Page page) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.Constructor">
            <summary>设置 JavaScript.JavaScript() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.OpenModalWindowPageString">
            <summary>设置 JavaScript.OpenModalWindow(Page page, String url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.OpenModalWindowPageStringInt32Int32">
            <summary>设置 JavaScript.OpenModalWindow(Page page, String url, Int32 width, Int32 height) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.OpenModalWindowPageStringInt32Int32Int32Int32">
            <summary>设置 JavaScript.OpenModalWindow(Page page, String url, Int32 width, Int32 height, Int32 top, Int32 left) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.OpenWindowPageString">
            <summary>设置 JavaScript.OpenWindow(Page page, String url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.PopupWindowPageString">
            <summary>设置 JavaScript.PopupWindow(Page page, String url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.PopupWindowPageStringInt32Int32Int32Int32">
            <summary>设置 JavaScript.PopupWindow(Page page, String url, Int32 width, Int32 height, Int32 top, Int32 left) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.RefreshFramePageString">
            <summary>设置 JavaScript.RefreshFrame(Page page, String FrameName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.SetHomePagePageString">
            <summary>设置 JavaScript.SetHomePage(Page page, String url) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimJavaScript.SetWindowSizePageInt32Int32">
            <summary>设置 JavaScript.SetWindowSize(Page page, Int32 x, Int32 y) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimJavaScript.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimSession">
            <summary>Shove._Web.Session 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.#ctor(Shove._Web.Session)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ClearSessionHttpContextString">
            <summary>设置 Session.ClearSession(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ClearSessionString">
            <summary>设置 Session.ClearSession(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.Constructor">
            <summary>设置 Session.Session() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsBooleanHttpContextStringBoolean">
            <summary>设置 Session.GetSessionAsBoolean(HttpContext context, String Key, Boolean Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsBooleanStringBoolean">
            <summary>设置 Session.GetSessionAsBoolean(String Key, Boolean Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsDataSetHttpContextString">
            <summary>设置 Session.GetSessionAsDataSet(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsDataSetString">
            <summary>设置 Session.GetSessionAsDataSet(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsDataTableHttpContextString">
            <summary>设置 Session.GetSessionAsDataTable(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsDataTableString">
            <summary>设置 Session.GetSessionAsDataTable(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsIntHttpContextStringInt32">
            <summary>设置 Session.GetSessionAsInt(HttpContext context, String Key, Int32 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsIntStringInt32">
            <summary>设置 Session.GetSessionAsInt(String Key, Int32 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsLongHttpContextStringInt64">
            <summary>设置 Session.GetSessionAsLong(HttpContext context, String Key, Int64 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsLongStringInt64">
            <summary>设置 Session.GetSessionAsLong(String Key, Int64 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsStringHttpContextStringString">
            <summary>设置 Session.GetSessionAsString(HttpContext context, String Key, String Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionAsStringStringString">
            <summary>设置 Session.GetSessionAsString(String Key, String Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionHttpContextString">
            <summary>设置 Session.GetSession(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.GetSessionString">
            <summary>设置 Session.GetSession(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.SetSessionHttpContextStringObject">
            <summary>设置 Session.SetSession(HttpContext context, String Key, Object Value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.SetSessionStringObject">
            <summary>设置 Session.SetSession(String Key, Object Value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimSession.ShimSQLServerSession">
            <summary>Shove._Web.Session+SQLServerSession 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.#ctor(Shove._Web.Session.SQLServerSession)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.ConstructorStringStringInt32">
            <summary>设置 SQLServerSession.SQLServerSession(String _ConnectionString, String _SessionID, Int32 _TimeOut) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.ItemGetString">
            <summary>设置 SQLServerSession.get_Item(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.ItemSetStringObject">
            <summary>设置 SQLServerSession.set_Item(String Key, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.AllInstances.ItemGetString">
            <summary>设置 SQLServerSession.get_Item(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimSession.ShimSQLServerSession.AllInstances.ItemSetStringObject">
            <summary>设置 SQLServerSession.set_Item(String Key, Object value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimUtility">
            <summary>Shove._Web.Utility 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimUtility.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimUtility.#ctor(Shove._Web.Utility)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimUtility.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimUtility.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.BuildUrlParamtersAndSignatureStringArrayStringString">
            <summary>设置 Utility.BuildUrlParamtersAndSignature(String[] Paramters, String Key, String SignatureParamteName) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.Constructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.E26lRBJFqMatch">
            <summary>设置 Utility.E26lRBJFq(Match  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.F7M20XsAL">
            <summary>设置 Utility.F7M20XsAL() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.FilteSqlInfusionString">
            <summary>设置 Utility.FilteSqlInfusion(String input) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.FilteSqlInfusionStringBoolean">
            <summary>设置 Utility.FilteSqlInfusion(String input, Boolean ReplaceSingleQuoteMark) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetPageFileName">
            <summary>设置 Utility.GetPageFileName() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetPageFileNameHttpContext">
            <summary>设置 Utility.GetPageFileName(HttpContext context) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetRequestHttpContextString">
            <summary>设置 Utility.GetRequest(HttpContext context, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetRequestKeyAndSort">
            <summary>设置 Utility.GetRequestKeyAndSort() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetRequestString">
            <summary>设置 Utility.GetRequest(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetUrl">
            <summary>设置 Utility.GetUrl() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetUrlHttpContext">
            <summary>设置 Utility.GetUrl(HttpContext context) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetUrlParamtersAndVasidSignatureStringStringStringRef">
            <summary>设置 Utility.GetUrlParamtersAndVasidSignature(String Key, String SignatureParamteName, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetUrlWithoutHttp">
            <summary>设置 Utility.GetUrlWithoutHttp() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.GetUrlWithoutHttpHttpContext">
            <summary>设置 Utility.GetUrlWithoutHttp(HttpContext context) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.PostStringStringInt32">
            <summary>设置 Utility.Post(String Url, String encodeing, Int32 TimeoutSeconds) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.StaticConstructor">
            <summary>设置 Utility.Utility() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimUtility.icgsG5ThVStringArrayChar">
            <summary>设置 Utility.icgsG5ThV(String[]  , Char  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimUtility.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimWebConfig">
            <summary>Shove._Web.WebConfig 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebConfig.#ctor(Shove._Web.WebConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.Constructor">
            <summary>设置 WebConfig.WebConfig() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsBoolString">
            <summary>设置 WebConfig.GetAppSettingsBool(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsBoolStringBoolean">
            <summary>设置 WebConfig.GetAppSettingsBool(String Key, Boolean Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsDoubleString">
            <summary>设置 WebConfig.GetAppSettingsDouble(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsDoubleStringDouble">
            <summary>设置 WebConfig.GetAppSettingsDouble(String Key, Double Defalut) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsIntString">
            <summary>设置 WebConfig.GetAppSettingsInt(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsIntStringInt32">
            <summary>设置 WebConfig.GetAppSettingsInt(String Key, Int32 Default) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetAppSettingsStringString">
            <summary>设置 WebConfig.GetAppSettingsString(String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetConfigDecimalStringString">
            <summary>设置 WebConfig.GetConfigDecimal(String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetConfigIntStringString">
            <summary>设置 WebConfig.GetConfigInt(String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.GetConfigStringStringString">
            <summary>设置 WebConfig.GetConfigString(String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.RemoveSectionKeyStringString">
            <summary>设置 WebConfig.RemoveSectionKey(String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.RemoveSectionKeyStringStringString">
            <summary>设置 WebConfig.RemoveSectionKey(String ConfigFileName, String SectionName, String Key) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.SetConfigKeyValueStringStringString">
            <summary>设置 WebConfig.SetConfigKeyValue(String SectionName, String Key, String Value) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebConfig.SetConfigKeyValueStringStringStringString">
            <summary>设置 WebConfig.SetConfigKeyValue(String ConfigFileName, String SectionName, String Key, String Value) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimWebConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimWebServiceCallResult">
            <summary>Shove._Web.WebServiceCallResult 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebServiceCallResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebServiceCallResult.#ctor(Shove._Web.WebServiceCallResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebServiceCallResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Fakes.ShimWebServiceCallResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.Constructor">
            <summary>设置 WebServiceCallResult.WebServiceCallResult() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.ConstructorInt64">
            <summary>设置 WebServiceCallResult.WebServiceCallResult(Int64 result) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.ConstructorInt64String">
            <summary>设置 WebServiceCallResult.WebServiceCallResult(Int64 result, String description) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.ConstructorInt64StringObjectArray">
            <summary>设置 WebServiceCallResult.WebServiceCallResult(Int64 result, String description, Object[] additional) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.DeserializeByteArray">
            <summary>设置 WebServiceCallResult.Deserialize(Byte[] Buffer) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.Serialize">
            <summary>设置 WebServiceCallResult.Serialize() 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.ShimWebServiceCallResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.AllInstances.DeserializeByteArray">
            <summary>设置 WebServiceCallResult.Deserialize(Byte[] Buffer) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Fakes.ShimWebServiceCallResult.AllInstances.Serialize">
            <summary>设置 WebServiceCallResult.Serialize() 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Fakes.StubCache">
            <summary>Shove._Web.Cache 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubCache.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubCache.InitializeStub">
            <summary>初始化 type StubCache 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubCache.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubCache.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubCache.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Fakes.StubIIS">
            <summary>Shove._Web.IIS 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubIIS.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubIIS.InitializeStub">
            <summary>初始化 type StubIIS 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubIIS.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubIIS.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubIIS.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Fakes.StubJavaScript">
            <summary>Shove._Web.JavaScript 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubJavaScript.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubJavaScript.InitializeStub">
            <summary>初始化 type StubJavaScript 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubJavaScript.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubJavaScript.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubJavaScript.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Fakes.StubSession">
            <summary>Shove._Web.Session 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubSession.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubSession.InitializeStub">
            <summary>初始化 type StubSession 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubSession.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubSession.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubSession.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Fakes.StubUtility">
            <summary>Shove._Web.Utility 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubUtility.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubUtility.InitializeStub">
            <summary>初始化 type StubUtility 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubUtility.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubUtility.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubUtility.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Fakes.StubWebServiceCallResult">
            <summary>Shove._Web.WebServiceCallResult 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubWebServiceCallResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubWebServiceCallResult.#ctor(System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubWebServiceCallResult.#ctor(System.Int64,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubWebServiceCallResult.#ctor(System.Int64,System.String,System.Object[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Fakes.StubWebServiceCallResult.InitializeStub">
            <summary>初始化 type StubWebServiceCallResult 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubWebServiceCallResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubWebServiceCallResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Fakes.StubWebServiceCallResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.ShimCloudSign">
            <summary>Shove._Web.Security.CloudSign 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimCloudSign.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimCloudSign.#ctor(Shove._Web.Security.CloudSign)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimCloudSign.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimCloudSign.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimCloudSign.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimCloudSign.Constructor">
            <summary>设置 CloudSign.CloudSign() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimCloudSign.JL9Kt8EOQQ">
            <summary>设置 CloudSign.JL9Kt8EOQQ() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimCloudSign.StaticConstructor">
            <summary>设置 CloudSign.CloudSign() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimCloudSign.putDataInt32Int32StringStringRefStringRef">
            <summary>设置 CloudSign.putData(Int32 eid, Int32 did, String d, String&amp; cs, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimCloudSign.verifyDataInt32Int32StringStringStringRef">
            <summary>设置 CloudSign.verifyData(Int32 eid, Int32 did, String d, String cs, String&amp; errorDescription) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.ShimCloudSign.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.ShimInjectionInterceptor">
            <summary>Shove._Web.Security.InjectionInterceptor 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptor.#ctor(Shove._Web.Security.InjectionInterceptor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.AGyKrTwvgBRegexBoolean">
            <summary>设置 InjectionInterceptor.AGyKrTwvgB(Regex  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.Constructor">
            <summary>设置 InjectionInterceptor.InjectionInterceptor() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.Run">
            <summary>设置 InjectionInterceptor.Run() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.StaticConstructor">
            <summary>设置 InjectionInterceptor.InjectionInterceptor() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.Ty8Kl31PmuRegexBoolean">
            <summary>设置 InjectionInterceptor.Ty8Kl31Pmu(Regex  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.btKKsTAdx9RegexBoolean">
            <summary>设置 InjectionInterceptor.btKKsTAdx9(Regex  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.dKYKQWLZwUString">
            <summary>设置 InjectionInterceptor.dKYKQWLZwU(String  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.hfqKFxmATSRegexBoolean">
            <summary>设置 InjectionInterceptor.hfqKFxmATS(Regex  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.s3MKfOPdyZRegexBoolean">
            <summary>设置 InjectionInterceptor.s3MKfOPdyZ(Regex  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptor.vCNKUO1HPPRegexStringBoolean">
            <summary>设置 InjectionInterceptor.vCNKUO1HPP(Regex  , String  , Boolean  ) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.ShimInjectionInterceptor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler">
            <summary>Shove._Web.Security.InjectionInterceptorSettingConfigurationSectionHandler 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.#ctor(Shove._Web.Security.InjectionInterceptorSettingConfigurationSectionHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.Bind(System.Configuration.IConfigurationSectionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.Constructor">
            <summary>设置 InjectionInterceptorSettingConfigurationSectionHandler.InjectionInterceptorSettingConfigurationSectionHandler() 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.CreateObjectObjectXmlNode">
            <summary>设置 InjectionInterceptorSettingConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.ShimInjectionInterceptorSettingConfigurationSectionHandler.AllInstances.CreateObjectObjectXmlNode">
            <summary>设置 InjectionInterceptorSettingConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section) 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.StubCloudSign">
            <summary>Shove._Web.Security.CloudSign 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.StubCloudSign.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.StubCloudSign.InitializeStub">
            <summary>初始化 type StubCloudSign 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubCloudSign.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubCloudSign.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubCloudSign.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.StubInjectionInterceptor">
            <summary>Shove._Web.Security.InjectionInterceptor 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.StubInjectionInterceptor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.StubInjectionInterceptor.InitializeStub">
            <summary>初始化 type StubInjectionInterceptor 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubInjectionInterceptor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubInjectionInterceptor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubInjectionInterceptor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Security.Fakes.StubInjectionInterceptorSettingConfigurationSectionHandler">
            <summary>Shove._Web.Security.InjectionInterceptorSettingConfigurationSectionHandler 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.StubInjectionInterceptorSettingConfigurationSectionHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Security.Fakes.StubInjectionInterceptorSettingConfigurationSectionHandler.InitializeStub">
            <summary>初始化 type StubInjectionInterceptorSettingConfigurationSectionHandler 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubInjectionInterceptorSettingConfigurationSectionHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubInjectionInterceptorSettingConfigurationSectionHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Security.Fakes.StubInjectionInterceptorSettingConfigurationSectionHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot">
            <summary>Shove._Web.Snapshot.WebPageSnapshot 的填充码类型</summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.#ctor(Shove._Web.Snapshot.WebPageSnapshot)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.CaptureStringImageFormatStringRef">
            <summary>设置 WebPageSnapshot.Capture(String TargetFileFullName, ImageFormat imageFormat, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.CaptureStringStringRef">
            <summary>设置 WebPageSnapshot.Capture(String TargetFileFullName, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.ConstructorStringInt32Int32">
            <summary>设置 WebPageSnapshot.WebPageSnapshot(String Url, Int32 Width, Int32 Height) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.M0HkFFWVY">
            <summary>设置 WebPageSnapshot.M0HkFFWVY() 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.AllInstances.CaptureStringImageFormatStringRef">
            <summary>设置 WebPageSnapshot.Capture(String TargetFileFullName, ImageFormat imageFormat, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.AllInstances.CaptureStringStringRef">
            <summary>设置 WebPageSnapshot.Capture(String TargetFileFullName, String&amp; ErrorDescription) 的 填充码</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.ShimWebPageSnapshot.AllInstances.M0HkFFWVY">
            <summary>设置 WebPageSnapshot.M0HkFFWVY() 的 填充码</summary>
        </member>
        <member name="T:Shove._Web.Snapshot.Fakes.StubWebPageSnapshot">
            <summary>Shove._Web.Snapshot.WebPageSnapshot 的存根类型</summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Fakes.StubWebPageSnapshot.#ctor(System.String,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Fakes.StubWebPageSnapshot.InitializeStub">
            <summary>初始化 type StubWebPageSnapshot 的新实例</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.StubWebPageSnapshot.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.StubWebPageSnapshot.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove._Web.Snapshot.Fakes.StubWebPageSnapshot.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Shove.com_shovesoft_icp.Fakes.ShimGateway">
            <summary>Shove.com_shovesoft_icp.Gateway 的填充码类型</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimGateway.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimGateway.#ctor(Shove.com_shovesoft_icp.Gateway)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimGateway.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimGateway.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimGateway.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimGateway.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.CancelAsyncObject">
            <summary>设置 Gateway.CancelAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.Constructor">
            <summary>设置 Gateway.Gateway() 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.IcpBeianQueryRealTimeAsyncStringString">
            <summary>设置 Gateway.IcpBeianQueryRealTimeAsync(String WhoAreYou, String DomainName) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.IcpBeianQueryRealTimeAsyncStringStringObject">
            <summary>设置 Gateway.IcpBeianQueryRealTimeAsync(String WhoAreYou, String DomainName, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.IcpBeianQueryRealTimeCompletedAddIcpBeianQueryRealTimeCompletedEventHandler">
            <summary>设置 Gateway.add_IcpBeianQueryRealTimeCompleted(IcpBeianQueryRealTimeCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.IcpBeianQueryRealTimeCompletedRemoveIcpBeianQueryRealTimeCompletedEventHandler">
            <summary>设置 Gateway.remove_IcpBeianQueryRealTimeCompleted(IcpBeianQueryRealTimeCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.IcpBeianQueryRealTimeStringString">
            <summary>设置 Gateway.IcpBeianQueryRealTime(String WhoAreYou, String DomainName) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.UrlGet">
            <summary>设置 Gateway.get_Url() 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.UrlSetString">
            <summary>设置 Gateway.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.UseDefaultCredentialsGet">
            <summary>设置 Gateway.get_UseDefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.UseDefaultCredentialsSetBoolean">
            <summary>设置 Gateway.set_UseDefaultCredentials(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.VH7KzXdf3EObject">
            <summary>设置 Gateway.VH7KzXdf3E(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.sV45LDfnADString">
            <summary>设置 Gateway.sV45LDfnAD(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.CancelAsyncObject">
            <summary>设置 Gateway.CancelAsync(Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.IcpBeianQueryRealTimeAsyncStringString">
            <summary>设置 Gateway.IcpBeianQueryRealTimeAsync(String WhoAreYou, String DomainName) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.IcpBeianQueryRealTimeAsyncStringStringObject">
            <summary>设置 Gateway.IcpBeianQueryRealTimeAsync(String WhoAreYou, String DomainName, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.IcpBeianQueryRealTimeCompletedAddIcpBeianQueryRealTimeCompletedEventHandler">
            <summary>设置 Gateway.add_IcpBeianQueryRealTimeCompleted(IcpBeianQueryRealTimeCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.IcpBeianQueryRealTimeCompletedRemoveIcpBeianQueryRealTimeCompletedEventHandler">
            <summary>设置 Gateway.remove_IcpBeianQueryRealTimeCompleted(IcpBeianQueryRealTimeCompletedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.IcpBeianQueryRealTimeStringString">
            <summary>设置 Gateway.IcpBeianQueryRealTime(String WhoAreYou, String DomainName) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.UrlGet">
            <summary>设置 Gateway.get_Url() 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.UrlSetString">
            <summary>设置 Gateway.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.UseDefaultCredentialsGet">
            <summary>设置 Gateway.get_UseDefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.UseDefaultCredentialsSetBoolean">
            <summary>设置 Gateway.set_UseDefaultCredentials(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.VH7KzXdf3EObject">
            <summary>设置 Gateway.VH7KzXdf3E(Object  ) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimGateway.AllInstances.sV45LDfnADString">
            <summary>设置 Gateway.sV45LDfnAD(String  ) 的 填充码</summary>
        </member>
        <member name="T:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs">
            <summary>Shove.com_shovesoft_icp.IcpBeianQueryRealTimeCompletedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.#ctor(Shove.com_shovesoft_icp.IcpBeianQueryRealTimeCompletedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.ConstructorObjectArrayExceptionBooleanObject">
            <summary>设置 IcpBeianQueryRealTimeCompletedEventArgs.IcpBeianQueryRealTimeCompletedEventArgs(Object[] results, Exception exception, Boolean cancelled, Object userState) 的 填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.ResultGet">
            <summary>设置 IcpBeianQueryRealTimeCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.ShimIcpBeianQueryRealTimeCompletedEventArgs.AllInstances.ResultGet">
            <summary>设置 IcpBeianQueryRealTimeCompletedEventArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="T:Shove.com_shovesoft_icp.Fakes.StubGateway">
            <summary>Shove.com_shovesoft_icp.Gateway 的存根类型</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.Abort">
            <summary>设置 WebClientProtocol.Abort() 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.Abort01">
            <summary>设置 WebClientProtocol.Abort() 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.AttachBackingFieldToSite">
            <summary>附加委托以将 StubGateway.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.CanRaiseEventsGet">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.Dispose(System.Boolean)">
            <summary>设置 Component.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.DisposeBoolean">
            <summary>设置 Component.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
            <summary>设置 SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage message, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.GetReaderForMessageSoapClientMessageInt32">
            <summary>设置 SoapHttpClientProtocol.GetReaderForMessage(SoapClientMessage message, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.GetService(System.Type)">
            <summary>设置 Component.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.GetServiceType">
            <summary>设置 Component.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWebRequest(System.Uri)">
            <summary>设置 SoapHttpClientProtocol.GetWebRequest(Uri uri) 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWebRequestUri">
            <summary>设置 SoapHttpClientProtocol.GetWebRequest(Uri uri) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWebResponse(System.Net.WebRequest)">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request) 的 存根</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request, IAsyncResult result) 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWebResponseWebRequest">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request) 的 stub</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWebResponseWebRequestIAsyncResult">
            <summary>设置 HttpWebClientProtocol.GetWebResponse(WebRequest request, IAsyncResult result) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
            <summary>设置 SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage message, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.GetWriterForMessageSoapClientMessageInt32">
            <summary>设置 SoapHttpClientProtocol.GetWriterForMessage(SoapClientMessage message, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.InitializeStub">
            <summary>初始化 type StubGateway 的新实例</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.SiteGet">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.SiteSetISite">
            <summary>设置 Component.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Fakes.StubGateway.ToString">
            <summary>设置 Component.ToString() 的 存根</summary>
        </member>
        <member name="F:Shove.com_shovesoft_icp.Fakes.StubGateway.ToString01">
            <summary>设置 Component.ToString() 的 stub</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.StubGateway.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.StubGateway.CanRaiseEvents">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.StubGateway.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.StubGateway.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Shove.com_shovesoft_icp.Fakes.StubGateway.Site">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
    </members>
</doc>
